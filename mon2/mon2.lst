# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\mon2\mon2.asm
   1  0000              ;----------------------------------------------------------------------------
   2  0000              ; MXOS - MON2.COM
   3  0000              ;
   4  0000              ; 2022-02-07 Дизассемблировано SpaceEngineer
   5  0000              ;----------------------------------------------------------------------------
   6  0000
   7  0000                  INCLUDE "../include/mxos.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\mon2\../include/mxos.inc
   1+ 0000              ;-----------------------------------------------------------------------
   2+ 0000              ; MXOS
   3+ 0000              ; Точки входа и настройки сборки MXOS
   4+ 0000              ;
   5+ 0000              ; Новая карта памяти:
   6+ 0000              ;   8FDF-8FFF - [  32 B] Переменные
   7+ 0000              ;   9000-BFFF - [12  KB] Экран
   8+ 0000              ;   C000-D3FF - [5120 B] DOS.SYS
   9+ 0000              ;   D400-DBFF - [2048 B] Свободно (2048 байт)
  10+ 0000              ;   DC00-EDFF - [ 512 B] Драйвер магнитофона
  11+ 0000              ;   DE00-DFFF - [ 512 B] Драйвер флеш-диска
  12+ 0000              ;   E000-E7FF - [2048 B] Шрифт
  13+ 0000              ;   E800-FAFF - [4864 B] Системные программы (NC.COM, E.COM, DL-RED.COM, FORMAT.COM, MON2.COM, ...)
  14+ 0000              ;   FB00-FEFF - [1024 B] Дисковый кэш (fat + каталог)
  15+ 0000              ;   FF00-FF81 - [ 130 B] Командная строка
  16+ 0000              ;   FF82-FFBF - [  62 B] Стек
  17+ 0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
  18+ 0000              ;   FFE0-FFFF - [  32 B] Оборудование
  19+ 0000              ;
  20+ 0000              ; Старая карта памяти:
  21+ 0000              ;   8FDF-8FFF - [  32 B] Переменные
  22+ 0000              ;   9000-BFFF - [12  KB] Экран
  23+ 0000              ;   C000-CFFF - [4096 B] DOS.SYS
  24+ 0000              ;   D000-E1FF - [4607 B] Системные программы (NC.COM, E.COM, DL-RED.COM)
  25+ 0000              ;   E200-E5FF - [1024 B] Свободно (1024 байт)
  26+ 0000              ;   E600-E7FF - [ 512 B] Драйвер магнитофона
  27+ 0000              ;   E800-E8FF - [ 256 B] Свободно (256 байт)
  28+ 0000              ;   E900-F0FF - [2048 B] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
  29+ 0000              ;   F100-F8FF - [2048 B] Системные программы (FORMAT.COM, MON2.COM, ...)
  30+ 0000              ;   F900-F9FF - [ 256 B] Свободно (256 байт)
  31+ 0000              ;   FA00-FAFF - [ 256 B] Драйвер флеш-диска
  32+ 0000              ;   FB00-FEFF - [1024 B] Дисковый буфер (fat + каталог)
  33+ 0000              ;   FF00-FF81 - [ 130 B] Командная строка
  34+ 0000              ;   FF82-FFBF - [  62 B] Стек
  35+ 0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
  36+ 0000              ;   FFE0-FFFF - [  32 B] Оборудование
  37+ 0000              ;-----------------------------------------------------------------------
  38+ 0000
  39+ 0000
  40+ 0000              ;-----------------------------------------------------------------------
  41+ 0000              ; Конфигурация сборки
  42+ 0000              ;-----------------------------------------------------------------------
  43+ 0000
  44+ 0000              NEW_MEMORY_MAP       =  1       ; Новая карта памяти
  45+ 0000              RAMD_MAX_PAGE        =  16      ; Максимальное количество страниц RAM диска
  46+ 0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
  47+ 0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
  48+ 0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
  49+ 0000              EMBED_FONT           =  0       ; Встроить шрифт в программу (при запуске шрифт копируется на FONT_ADDR)
  50+ 0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
  51+ 0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
  52+ 0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
  53+ 0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
  54+ 0000
  55+ 0000                  IF  NEW_MEMORY_MAP
  56+ 0000              FONT_ADDR = 0E000h  ; Адрес шрфита
  57+ 0000                  ELSE
  58+ 0000 ~            FONT_ADDR = 0E900h  ; Адрес шрфита
  59+ 0000                  ENDIF
  60+ 0000
  61+ 0000                  IF  LOAD_FONT
  62+ 0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
  63+ 0000                  ELSE
  64+ 0000 ~            FONT_ADDR_DIV_8 = -1
  65+ 0000                  ENDIF
  66+ 0000
  67+ 0000              ;-----------------------------------------------------------------------
  68+ 0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
  69+ 0000              ; Доступ к переменным и программ польователя:
  70+ 0000              ; ld a, bios_vars.lastKey
  71+ 0000              ;-----------------------------------------------------------------------
  72+ 0000
  73+ 0000                  STRUCT BIOS_VARIABLES
  74+ 0000 ~            _reserv_1     DW      -1              ; 8FDFh -
  75+ 0000 ~            tapeError     DW      0C800h          ; 8FE1h - Адрес, куда происходит переход при ошибке чтения с ленты
  76+ 0000 ~            tapeAddr      DW      -1              ; 8FE3h - Адрес программы загруженной с ленты
  77+ 0000 ~            _reserv_2     DW      -1              ; 8FE5h -
  78+ 0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; 8FE7h - Адрес альтернативного знакогенератора / 8
  79+ 0000 ~            cursorCfg     DB       21h ; 0A9h     ; 8FE9h - Внешний вид курсора (биты: 7 - мигание (если 0), 654 - положение (Y) от низа строки, 3210 - размер по высоте)
  80+ 0000 ~            koi7          DB       0   ; 0FFh     ; 8FEAh - 0FFh = включен KOI-7, 0 = включен KOI-8
  81+ 0000 ~            escMode       DB      -1              ; 8FEBh - Обработка ESC-последовательности
  82+ 0000 ~            keyLocks      DB      0BAh ; 3Ah      ; 8FECh - Caps Lock или Рус/Lat (3A - прописные анг, BA - строчные анг, BB - прописные рус, 3B - строчные рус)
  83+ 0000 ~            _reserv_3     DW      -1              ; 8FEDh -
  84+ 0000 ~            lastLastKey   DB      -1              ; 8FEFh - Предпоследняя нажатая клавиша
  85+ 0000 ~            lastKey       DB      -1              ; 8FF0h - Последняя нажатая клавиша
  86+ 0000 ~            beepFreq      DB       5Fh            ; 8FF1h - Частота звукового сигнала (также влияет на длительность)
  87+ 0000 ~            beepDuration  DB       20h            ; 8FF2h - Длительность звукового сигнала (сколько раз повторять посылку)
  88+ 0000 ~            tapeInverse   DB      0FFh            ; 8FF3h - Признак инверсии данных с ленты
  89+ 0000 ~            cursorDelay   DB       20h            ; 8FF4h - Задержка мигания курсора
  90+ 0000 ~            antiBsDelay   DB      0E0h            ; 8FF5h - Задержка защиты от дребезга контактов клавиш
  91+ 0000 ~            oldSP         DW      -1              ; 8FF6h - Используется для сохранения SP некоторыми функциями
  92+ 0000 ~            ramPageCount  DB      RAMD_MAX_PAGE   ; 8FF8h - Количество детектированных 64кб страниц RAM-диска
  93+ 0000 ~            _reserv_4     DB       0              ; 8FF9h -
  94+ 0000 ~            inverse       DW       0              ; 8FFAh - Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
  95+ 0000 ~            cursorY       DB      -1              ; 8FFCh - Положение курсора по вертикали в пикселях
  96+ 0000 ~            cursorX       DB      -1              ; 8FFDh - Положение курсора по горизонтали в пикселях / 2
  97+ 0000 ~            writeDelay    DB      28h             ; 8FFEh - Скорость при записи на ленту
  98+ 0000 ~            readDelay     DB      3Ch             ; 8FFFh - Скорость при чтении с ленты
  99+ 0000                  ENDS
 100+ 0000
 101+ 0000              ; Блок переменных BIOS начинается с адреса 8FDFh
 102+ 0000              bios_vars   BIOS_VARIABLES = 8FDFh
 103+ 0000
 104+ 0000              ;-----------------------------------------------------------------------
 105+ 0000              ; Стандартные точки входа ОС
 106+ 0000              ; Отмеченные [OLD] применять не рекомендуется
 107+ 0000              ; Отмеченные [MXOS2] - новые в MXOS 2
 108+ 0000              ;-----------------------------------------------------------------------
 109+ 0000
 110+ 0000              bios_init               = 0C000h ; Теплая перезагрузка
 111+ 0000
 112+ 0000              ; Устаревшие точки, лечше не применять
 113+ 0000              bios_keyScanOld         = 0C003h ; [OLD] Получить код нажатой клавиши, = bios_keyScan
 114+ 0000              bios_drawCursorOld      = 0C006h ; [OLD] Нарисовать/стереть курсор
 115+ 0000              bios_clearScreenOld     = 0C010h ; [OLD] Оистка экрана
 116+ 0000              bios_printCharOld       = 0C037h ; [OLD] Вывод символа на экран
 117+ 0000              bios_beep_Old           = 0C170h ; [OLD] Звуковой сигнал
 118+ 0000              bios_delay_l            = 0C18Fh ; [OLD] Задержка l циклов
 119+ 0000              bios_delay_b            = 0C190h ; [OLD] Задержка b циклов
 120+ 0000              bios_getchOld           = 0C337h ; [OLD] Ожидание ввода с клавиатуры
 121+ 0000              bios_tapeReadOld        = 0C377h ; [OLD] Чтение байта с магнитофона
 122+ 0000              bios_tapeWriteOld       = 0C3D0h ; [OLD] Запись байта на магнитофон
 123+ 0000              bios_cmp_hl_de          = 0C427h ; [OLD] Сравнить hl и de
 124+ 0000              bios_memcpy_bc_hl       = 0C42Dh ; [OLD] Скопировать блок памяти
 125+ 0000              bios_printStringOld     = 0C438h ; [OLD] Вывод строки на экран
 126+ 0000
 127+ 0000              ; Стандартные точки C800h
 128+ 0000              bios_reboot             = 0C800h ; Запустить NC.COM
 129+ 0000              bios_getch              = 0C803h ; Ожидание ввода с клавиатуры
 130+ 0000              bios_tapeRead           = 0C806h ; Чтение байта с магнитофона
 131+ 0000              bios_printChar          = 0C809h ; Вывод символа на экран
 132+ 0000              bios_tapeWrite          = 0C80Ch ; Запись байта на магнитофон
 133+ 0000              bios_input              = 0C80Fh ; Ввод строки с клавиатуры
 134+ 0000              bios_keyCheck           = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
 135+ 0000              bios_printHexByte       = 0C815h ; Вывод HEX числа на экран (байт)
 136+ 0000              bios_printString        = 0C818h ; Вывод строки на экран
 137+ 0000              bios_keyScan            = 0C81Bh ; Получить код нажатой клавиши
 138+ 0000              bios_getCursorPos       = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
 139+ 0000              bios_setCursorPos       = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
 140+ 0000              bios_tapeLoad           = 0C824h ; Загрузить программу с магнитофона
 141+ 0000              bios_tapeSave           = 0C827h ; Сохранить программу на магнитофон
 142+ 0000              bios_calcCS             = 0C82Ah ; Расчет контрольной суммы
 143+ 0000              bios_printHexWord       = 0C82Dh ; Вывод HEX числа на экран (слово)
 144+ 0000              bios_getMemTop          = 0C830h ; Получить объем доступной памяти
 145+ 0000              bios_setMemTop          = 0C833h ; Установить объем доступной памяти
 146+ 0000              bios_printer            = 0C836h ; Напечатать байт на принтере
 147+ 0000                  IF RAMFOS_COMPATIBILITY
 148+ 0000              bios_strToHex           = 0C839h ; [MXOS2] Преобразвоние строки в HEX формате в число
 149+ 0000                  ELSE
 150+ 0000 ~            bios_rebootAlt          = 0C839h ; Запустить NC.COM
 151+ 0000                  ENDIF
 152+ 0000              bios_rebootAlt2         = 0C83Ch ; Запустить NC.COM
 153+ 0000              bios_fileList           = 0C83Fh ; Получить список файлов
 154+ 0000              bios_fileGetSetDrive    = 0C842h ; Получить/установить активное устройство
 155+ 0000              bios_fileCreate         = 0C845h ; Создать файл
 156+ 0000              bios_fileLoad           = 0C848h ; Загрузить файл по адресу из заголовка этого файла
 157+ 0000              bios_fileDelete         = 0C84Bh ; Удалить файл
 158+ 0000              bios_fileRename         = 0C84Eh ; Переименовать файл
 159+ 0000              bios_fileLoadInfo       = 0C851h ; Загрузить информацию о файле
 160+ 0000              bios_fileGetSetAddr     = 0C854h ; Получить/установить адрес загрузки файла
 161+ 0000              bios_fileGetSetAttr     = 0C857h ; Получить/установить атрибуты файла
 162+ 0000              bios_fileNamePrepare    = 0C85Ah ; Преобразовать имя файла во внутренний формат
 163+ 0000              bios_fileExec           = 0C85Dh ; Запустить файл
 164+ 0000              bios_installDriver      = 0C860h ; Установить драйвер накопителя
 165+ 0000              bios_diskDriver         = 0C863h ; Драйвер выбранного диска
 166+ 0000              bios_fileLoad2          = 0C866h ; Загрузить файл по адресу de
 167+ 0000
 168+ 0000              ; Новые точки C800h MXOS2
 169+ 0000              bios_printCharReal      = 0C869h ; [MXOS2] Вывод символа на экран (только реальные символы)
 170+ 0000              bios_printDecWord       = 0C86Ch ; [MXOS2] Вывод числа экран в десятичной форме
 171+ 0000              bios_setRAMDDriver      = 0C86Fh ; [MXOS2] Установить драйвр рам-диска
 172+ 0000              bios_getDriveFreeSpace  = 0C872h ; [MXOS2] Получить оставшийся свободный объем диска
 173+ 0000              bios_upperCase          = 0C875h ; [MXOS2] Перевод кода символа КОИ-8 в верхний регистр
 174+ 0000              bios_strcmp             = 0C878h ; [MXOS2] Сравнение строк, чувствительное к регистру
 175+ 0000              bios_stricmp            = 0C87Bh ; [MXOS2] Сравнение строк, нечувствительное к регистру
 176+ 0000              bios_sub_hl_de          = 0C87Eh ; [MXOS2] Вычитание hl и de: hl = hl - de
 177+ 0000              bios_div_hl_2           = 0C881h ; [MXOS2] Деление hl на 2: hl = hl / 2
 178+ 0000              bios_mul_hl_de          = 0C884h ; [MXOS2] Умножение hl на de: hl = hl * de
 179+ 0000              bios_div_hl_de          = 0C887h ; [MXOS2] Деление hl на de: hl = hl / de, de = hl % de
 180+ 0000
 181+ 0000              ;-----------------------------------------------------------------------
 182+ 0000              ; Адрес таблицы переходов драйвера магнитофона
 183+ 0000              ;-----------------------------------------------------------------------
 184+ 0000
 185+ 0000              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
 186+ 0000
 187+ 0000              ;-----------------------------------------------------------------------
 188+ 0000              ; Непереключаемое ОЗУ ПК "Специалист-MX" (0FFC0h-0FFDF, 32 байта)
 189+ 0000              ;-----------------------------------------------------------------------
 190+ 0000
 191+ 0000              bios_RAMDRead   = 0FFC0h ; п/п чтения из ДОЗУ
 192+ 0000              bios_RAMDWrite  = 0FFD0h ; п/п записи в  ДОЗУ
 193+ 0000
 194+ 0000              ;-----------------------------------------------------------------------
 195+ 0000              ; Порты устройств ПК "Специалист-MX2" (0FFE0h-0FFFF, 32 байта)
 196+ 0000              ;-----------------------------------------------------------------------
 197+ 0000
 198+ 0000              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
 199+ 0000              IO_KEYB_B       =  0FFE1h
 200+ 0000              IO_KEYB_C       =  0FFE2h
 201+ 0000              IO_KEYB_MODE    =  0FFE3h
 202+ 0000              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
 203+ 0000              IO_PROG_B       =  0FFE5h
 204+ 0000              IO_PROG_C       =  0FFE6h
 205+ 0000              IO_PROG_MODE    =  0FFE7h
 206+ 0000              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
 207+ 0000              IO_FDD_TRACK    =  0FFE9h
 208+ 0000              IO_FDD_SECTOR   =  0FFEAh
 209+ 0000              IO_FDD_DATA     =  0FFEBh
 210+ 0000              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
 211+ 0000              IO_TIMER_CH1    =  0FFEDh
 212+ 0000              IO_TIMER_CH2    =  0FFEEh
 213+ 0000              IO_TIMER_MODE   =  0FFEFh
 214+ 0000              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
 215+ 0000              IO_FDD_MOTOR    =  0FFF1h
 216+ 0000              IO_FDD_SIDE     =  0FFF2h
 217+ 0000              IO_FDD_DRIVE    =  0FFF3h
 218+ 0000              IO_COLOR        =  0FFF8h   ; регистр цвета
 219+ 0000              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
 220+ 0000              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
 221+ 0000              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
 222+ 0000              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
 223+ 0000
 224+ 0000              ;-----------------------------------------------------------------------
 225+ 0000              ; Структура файловой системы
 226+ 0000              ;-----------------------------------------------------------------------
 227+ 0000
 228+ 0000              ; Структура каталога
 229+ 0000              DIR_DESCR_SIZE  = 32    ; размер дескриптора файла в каталоге (байт)
 230+ 0000              DIR_NAME_LENGTH = 8     ; длина имени файла  (байт)
 231+ 0000              FAT_ITEM_SIZE   = 2     ; размер записи в таблице FAT (байт)
 232+ 0000
 233+ 0000              SECTOR_SIZE  = 00100h   ; размер сектора 256 байт
 234+ 0000              CLUSTER_SIZE = 00100h   ; размер кластера 256 байт
 235+ 0000
 236+ 0000              ; Специальные коды кластеров FAT
 237+ 0000              FAT12_BAD = 00FF7h  ; плохой кластер
 238+ 0000              FAT16_BAD = 0FFF7h
 239+ 0000              FAT12_EOC = 00FFFh  ; последний кластер файла
 240+ 0000              FAT16_EOC = 0FFFFh
 241+ 0000              FAT12_RES = 00FFFh  ; зарезервированный кластер
 242+ 0000              FAT16_RES = 0FFFFh
 243+ 0000
 244+ 0000              ;-----------------------------------------------------------------------
 245+ 0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
 246+ 0000              ;-----------------------------------------------------------------------
 247+ 0000
 248+ 0000                  STRUCT FILE_DESCRIPTOR  ; 32 байта
 249+ 0000 ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 8 байт  - имя файла
 250+ 0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
 251+ 0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
 252+ 0000 ~            ntReserved      BLOCK   1                   ; смещение 0Ch, 1 байт  - используются в Windows NT
 253+ 0000 ~            createTimeTenth BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
 254+ 0000 ~            createTime      BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
 255+ 0000 ~            createDate      BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
 256+ 0000 ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
 257+ 0000 ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
 258+ 0000 ~            writeTime       BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
 259+ 0000 ~            writeDate       BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
 260+ 0000 ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
 261+ 0000 ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
 262+ 0000                  ENDS
 263+ 0000
 264+ 0000              ;-----------------------------------------------------------------------
 265+ 0000              ; Информация о активном накопителе (диске)
 266+ 0000              ;-----------------------------------------------------------------------
 267+ 0000
 268+ 0000                  STRUCT DISK_INFO
 269+ 0000 ~            sectorSize          BLOCK   2   ; размер сектора, байт (256, 512, 1024)
 270+ 0000 ~            sectorsPerCluster   BLOCK   2   ; размер кластера, секторов (1, 2, 4, 8)
 271+ 0000 ~            resSectors          BLOCK   2   ; сколько секторов занимает зарезервированная область = первый сектор таблицы fat
 272+ 0000 ~            fatSectors          BLOCK   2   ; сколько секторов занимает таблица fat
 273+ 0000 ~            dirSectors          BLOCK   2   ; сколько секторов занимает корневой каталог
 274+ 0000 ~            totalSectors        BLOCK   2   ; сколько всего секторов на диске
 275+ 0000 ~            rootDirMaxFiles     BLOCK   2   ; максимум файлов в корневом каталоге
 276+ 0000 ~            descrPerSector      BLOCK   2   ; сколько дескрипторов файлов вмещается в один сектор
 277+ 0000 ~            fatNumCells         BLOCK   2   ; количество ячеек в таблице fat (= fatSectors * sectorSize / 2)
 278+ 0000 ~            dirStartSector      BLOCK   2   ; первый сектор корневого каталога
 279+ 0000 ~            dataStartSector     BLOCK   2   ; первый сектор области данных
 280+ 0000 ~            volumeLabel         BLOCK  12   ; метка тома и 0 в конце
 281+ 0000 ~            isValid             BLOCK   1   ; 0 = нет драйвера, 1 = диск не распознан, 2 = диск распознан, корректно отформатирован
 282+ 0000                  ENDS
 283+ 0000
 284+ 0000              DISK_NO_DRIVER = 0
 285+ 0000              DISK_INVALID   = 1
 286+ 0000              DISK_VALID     = 2
 287+ 0000
 288+ 0000              ;-----------------------------------------------------------------------
 289+ 0000              ; Буферы в памяти
 290+ 0000              ;-----------------------------------------------------------------------
 291+ 0000
 292+ 0000              ; Дисковый кэш
 293+ 0000              FAT_CACHE_ADDR = 0FB00h ; адрес кэша секторов fat в памяти
 294+ 0000              FAT_CACHE_SIZE = 1024   ; размер кэша в байтах
 295+ 0000              FAT_CACHE_CAPACITY = FAT_CACHE_SIZE / SECTOR_SIZE   ; сколько секторов вмещается в кэш
 296+ 0000
 297+ 0000              ; Буфер для загрузки BAT файла
 298+ 0000                  IF NEW_MEMORY_MAP
 299+ 0000              BAT_BUFFER = 0E800h
 300+ 0000                  ELSE
 301+ 0000 ~            BAT_BUFFER = 0FC00h
 302+ 0000                  ENDIF
 303+ 0000
 304+ 0000              ; Командная строка и стек
 305+ 0000              CMD_LINE   = 0FF00h  ; 192 байта, но в конце стек
 306+ 0000              STACK_ADDR = 0FFC0h  ; стек
 307+ 0000
 308+ 0000              ;-----------------------------------------------------------------------
 309+ 0000              ; Всякие полезности
 310+ 0000              ;-----------------------------------------------------------------------
 311+ 0000
 312+ 0000              ; Макрос для заполнения памяти от текущего адреса до указанного
 313+ 0000                  MACRO ORG_PAD adr
 314+ 0000 ~                     IF $ > adr
 315+ 0000 ~                       ; вывод сообщения об ошибке
 316+ 0000 ~                       ASSERT 0
 317+ 0000 ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
 318+ 0000 ~                     ELSE
 319+ 0000 ~                       ; заполнение памяти
 320+ 0000 ~                       BLOCK adr-$, 0FFh
 321+ 0000 ~                     ENDIF
 322+ 0000 ~                     ORG adr
 323+ 0000                  ENDM
 324+ 0000
 325+ 0000                  MACRO ORG_PAD0 adr
 326+ 0000 ~                     IF $ > adr
 327+ 0000 ~                       ; вывод сообщения об ошибке
 328+ 0000 ~                       ASSERT 0
 329+ 0000 ~                       DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
 330+ 0000 ~                     ELSE
 331+ 0000 ~                       ; заполнение памяти
 332+ 0000 ~                       BLOCK adr-$, 0
 333+ 0000 ~                     ENDIF
 334+ 0000 ~                     ORG adr
 335+ 0000                  ENDM
 336+ 0000
 337+ 0000              ; Макросы для проверки текущего адреса
 338+ 0000                  MACRO ASSERT_EQUAL adr
 339+ 0000 ~                     IF $ != adr
 340+ 0000 ~                       ASSERT 0
 341+ 0000 ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
 342+ 0000 ~                     ENDIF
 343+ 0000                  ENDM
 344+ 0000
 345+ 0000                  MACRO ASSERT_DONT_FIT adr
 346+ 0000 ~                     IF $ > adr
 347+ 0000 ~                       ASSERT 0
 348+ 0000 ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
 349+ 0000 ~                     ENDIF
 350+ 0000                  ENDM
 351+ 0000
 352+ 0000              ;-----------------------------------------------------------------------
 353+ 0000              ; Конец
 354+ 0000              ;-----------------------------------------------------------------------
 355+ 0000
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\mon2\../include/mxos.inc
   8  0000
   9  0000              ; Используемые подпрограммы DOS.SYS:
  10  0000              ; bios_keyScanOld      = 0C003h
  11  0000              ; bios_drawCursorOld   = 0C006h
  12  0000              ; bios_printCharOld    = 0C037h
  13  0000              ; bios_beep_Old        = 0C170h
  14  0000              ; bios_getchOld        = 0C337h
  15  0000              ; bios_tapeReadOld     = 0C377h
  16  0000              ; bios_tapeWriteOld    = 0C3D0h
  17  0000              ; bios_cmp_hl_de       = 0C427h
  18  0000              ; bios_printStringOld  = 0C438h
  19  0000              ; bios_reboot          = 0C800h
  20  0000              ; bios_getch           = 0C803h
  21  0000              ; bios_printChar       = 0C809h
  22  0000              ; bios_input           = 0C80Fh
  23  0000              ; bios_keyCheck        = 0C812h
  24  0000              ; bios_printHexByte    = 0C815h
  25  0000              ; bios_printString     = 0C818h
  26  0000              ; bios_keyScan         = 0C81Bh
  27  0000              ; bios_getCursorPos    = 0C81Eh
  28  0000              ; bios_tapeLoad        = 0C824h
  29  0000              ; bios_tapeSave        = 0C827h
  30  0000              ; bios_calcCS          = 0C82Ah
  31  0000              ; bios_getMemTop       = 0C830h
  32  0000              ; bios_setMemTop       = 0C833h
  33  0000              ; bios_printer         = 0C836h
  34  0000              ; bios_fileList        = 0C83Fh
  35  0000              ; bios_fileGetSetDrive = 0C842h
  36  0000              ; bios_fileCreate      = 0C845h
  37  0000              ; bios_fileLoad        = 0C848h
  38  0000              ; bios_fileLoadInfo    = 0C851h
  39  0000              ; bios_fileGetSetAddr  = 0C854h
  40  0000              ; bios_fileGetSetAttr  = 0C857h
  41  0000              ; bios_fileNamePrepare = 0C85Ah
  42  0000              ; bios_fileLoad2       = 0C866h
  43  0000
  44  0000              ; Используемые переменные DOS.SYS:
  45  0000              ; bios_vars.tapeError  = 8FE1h
  46  0000              ; bios_vars.tapeAddr   = 8FE3h
  47  0000              ; bios_vars.cursorCfg  = 8FE9h
  48  0000              ; bios_vars.koi7       = 8FEAh
  49  0000              ; bios_vars.cursorX    = 8FFCh
  50  0000
  51  0000              ; Собственные переменные
  52  0000                  STRUCT MON2_VARS_1
  53  0000 ~            V_8F80:     DS    1
  54  0000 ~            V_8F81:     DS    2
  55  0000 ~            V_8F83:     DS    2
  56  0000 ~            V_8F85:     DS    2
  57  0000 ~            V_8F87:     DS    2
  58  0000 ~            V_8F89:     DS    1
  59  0000 ~            V_8F8A:     DS    1
  60  0000 ~            V_8F8B:     DS    1
  61  0000 ~            V_8F8C:     DS    2
  62  0000 ~            V_8F8E:     DS    2
  63  0000 ~            V_8F90:     DS    1
  64  0000 ~            V_8F91:     DS    4
  65  0000 ~            V_8F95:     DS    1
  66  0000 ~            V_8F96:     DS    1
  67  0000 ~            V_8F97:     DS    2
  68  0000 ~            V_8F99:     DS    1
  69  0000 ~            V_8F9A:     DS    3
  70  0000 ~            V_8F9D:     DS    2
  71  0000 ~            V_8F9F:     DS    2
  72  0000 ~            V_8FA1:     DS    2
  73  0000 ~            V_8FA3:     DS    2
  74  0000 ~            V_8FA5:     DS    2
  75  0000 ~            V_8FA7:     DS    4
  76  0000 ~            V_8FAB:     DS    2
  77  0000                  ENDS
  78  0000
  79  0000                  STRUCT MON2_VARS_2
  80  0000 ~            V_F0E0:     DS    5
  81  0000 ~            V_F0E5:     DS    1
  82  0000 ~            V_F0E6:     DS    1
  83  0000 ~            V_F0E7:     DS    1
  84  0000                  ENDS
  85  0000
  86  0000                  STRUCT MON2_VARS_3
  87  0000 ~            ; похоже на старый дескриптор файла
  88  0000 ~            V_F900:     DS    10    ; имя (6), расширение (3), атрибуты (1)
  89  0000 ~            V_F90A:     DS    2     ; адрес загрузки
  90  0000 ~            V_F90C:     DS    2     ; размер-1
  91  0000                  ENDS
  92  0000
  93  0000              ; Адреса блоков переменных
  94  0000              vars1 MON2_VARS_1 = 08F80H
  95  0000              vars2 MON2_VARS_2 = 0F0E0H
  96  0000              vars3 MON2_VARS_3 = 0F900H
  97  0000
  98  0000
  99  0000              ; Начало программы
 100  0000                  ORG   0F100h
 101  F100
 102  F100                      ; Начинаем с очистки экрана
 103  F100 0E 1F                LD    C,1FH ; rjl символа очистки экрана
 104  F102 CD 09 C8             CALL  bios_printChar
 105  F105
 106  F105                      ; Рестарт без очистки экрана
 107  F105              restartNoCls:
 108  F105 31 BF FF             LD    SP,0FFBFH
 109  F108 21 00 F8             LD    HL,mon2_restart           ; установить обработчик ошибки магнитофона
 110  F10B 22 E1 8F             LD    (bios_vars.tapeError),HL  ; на рестарт монитора
 111  F10E 21 FF 7E             LD    HL,7EFFH    ; 32511
 112  F111 22 AB 8F             LD    (vars1.V_8FAB),HL
 113  F114 CD 1A F1             CALL  SUB1
 114  F117 C3 05 F1             JP    restartNoCls
 115  F11A
 116  F11A 21 FA F5     SUB1:   LD    HL,txtNewLine             ; 62970
 117  F11D CD 38 C4             CALL  bios_printStringOld
 118  F120 1E 02                LD    E,02H         ; 2
 119  F122 CD 42 C8             CALL  bios_fileGetSetDrive
 120  F125 C6 41                ADD   A,41H         ; 65 'A'
 121  F127 4F                   LD    C,A
 122  F128 CD 09 C8             CALL  bios_printChar
 123  F12B 0E 3E                LD    C,3EH         ; 62 '>'
 124  F12D CD 09 C8             CALL  bios_printChar
 125  F130 CD D5 F1             CALL  SUB2
 126  F133 CD E4 F5             CALL  SUB19
 127  F136 E5                   PUSH  HL
 128  F137 D5                   PUSH  DE
 129  F138 C5                   PUSH  BC
 130  F139 1E 02                LD    E,02H         ; 2
 131  F13B CD 42 C8             CALL  bios_fileGetSetDrive
 132  F13E F5                   PUSH  AF
 133  F13F 21 60 8F             LD    HL,8F60H    ; 36704
 134  F142 11 00 F9             LD    DE,vars3.V_F900   ; 63744
 135  F145 CD 5A C8             CALL  bios_fileNamePrepare
 136  F148 1E 02                LD    E,02H         ; 2
 137  F14A CD 42 C8             CALL  bios_fileGetSetDrive
 138  F14D 5F                   LD    E,A
 139  F14E F1                   POP   AF
 140  F14F BB                   CP    E
 141  F150 C1                   POP   BC
 142  F151 D1                   POP   DE
 143  F152 E1                   POP   HL
 144  F153 C0                   RET   NZ
 145  F154 CD EB F5             CALL  printNewLine
 146  F157 CD 83 F5             CALL  SUB14
 147  F15A FE 44                CP    44H           ; 68 'D'
 148  F15C CA B4 F6             JP    Z,LBL54
 149  F15F FE 4D                CP    4DH           ; 77 'M'
 150  F161 CA 1B F6             JP    Z,LBL46
 151  F164 FE 4C                CP    4CH           ; 76 'L'
 152  F166 CA 4F F5             JP    Z,LBL39
 153  F169 FE 4B                CP    4BH           ; 75 'K'
 154  F16B CA 46 F5             JP    Z,calcAndPrintCRC
 155  F16E FE 54                CP    54H           ; 84 'T'
 156  F170 CA 04 F5             JP    Z,LBL34
 157  F173 FE 58                CP    58H           ; 88 'X'
 158  F175 CA 68 F3             JP    Z,LBL15
 159  F178 FE 57                CP    57H           ; 87 'W'
 160  F17A CA 27 F8             JP    Z,mon2_tapeSave
 161  F17D FE 52                CP    52H           ; 82 'R'
 162  F17F CA 20 F3             JP    Z,LBL12
 163  F182 FE 43                CP    43H           ; 67 'C'
 164  F184 CA 0F F5             JP    Z,LBL35
 165  F187 FE 48                CP    48H           ; 72 'H'
 166  F189 CA 53 F3             JP    Z,LBL14
 167  F18C FE 4E                CP    4EH           ; 78 'N'
 168  F18E CA DF F4             JP    Z,LBL31
 169  F191 FE 47                CP    47H           ; 71 'G'
 170  F193 CA BE F3             JP    Z,LBL18
 171  F196 FE 46                CP    46H           ; 70 'F'
 172  F198 CA FB F4             JP    Z,LBL33
 173  F19B FE 53                CP    53H           ; 83 'S'
 174  F19D CA 2A F4             JP    Z,LBL21
 175  F1A0 FE 4A                CP    4AH           ; 74 'J'
 176  F1A2 CA CB F1             JP    Z,LBL2
 177  F1A5 FE 3F                CP    3FH           ; 63 '?'
 178  F1A7 CA DE F1             JP    Z,Dir_DirDisk
 179  F1AA FE 42                CP    42H           ; 66 'B'
 180  F1AC CA 2E F2             JP    Z,LBL5
 181  F1AF FE 41                CP    41H           ; 65 'A'
 182  F1B1 CA 7F F2             JP    Z,LBL7
 183  F1B4 FE 56                CP    56H           ; 86 'V'
 184  F1B6 CA 90 F2             JP    Z,LBL8
 185  F1B9 FE 55                CP    55H           ; 85 'U'
 186  F1BB CA B7 F2             JP    Z,LBL9
 187  F1BE FE 59                CP    59H           ; 89 'Y'
 188  F1C0 CA DF F2             JP    Z,LBL10
 189  F1C3 FE 51                CP    51H           ; 81 'Q'
 190  F1C5 CA F2 F2             JP    Z,Dir_GetFileAttr
 191  F1C8 C3 8A F6             JP    LBL52
 192  F1CB CD 12 C8     LBL2:   CALL  bios_keyCheck             ; [2]
 193  F1CE 3C                   INC   A
 194  F1CF CA 00 C8             JP    Z,bios_reboot
 195  F1D2 C3 CB F1             JP    LBL2
 196  F1D5 21 60 8F     SUB2:   LD    HL,8F60H    ; 36704
 197  F1D8 36 00                LD    (HL),00H
 198  F1DA 23                   INC   HL
 199  F1DB 36 00                LD    (HL),00H
 200  F1DD C9                   RET
 201  F1DE
 202  F1DE                      ; Директива ? - вывод каталога диска
 203  F1DE              Dir_DirDisk:
 204  F1DE 21 00 F9             LD    HL,vars3.V_F900   ; буфер
 205  F1E1 CD 3F C8             CALL  bios_fileList
 206  F1E4              DirDiskLoop:
 207  F1E4 7E                   LD    A,(HL)            ; первый символ имени файла
 208  F1E5 3C                   INC   A
 209  F1E6 C8                   RET   Z                 ; если FF (конец каталога) - выходим
 210  F1E7 CD 12 C8             CALL  bios_keyCheck     ; Проверяем, не нажата ли клавиша
 211  F1EA FE 1F                CP    1FH               ; СТР
 212  F1EC CC 03 C8             CALL  Z,bios_getch      ; если нажата СТР, ждем нажатия СТР еще раз
 213  F1EF FE 1F                CP    1FH               ; СТР
 214  F1F1 C8                   RET   Z                 ; выход, если СТР нажата еще раз
 215  F1F2 06 06                LD    B,06H             ; печатаем 6 символов имени файла
 216  F1F4 CD 24 F2             CALL  printStringB
 217  F1F7 0E 2E                LD    C,2EH             ; печатаем точку
 218  F1F9 CD 09 C8             CALL  bios_printChar
 219  F1FC 06 03                LD    B,03H             ; печатаем 3 символа расширения файла
 220  F1FE CD 24 F2             CALL  printStringB
 221  F201 CD 9F F6             CALL  printSpace
 222  F204 23                   INC   HL                ; переходим через байт атрибута файла
 223  F205 5E                   LD    E,(HL)            ; DE = адрес загрузки файла
 224  F206 23                   INC   HL
 225  F207 56                   LD    D,(HL)
 226  F208 D5                   PUSH  DE                ; адрес загрузки файла в стеке
 227  F209 23                   INC   HL
 228  F20A 5E                   LD    E,(HL)            ; DE = размер файла
 229  F20B 23                   INC   HL
 230  F20C 56                   LD    D,(HL)
 231  F20D E3                   EX    (SP),HL           ; текущий указатель дескриптора в стек, а HL = адрес загрузки файла
 232  F20E CD 35 F5             CALL  printHexWordHL   ; печатаем начальный адрес загрузки файла
 233  F211 19                   ADD   HL,DE
 234  F212 CD 35 F5             CALL  printHexWordHL   ; печатаем конечынй адрес загрузки файла
 235  F215 E1                   POP   HL                ; HL = указатель дескриптора
 236  F216 7D                   LD    A,L
 237  F217 E6 F0                AND   0F0H
 238  F219 6F                   LD    L,A               ; Обнуляем младшие 4 бита HL - переход на начало текущего дескриптора файла
 239  F21A 11 10 00             LD    DE,0010H
 240  F21D 19                   ADD   HL,DE             ; HL += 16 - переход на следующий дескриптор файла
 241  F21E CD EB F5             CALL  printNewLine
 242  F221 C3 E4 F1             JP    DirDiskLoop
 243  F224
 244  F224                      ; Печать строки по адресу HL длиной B
 245  F224              printStringB:
 246  F224 4E                   LD    C,(HL)
 247  F225 CD 09 C8             CALL  bios_printChar
 248  F228 23                   INC   HL
 249  F229 05                   DEC   B
 250  F22A C2 24 F2             JP    NZ,printStringB
 251  F22D C9                   RET
 252  F22E
 253  F22E 22 0A F9     LBL5:   LD    (vars3.V_F90A),HL
 254  F231 EB                   EX    DE,HL
 255  F232 7A                   LD    A,D
 256  F233 2F                   CPL
 257  F234 57                   LD    D,A
 258  F235 7B                   LD    A,E
 259  F236 2F                   CPL
 260  F237 5F                   LD    E,A
 261  F238 13                   INC   DE
 262  F239 19                   ADD   HL,DE
 263  F23A 22 0C F9             LD    (vars3.V_F90C),HL
 264  F23D CD 09 F3             CALL  EnterFileName
 265  F240 CD 45 C8             CALL  bios_fileCreate
 266  F243 21 59 F2             LD    HL,txtSmallDisk             ; 62041
 267  F246 DC 4A F2             CALL  C,SUB4
 268  F249 C9                   RET
 269  F24A B7           SUB4:   OR    A
 270  F24B CA 52 F2             JP    Z,LBL6
 271  F24E CD 18 C8             CALL  bios_printString
 272  F251 C9                   RET
 273  F252 21 66 F2     LBL6:   LD    HL,txtSmallDir             ; 62054
 274  F255 CD 18 C8             CALL  bios_printString
 275  F258 C9                   RET
 276  F259
 277  F259                      ; Русский текст в кодировке КОИ-8
 278  F259 0A 0D 6D 61  txtSmallDisk:   DB  0AH,0DH,"mal disk !",00H
 278  F25D 6C 20 64 69
 278  F261 73 6B 20 21
 278  F265 00
 279  F266 0A 0D 6D 61  txtSmallDir:    DB  0AH,0DH,"mal DIR !", 00H
 279  F26A 6C 20 44 49
 279  F26E 52 20 21 00
 280  F272 0A 0D 6E 65  txtNoFile:      DB  0AH,0DH,"net fajla ",00H
 280  F276 74 20 66 61
 280  F27A 6A 6C 61 20
 280  F27E 00
 281  F27F
 282  F27F E5           LBL7:   PUSH  HL
 283  F280 CD 09 F3             CALL  EnterFileName
 284  F283 D1                   POP   DE
 285  F284 0E 01                LD    C,01H
 286  F286 CD 54 C8             CALL  bios_fileGetSetAddr
 287  F289 21 72 F2             LD    HL,txtNoFile             ; 62066
 288  F28C DC 18 C8             CALL  C,bios_printString
 289  F28F C9                   RET
 290  F290 E5           LBL8:   PUSH  HL
 291  F291 CD 09 F3             CALL  EnterFileName
 292  F294 D1                   POP   DE
 293  F295 D5                   PUSH  DE
 294  F296 CD 66 C8             CALL  bios_fileLoad2
 295  F299 F5                   PUSH  AF
 296  F29A 21 72 F2             LD    HL,txtNoFile             ; 62066
 297  F29D DC 18 C8             CALL  C,bios_printString
 298  F2A0 F1                   POP   AF
 299  F2A1 D1                   POP   DE
 300  F2A2 D8                   RET   C
 301  F2A3 D5                   PUSH  DE
 302  F2A4 21 00 F9             LD    HL,vars3.V_F900   ; 63744
 303  F2A7 CD 51 C8             CALL  bios_fileLoadInfo
 304  F2AA 2A 0C F9             LD    HL,(vars3.V_F90C)
 305  F2AD EB                   EX    DE,HL
 306  F2AE E1                   POP   HL
 307  F2AF CD 35 F5             CALL  printHexWordHL
 308  F2B2 19                   ADD   HL,DE
 309  F2B3 CD 35 F5             CALL  printHexWordHL
 310  F2B6 C9                   RET
 311  F2B7 CD 09 F3     LBL9:   CALL  EnterFileName
 312  F2BA CD 48 C8             CALL  bios_fileLoad
 313  F2BD F5                   PUSH  AF
 314  F2BE 21 72 F2             LD    HL,txtNoFile             ; 62066
 315  F2C1 DC 18 C8             CALL  C,bios_printString
 316  F2C4 CD 9F F6             CALL  printSpace
 317  F2C7 F1                   POP   AF
 318  F2C8 D8                   RET   C
 319  F2C9 21 00 F9             LD    HL,vars3.V_F900   ; 63744
 320  F2CC CD 51 C8             CALL  bios_fileLoadInfo
 321  F2CF 2A 0A F9             LD    HL,(vars3.V_F90A)
 322  F2D2 E5                   PUSH  HL
 323  F2D3 CD 35 F5             CALL  printHexWordHL
 324  F2D6 D1                   POP   DE
 325  F2D7 2A 0C F9             LD    HL,(vars3.V_F90C)
 326  F2DA 19                   ADD   HL,DE
 327  F2DB CD 35 F5             CALL  printHexWordHL
 328  F2DE C9                   RET
 329  F2DF
 330  F2DF E5           LBL10:  PUSH  HL
 331  F2E0 CD 09 F3             CALL  EnterFileName         ; ввод имени файла
 332  F2E3 0E 01                LD    C,01H                 ; режим для фаункции bios_fileGetSetAttr - установка байта атрибутов файла
 333  F2E5 E3                   EX    (SP),HL
 334  F2E6 7D                   LD    A,L
 335  F2E7 E1                   POP   HL
 336  F2E8 CD 57 C8             CALL  bios_fileGetSetAttr   ; установка байта атрибутов файла
 337  F2EB 21 72 F2             LD    HL,txtNoFile
 338  F2EE DC 18 C8             CALL  C,bios_printString    ; если файл не найден - вывести сообщение
 339  F2F1 C9                   RET
 340  F2F2
 341  F2F2                      ; Директива Q - вывод атрибутов файла
 342  F2F2              Dir_GetFileAttr:
 343  F2F2 CD 09 F3             CALL  EnterFileName         ; ввод имени файла
 344  F2F5 0E 02                LD    C,02H                 ; режим для фаункции bios_fileGetSetAttr - чтение байта атрибутов файла
 345  F2F7 CD 57 C8             CALL  bios_fileGetSetAttr   ; чтение байта атрибутов файла
 346  F2FA F5                   PUSH  AF                    ; результат и флаг ошибки (cf) - в стек
 347  F2FB 21 72 F2             LD    HL,txtNoFile
 348  F2FE DC 18 C8             CALL  C,bios_printString    ; если файл не найден - вывести сообщение
 349  F301 CD 9F F6             CALL  printSpace
 350  F304 F1                   POP   AF                    ; вытаскиваем байт атрибутов
 351  F305 D4 15 C8             CALL  NC,bios_printHexByte  ; печатаем байт атрибутов, если не было ошибки
 352  F308 C9                   RET
 353  F309
 354  F309                      ; Запрос имени файла
 355  F309                      ; на выходе:
 356  F309                      ;   HL = адрем буфера с подготовленным именем файла
 357  F309              EnterFileName:
 358  F309 21 0B F6             LD    HL,txtFileQuestMark   ; печать приглашеиня ввести имя файла
 359  F30C CD 18 C8             CALL  bios_printString
 360  F30F 21 60 8F             LD    HL,8F60H              ; буфер для ввода строки
 361  F312 11 6D 8F             LD    DE,8F6DH
 362  F315 CD 0F C8             CALL  bios_input
 363  F318 11 00 F9             LD    DE,vars3.V_F900       ; буфер для подготовленного имени файла
 364  F31B CD 5A C8             CALL  bios_fileNamePrepare  ; подготавливаем имя файла
 365  F31E EB                   EX    DE,HL                 ; HL = подготовленное имя файла
 366  F31F C9                   RET
 367  F320
 368  F320 CD 24 F8     LBL12:  CALL  SUB34
 369  F323 C5                   PUSH  BC
 370  F324 D5                   PUSH  DE
 371  F325 E5                   PUSH  HL
 372  F326 CD 2A C8             CALL  bios_calcCS
 373  F329 E1                   POP   HL
 374  F32A CD 35 F5             CALL  printHexWordHL
 375  F32D E1                   POP   HL
 376  F32E CD 35 F5             CALL  printHexWordHL
 377  F331 E1                   POP   HL
 378  F332 50                   LD    D,B
 379  F333 59                   LD    E,C
 380  F334 CD 27 C4             CALL  bios_cmp_hl_de
 381  F337 C2 3E F3             JP    NZ,LBL13
 382  F33A CD 35 F5             CALL  printHexWordHL
 383  F33D C9                   RET
 384  F33E CD 9F F6     LBL13:  CALL  printSpace
 385  F341 0E 3F                LD    C,3FH         ; 63 '?'
 386  F343 CD 09 C8             CALL  bios_printChar
 387  F346 C9                   RET
 388  F347 F5           SUB6: PUSH  AF
 389  F348 3A E9 8F             LD    A,(bios_vars.cursorCfg)
 390  F34B F5                   PUSH  AF
 391  F34C 3E 11                LD    A,11H         ; 17
 392  F34E C3 83 F7             JP    LBL63
 393  F351 00                   NOP
 394  F352 00                   NOP
 395  F353 E5           LBL14:  PUSH  HL
 396  F354 19                   ADD   HL,DE
 397  F355 CD 35 F5             CALL  printHexWordHL
 398  F358 CD 9F F6             CALL  printSpace
 399  F35B 7B                   LD    A,E
 400  F35C 2F                   CPL
 401  F35D 5F                   LD    E,A
 402  F35E 7A                   LD    A,D
 403  F35F 2F                   CPL
 404  F360 57                   LD    D,A
 405  F361 13                   INC   DE
 406  F362 E1                   POP   HL
 407  F363 19                   ADD   HL,DE
 408  F364 CD 35 F5             CALL  printHexWordHL
 409  F367 C9                   RET
 410  F368 21 A4 8F     LBL15:  LD    HL,vars1.V_8FA3+1 ; 36772
 411  F36B 11 0C F7             LD    DE,txtRegisters             ; 63244
 412  F36E 0E 04                LD    C,04H         ; 4
 413  F370 C5           LBL16:  PUSH  BC
 414  F371 CD 9D F3             CALL  SUB7
 415  F374 C1                   POP   BC
 416  F375 0D                   DEC   C
 417  F376 C2 70 F3             JP    NZ,LBL16
 418  F379 CD B2 F3             CALL  SUB8
 419  F37C 2A 9D 8F             LD    HL,(vars1.V_8F9D)
 420  F37F CD 35 F5             CALL  printHexWordHL
 421  F382 CD B2 F3             CALL  SUB8
 422  F385 2A 97 8F             LD    HL,(vars1.V_8F97)
 423  F388 CD 35 F5             CALL  printHexWordHL
 424  F38B CD B2 F3             CALL  SUB8
 425  F38E 2A A5 8F             LD    HL,(vars1.V_8FA5)
 426  F391 CD 35 F5             CALL  printHexWordHL
 427  F394 C9                   RET
 428  F395
 429  F395                      ; Если нажата клавиша, записать 0FFh по адресу (HL)
 430  F395              setMIfKeyPressed:
 431  F395 CD 1B C8             CALL  bios_keyScan
 432  F398 3C                   INC   A
 433  F399 C8                   RET   Z
 434  F39A 36 FF                LD    (HL), 0FFh
 435  F39C C9                   RET
 436  F39D
 437  F39D 46           SUB7:   LD    B,(HL)
 438  F39E 2B                   DEC   HL
 439  F39F 4E                   LD    C,(HL)
 440  F3A0 2B                   DEC   HL
 441  F3A1 C5                   PUSH  BC
 442  F3A2 CD B2 F3             CALL  SUB8
 443  F3A5 78                   LD    A,B
 444  F3A6 CD 15 F8             CALL  mon2_printHexByte
 445  F3A9 CD B2 F3             CALL  SUB8
 446  F3AC C1                   POP   BC
 447  F3AD 79                   LD    A,C
 448  F3AE CD 15 F8             CALL  mon2_printHexByte
 449  F3B1 C9                   RET
 450  F3B2 EB           SUB8:   EX    DE,HL         ; [5]
 451  F3B3 C5                   PUSH  BC
 452  F3B4 CD 9F F6             CALL  printSpace
 453  F3B7 CD 38 C4             CALL  bios_printStringOld
 454  F3BA 23                   INC   HL
 455  F3BB C1                   POP   BC
 456  F3BC EB                   EX    DE,HL
 457  F3BD C9                   RET
 458  F3BE 7B           LBL18:  LD    A,E
 459  F3BF B7                   OR    A
 460  F3C0 C2 C8 F3             JP    NZ,LBL19
 461  F3C3 7A                   LD    A,D
 462  F3C4 B7                   OR    A
 463  F3C5 CA EB F3             JP    Z,LBL20
 464  F3C8 E5           LBL19:  PUSH  HL
 465  F3C9 EB                   EX    DE,HL
 466  F3CA 22 97 8F             LD    (vars1.V_8F97),HL
 467  F3CD 7E                   LD    A,(HL)
 468  F3CE 36 FF                LD    (HL),0FFH   ; 255
 469  F3D0 32 99 8F             LD    (vars1.V_8F99),A
 470  F3D3 21 38 00             LD    HL,0038H    ; 56
 471  F3D6 11 9A 8F             LD    DE,vars1.V_8F9A   ; 36762
 472  F3D9 01 F7 F3             LD    BC,REF4             ; 62455
 473  F3DC CD F4 F3             CALL  SUB11
 474  F3DF 36 C3                LD    (HL),0C3H   ; 195
 475  F3E1 CD F2 F3             CALL  SUB10
 476  F3E4 CD F2 F3             CALL  SUB10
 477  F3E7 70                   LD    (HL),B
 478  F3E8 2B                   DEC   HL
 479  F3E9 71                   LD    (HL),C
 480  F3EA E1                   POP   HL
 481  F3EB CD F1 F3     LBL20:  CALL  SUB9
 482  F3EE C3 05 F1             JP    restartNoCls
 483  F3F1 E9           SUB9:   JP    (HL)
 484  F3F2 23           SUB10:  INC   HL            ; [4]
 485  F3F3 13                   INC   DE
 486  F3F4 7E           SUB11:  LD    A,(HL)                ; [2]
 487  F3F5 12                   LD    (DE),A
 488  F3F6 C9                   RET
 489  F3F7 22 9D 8F     REF4:   LD    (vars1.V_8F9D),HL
 490  F3FA EB                   EX    DE,HL
 491  F3FB 22 9F 8F             LD    (vars1.V_8F9F),HL
 492  F3FE C5                   PUSH  BC
 493  F3FF E1                   POP   HL
 494  F400 22 A1 8F             LD    (vars1.V_8FA1),HL
 495  F403 F5                   PUSH  AF
 496  F404 E1                   POP   HL
 497  F405 22 A3 8F             LD    (vars1.V_8FA3),HL
 498  F408 21 00 00             LD    HL,0000H
 499  F40B 39                   ADD   HL,SP
 500  F40C 23                   INC   HL
 501  F40D 23                   INC   HL
 502  F40E 22 A5 8F             LD    (vars1.V_8FA5),HL
 503  F411 2A 97 8F             LD    HL,(vars1.V_8F97)
 504  F414 3A 99 8F             LD    A,(vars1.V_8F99)
 505  F417 77                   LD    (HL),A
 506  F418 21 9A 8F             LD    HL,vars1.V_8F9A   ; 36762
 507  F41B 11 38 00             LD    DE,0038H    ; 56
 508  F41E CD F4 F3             CALL  SUB11
 509  F421 CD F2 F3             CALL  SUB10
 510  F424 CD F2 F3             CALL  SUB10
 511  F427 C3 05 F1             JP    restartNoCls
 512  F42A E5           LBL21:  PUSH  HL
 513  F42B C5                   PUSH  BC
 514  F42C 21 60 8F             LD    HL,8F60H    ; 36704
 515  F42F 0E 00                LD    C,00H
 516  F431 7E           LBL22:  LD    A,(HL)
 517  F432 FE 2C                CP    2CH           ; 44 ','
 518  F434 C2 38 F4             JP    NZ,LBL23
 519  F437 0C                   INC   C
 520  F438 23           LBL23:  INC   HL
 521  F439 FE 0D                CP    0DH           ; 13
 522  F43B C2 31 F4             JP    NZ,LBL22
 523  F43E 0D                   DEC   C
 524  F43F 79                   LD    A,C
 525  F440 32 89 8F             LD    (vars1.V_8F89),A
 526  F443 FE 01                CP    01H           ; 1
 527  F445 C1                   POP   BC
 528  F446 E1                   POP   HL
 529  F447 CA 62 F4             JP    Z,LBL24
 530  F44A E5                   PUSH  HL
 531  F44B D5                   PUSH  DE
 532  F44C C5                   PUSH  BC
 533  F44D 2A 87 8F             LD    HL,(vars1.V_8F87)
 534  F450 4D                   LD    C,L
 535  F451 44                   LD    B,H
 536  F452 CD 8B F5             CALL  SUB15
 537  F455 7D                   LD    A,L
 538  F456 32 8B 8F             LD    (vars1.V_8F8B),A
 539  F459 21 8C 8F             LD    HL,vars1.V_8F8C   ; 36748
 540  F45C 73                   LD    (HL),E
 541  F45D 23                   INC   HL
 542  F45E 71                   LD    (HL),C
 543  F45F C1                   POP   BC
 544  F460 D1                   POP   DE
 545  F461 E1                   POP   HL
 546  F462 79           LBL24:  LD    A,C
 547  F463 32 8A 8F             LD    (vars1.V_8F8A),A
 548  F466 E5           LBL25:  PUSH  HL            ; [2]
 549  F467 21 8A 8F             LD    HL,vars1.V_8F8A   ; 36746
 550  F46A 22 8E 8F             LD    (vars1.V_8F8E),HL
 551  F46D E1                   POP   HL
 552  F46E CD 27 C4             CALL  bios_cmp_hl_de
 553  F471 C8                   RET   Z
 554  F472 CD A5 F6             CALL  SUB24
 555  F475 3A 89 8F             LD    A,(vars1.V_8F89)
 556  F478 32 90 8F             LD    (vars1.V_8F90),A
 557  F47B 47                   LD    B,A
 558  F47C 4E           LBL26:  LD    C,(HL)
 559  F47D E5                   PUSH  HL
 560  F47E 2A 8E 8F             LD    HL,(vars1.V_8F8E)
 561  F481 7E                   LD    A,(HL)
 562  F482 B9                   CP    C
 563  F483 C2 D0 F4             JP    NZ,LBL30
 564  F486 23                   INC   HL
 565  F487 22 8E 8F             LD    (vars1.V_8F8E),HL
 566  F48A E1                   POP   HL
 567  F48B 23                   INC   HL
 568  F48C 05                   DEC   B
 569  F48D C2 7C F4             JP    NZ,LBL26
 570  F490 E5                   PUSH  HL
 571  F491 D5                   PUSH  DE
 572  F492 C5                   PUSH  BC
 573  F493 F5                   PUSH  AF
 574  F494 3A 89 8F             LD    A,(vars1.V_8F89)
 575  F497 2B           LBL27:  DEC   HL
 576  F498 3D                   DEC   A
 577  F499 C2 97 F4             JP    NZ,LBL27
 578  F49C CD 35 F5             CALL  printHexWordHL
 579  F49F 2B                   DEC   HL
 580  F4A0 2B                   DEC   HL
 581  F4A1 3A 89 8F             LD    A,(vars1.V_8F89)
 582  F4A4 C6 04                ADD   A,04H         ; 4
 583  F4A6 47                   LD    B,A
 584  F4A7 CD D5 F4     LBL28:  CALL  SUB12
 585  F4AA 23                   INC   HL
 586  F4AB 05                   DEC   B
 587  F4AC C2 A7 F4             JP    NZ,LBL28
 588  F4AF 21 FD F5             LD    HL,txtHomeRight11Dot
 589  F4B2 CD 18 F8             CALL  mon2_printString
 590  F4B5 3A 89 8F             LD    A,(vars1.V_8F89)
 591  F4B8 47                   LD    B,A
 592  F4B9 80                   ADD   A,B
 593  F4BA 80                   ADD   A,B
 594  F4BB 3D                   DEC   A
 595  F4BC 5F                   LD    E,A
 596  F4BD 0E 18                LD    C,18H         ; 24
 597  F4BF CD 47 F3     LBL29:  CALL  SUB6
 598  F4C2 1D                   DEC   E
 599  F4C3 C2 BF F4             JP    NZ,LBL29
 600  F4C6 CD EB F5             CALL  printNewLine
 601  F4C9 F1                   POP   AF
 602  F4CA C1                   POP   BC
 603  F4CB D1                   POP   DE
 604  F4CC E1                   POP   HL
 605  F4CD C3 66 F4             JP    LBL25
 606  F4D0 E1           LBL30:  POP   HL
 607  F4D1 23                   INC   HL
 608  F4D2 C3 66 F4             JP    LBL25
 609  F4D5 7E           SUB12:  LD    A,(HL)
 610  F4D6 C5                   PUSH  BC
 611  F4D7 CD 15 F8             CALL  mon2_printHexByte
 612  F4DA CD 9F F6             CALL  printSpace
 613  F4DD C1                   POP   BC
 614  F4DE C9                   RET
 615  F4DF 7E           LBL31:  LD    A,(HL)                ; [2]
 616  F4E0 B9                   CP    C
 617  F4E1 CA F3 F4             JP    Z,LBL32
 618  F4E4 CD 35 F5             CALL  printHexWordHL
 619  F4E7 7E                   LD    A,(HL)
 620  F4E8 C5                   PUSH  BC
 621  F4E9 CD 15 F8             CALL  mon2_printHexByte
 622  F4EC CD A5 F6             CALL  SUB24
 623  F4EF CD EB F5             CALL  printNewLine
 624  F4F2 C1                   POP   BC
 625  F4F3 CD 27 C4     LBL32:  CALL  bios_cmp_hl_de
 626  F4F6 C8                   RET   Z
 627  F4F7 23                   INC   HL
 628  F4F8 C3 DF F4             JP    LBL31
 629  F4FB 71           LBL33:  LD    (HL),C                ; [2]
 630  F4FC CD 27 C4             CALL  bios_cmp_hl_de
 631  F4FF C8                   RET   Z
 632  F500 23                   INC   HL
 633  F501 C3 FB F4             JP    LBL33
 634  F504 7E           LBL34:  LD    A,(HL)                ; [2]
 635  F505 02                   LD    (BC),A
 636  F506 CD 27 C4             CALL  bios_cmp_hl_de
 637  F509 C8                   RET   Z
 638  F50A 23                   INC   HL
 639  F50B 03                   INC   BC
 640  F50C C3 04 F5             JP    LBL34
 641  F50F 0A           LBL35:  LD    A,(BC)                ; [2]
 642  F510 BE                   CP    (HL)
 643  F511 CA 2C F5             JP    Z,LBL36
 644  F514 C5                   PUSH  BC
 645  F515 CD 35 F5             CALL  printHexWordHL
 646  F518 7E                   LD    A,(HL)
 647  F519 CD 15 F8             CALL  mon2_printHexByte
 648  F51C CD 9F F6             CALL  printSpace
 649  F51F C1                   POP   BC
 650  F520 C5                   PUSH  BC
 651  F521 0A                   LD    A,(BC)
 652  F522 CD 15 F8             CALL  mon2_printHexByte
 653  F525 CD A5 F6             CALL  SUB24
 654  F528 CD EB F5             CALL  printNewLine
 655  F52B C1                   POP   BC
 656  F52C CD 27 C4     LBL36:  CALL  bios_cmp_hl_de
 657  F52F C8                   RET   Z
 658  F530 23                   INC   HL
 659  F531 03                   INC   BC
 660  F532 C3 0F F5             JP    LBL35
 661  F535
 662  F535                      ; Печать слова в HEX формате из HL, обрамляется пробелами
 663  F535              printHexWordHL:
 664  F535 C5                   PUSH  BC
 665  F536 CD 9F F6             CALL  printSpace
 666  F539              printHexWordHL_noSpace:
 667  F539 7C                   LD    A,H
 668  F53A CD 15 F8             CALL  mon2_printHexByte
 669  F53D 7D                   LD    A,L
 670  F53E CD 15 F8             CALL  mon2_printHexByte
 671  F541 CD 9F F6             CALL  printSpace
 672  F544 C1                   POP   BC
 673  F545 C9                   RET
 674  F546
 675  F546                      ; Расчет и печать контрольной суммы
 676  F546                      ; вход:
 677  F546                      ;   hl = начальный адрес
 678  F546                      ;   de = конечный адрес
 679  F546              calcAndPrintCRC:
 680  F546 CD 2A F8             CALL  mon2_calcCS
 681  F549 C5                   PUSH  BC
 682  F54A E1                   POP   HL    ; hl = bc
 683  F54B CD 35 F5             CALL  printHexWordHL
 684  F54E C9                   RET
 685  F54F
 686  F54F CD 35 F5     LBL39:  CALL  printHexWordHL         ; [2]
 687  F552 06 10                LD    B,10H         ; 16
 688  F554 4E           LBL40:  LD    C,(HL)
 689  F555 3A 85 8F             LD    A,(vars1.V_8F85)
 690  F558 B7                   OR    A
 691  F559 CA 5E F5             JP    Z,LBL41
 692  F55C A1                   AND   C
 693  F55D 4F                   LD    C,A
 694  F55E 79           LBL41:  LD    A,C
 695  F55F FE 20                CP    20H           ; 32 ' '
 696  F561 DA 69 F5             JP    C,LBL42
 697  F564 FE 7F                CP    7FH           ; 127
 698  F566 DA 6B F5             JP    C,LBL43
 699  F569 0E 2E        LBL42:  LD    C,2EH         ; 46 '.'
 700  F56B CD 09 F8     LBL43:  CALL  mon2_printChar
 701  F56E CD 9F F6             CALL  printSpace
 702  F571 CD 27 C4             CALL  bios_cmp_hl_de
 703  F574 C8                   RET   Z
 704  F575 05                   DEC   B
 705  F576 23                   INC   HL
 706  F577 C2 54 F5             JP    NZ,LBL40
 707  F57A CD A5 F6             CALL  SUB24
 708  F57D CD EB F5             CALL  printNewLine
 709  F580 C3 4F F5             JP    LBL39
 710  F583 01 60 8F     SUB14:  LD    BC,8F60H    ; 36704
 711  F586 0A                   LD    A,(BC)
 712  F587 32 80 8F             LD    (vars1.V_8F80),A
 713  F58A 03                   INC   BC
 714  F58B CD B2 F5     SUB15:  CALL  SUB16
 715  F58E 22 81 8F             LD    (vars1.V_8F81),HL
 716  F591 CD B2 F5             CALL  SUB16
 717  F594 22 83 8F             LD    (vars1.V_8F83),HL
 718  F597 CD B2 F5             CALL  SUB16
 719  F59A 22 85 8F             LD    (vars1.V_8F85),HL
 720  F59D 69                   LD    L,C
 721  F59E 60                   LD    H,B
 722  F59F 22 87 8F             LD    (vars1.V_8F87),HL
 723  F5A2 2A 85 8F             LD    HL,(vars1.V_8F85)
 724  F5A5 4D                   LD    C,L
 725  F5A6 44                   LD    B,H
 726  F5A7 2A 83 8F             LD    HL,(vars1.V_8F83)
 727  F5AA EB                   EX    DE,HL
 728  F5AB 2A 81 8F             LD    HL,(vars1.V_8F81)
 729  F5AE 3A 80 8F             LD    A,(vars1.V_8F80)
 730  F5B1 C9                   RET
 731  F5B2 21 00 00     SUB16:  LD    HL,0000H    ; [3]
 732  F5B5 0A           LBL44:  LD    A,(BC)
 733  F5B6 FE 0D                CP    0DH           ; 13
 734  F5B8 C8                   RET   Z
 735  F5B9 FE 2C                CP    2CH           ; 44 ','
 736  F5BB CA CB F5             JP    Z,LBL45
 737  F5BE CD CD F5             CALL  SUB17
 738  F5C1 29                   ADD   HL,HL
 739  F5C2 29                   ADD   HL,HL
 740  F5C3 29                   ADD   HL,HL
 741  F5C4 29                   ADD   HL,HL
 742  F5C5 85                   ADD   A,L
 743  F5C6 6F                   LD    L,A
 744  F5C7 03                   INC   BC
 745  F5C8 C3 B5 F5             JP    LBL44
 746  F5CB 03           LBL45:  INC   BC
 747  F5CC C9                   RET
 748  F5CD D6 30        SUB17:  SUB   30H           ; 48 '0'
 749  F5CF FE 0A                CP    0AH           ; 10
 750  F5D1 D8                   RET   C
 751  F5D2 D6 11                SUB   11H           ; 17
 752  F5D4 FE 06                CP    06H           ; 6
 753  F5D6 D2 8A F6             JP    NC,LBL52
 754  F5D9 C6 0A                ADD   A,0AH         ; 10
 755  F5DB C9                   RET
 756  F5DC C5           SUB18:  PUSH  BC
 757  F5DD 0E 19                LD    C,19H         ; 25
 758  F5DF CD 09 F8             CALL  mon2_printChar
 759  F5E2 C1                   POP   BC
 760  F5E3 C9                   RET
 761  F5E4 E5           SUB19:  PUSH  HL
 762  F5E5 21 60 8F             LD    HL,8F60H    ; 36704
 763  F5E8 C3 93 F6             JP    LBL53
 764  F5EB
 765  F5EB                      ; Печать перевода строки (0Ah, 0Dh)
 766  F5EB              printNewLine:
 767  F5EB 0E 0A                LD    C,0AH
 768  F5ED CD 09 F8             CALL  mon2_printChar
 769  F5F0 0E 0D                LD    C,0DH
 770  F5F2 CD 09 F8             CALL  mon2_printChar
 771  F5F5 C9                   RET
 772  F5F6
 773  F5F6                      ; Русский текст в кодировке КОИ-8
 774  F5F6 20 20 3F 00  txtSpaceQuestMark:  DB  "  ?",00H
 775  F5FA 0A 0D 00     txtNewLine:         DB  0AH,0DH,00H
 776  F5FD 0D 18 18 18  txtHomeRight11Dot:  DB  0DH,18H,18H,18H,18H,18H,18H,18H,18H,18H,18H,18H,2EH,00H
 776  F601 18 18 18 18
 776  F605 18 18 18 18
 776  F609 2E 00
 777  F60B 66 61 6A 6C  txtFileQuestMark:   DB  "fajl ? ",00H
 777  F60F 20 3F 20 00
 778  F613 0A 66 61 6A                      DB  0AH,"fajl: ",00H
 778  F617 6C 3A 20 00
 779  F61B
 780  F61B CD DC F5     LBL46:  CALL  SUB18
 781  F61E CD EB F5     LBL47:  CALL  printNewLine         ; [2]
 782  F621 CD 35 F5             CALL  printHexWordHL
 783  F624 7E                   LD    A,(HL)
 784  F625 CD 15 F8             CALL  mon2_printHexByte
 785  F628 CD 9F F6             CALL  printSpace
 786  F62B CD 03 F8             CALL  mon2_getch
 787  F62E CD AE F6             CALL  SUB25
 788  F631 FE 1A                CP    1AH           ; 26
 789  F633 CA 3F F6             JP    Z,LBL48
 790  F636 FE 08                CP    08H           ; 8
 791  F638 CA 43 F6             JP    Z,LBL49
 792  F63B CD 47 F6             CALL  SUB21
 793  F63E 77                   LD    (HL),A
 794  F63F 23           LBL48:  INC   HL
 795  F640 C3 1E F6             JP    LBL47
 796  F643 2B           LBL49:  DEC   HL
 797  F644 C3 1E F6             JP    LBL47
 798  F647 C5           SUB21:  PUSH  BC
 799  F648 C3 4F F6             JP    LBL50
 800  F64B C5                   PUSH  BC
 801  F64C CD 03 F8             CALL  mon2_getch
 802  F64F CD 60 F6     LBL50:  CALL  SUB22
 803  F652 07                   RLCA
 804  F653 07                   RLCA
 805  F654 07                   RLCA
 806  F655 07                   RLCA
 807  F656 47                   LD    B,A
 808  F657 CD 03 F8             CALL  mon2_getch
 809  F65A CD 60 F6             CALL  SUB22
 810  F65D B0                   OR    B
 811  F65E C1                   POP   BC
 812  F65F C9                   RET
 813  F660 FE 20        SUB22:  CP    20H           ; 32 ' '; [2]
 814  F662 DA 05 F1             JP    C,restartNoCls
 815  F665 FE 3A                CP    3AH           ; 58 ':'
 816  F667 DA 7F F6             JP    C,LBL51
 817  F66A E6 5F                AND   5FH           ; 95 '_'
 818  F66C FE 41                CP    41H           ; 65 'A'
 819  F66E DA 8A F6             JP    C,LBL52
 820  F671 FE 47                CP    47H           ; 71 'G'
 821  F673 D2 8A F6             JP    NC,LBL52
 822  F676 F5                   PUSH  AF
 823  F677 4F                   LD    C,A
 824  F678 CD 09 F8             CALL  mon2_printChar
 825  F67B F1                   POP   AF
 826  F67C D6 37                SUB   37H           ; 55 '7'
 827  F67E C9                   RET
 828  F67F F6 10        LBL51:  OR    10H           ; 16
 829  F681 F5                   PUSH  AF
 830  F682 4F                   LD    C,A
 831  F683 CD 09 F8             CALL  mon2_printChar
 832  F686 F1                   POP   AF
 833  F687 D6 30                SUB   30H           ; 48 '0'
 834  F689 C9                   RET
 835  F68A 21 F6 F5     LBL52:  LD    HL,txtSpaceQuestMark             ; 62966; [4]
 836  F68D CD 38 C4             CALL  bios_printStringOld
 837  F690 C3 05 F1             JP    restartNoCls
 838  F693 C5           LBL53:  PUSH  BC
 839  F694 D5                   PUSH  DE
 840  F695 11 80 8F             LD    DE,vars1.V_8F80   ; 36736
 841  F698 CD 93 F7             CALL  SUB28
 842  F69B D1                   POP   DE
 843  F69C C1                   POP   BC
 844  F69D E1                   POP   HL
 845  F69E C9                   RET
 846  F69F
 847  F69F                      ; Печать пробела
 848  F69F              printSpace:
 849  F69F 0E 20                LD    C,20H
 850  F6A1 CD 09 F8             CALL  mon2_printChar
 851  F6A4 C9                   RET
 852  F6A5
 853  F6A5 CD 1B F8     SUB24:  CALL  mon2_keyScan         ; [5]
 854  F6A8 FE 1F                CP    1FH           ; 31
 855  F6AA C0                   RET   NZ
 856  F6AB CD 03 F8             CALL  mon2_getch
 857  F6AE FE 1F        SUB25:  CP    1FH           ; 31
 858  F6B0 C0                   RET   NZ
 859  F6B1 C3 05 F1             JP    restartNoCls
 860  F6B4 CD 36 F8     LBL54:  CALL  mon2_printHexWord
 861  F6B7 7D                   LD    A,L
 862  F6B8 E6 0F                AND   0FH           ; 15
 863  F6BA 4F                   LD    C,A
 864  F6BB 2F                   CPL
 865  F6BC E6 0F                AND   0FH           ; 15
 866  F6BE 3C                   INC   A
 867  F6BF 47                   LD    B,A
 868  F6C0 79                   LD    A,C
 869  F6C1 87                   ADD   A,A
 870  F6C2 87                   ADD   A,A
 871  F6C3 87                   ADD   A,A
 872  F6C4 81                   ADD   A,C
 873  F6C5 C6 0F                ADD   A,0FH         ; 15
 874  F6C7 32 FD 8F             LD    (bios_vars.cursorX),A
 875  F6CA 7E           LBL55:  LD    A,(HL)
 876  F6CB CD 15 F8             CALL  mon2_printHexByte
 877  F6CE 78                   LD    A,B
 878  F6CF FE 09                CP    09H           ; 9
 879  F6D1 C2 DC F6             JP    NZ,LBL56
 880  F6D4 0E 2D                LD    C,2DH         ; 45 '-'
 881  F6D6 CD 09 F8             CALL  mon2_printChar
 882  F6D9 C3 DF F6             JP    LBL57
 883  F6DC CD 9F F6     LBL56:  CALL  printSpace
 884  F6DF CD 27 C4     LBL57:  CALL  bios_cmp_hl_de
 885  F6E2 C8                   RET   Z
 886  F6E3 05                   DEC   B
 887  F6E4 23                   INC   HL
 888  F6E5 C2 CA F6             JP    NZ,LBL55
 889  F6E8 CD A5 F6             CALL  SUB24
 890  F6EB CD EB F5             CALL  printNewLine
 891  F6EE C3 B4 F6             JP    LBL54
 892  F6F1 5F                   LD    E,A
 893  F6F2 0F                   RRCA
 894  F6F3 0F                   RRCA
 895  F6F4 0F                   RRCA
 896  F6F5 0F                   RRCA
 897  F6F6 CD 00 F7             CALL  SUB26
 898  F6F9 57                   LD    D,A
 899  F6FA 7B                   LD    A,E
 900  F6FB CD 00 F7             CALL  SUB26
 901  F6FE 5F                   LD    E,A
 902  F6FF C9                   RET
 903  F700 E6 0F        SUB26:  AND   0FH           ; 15; [2]
 904  F702 FE 0A                CP    0AH           ; 10
 905  F704 DA 09 F7             JP    C,LBL58
 906  F707 C6 07                ADD   A,07H         ; 7
 907  F709 C6 30        LBL58:  ADD   A,30H         ; 48 '0'
 908  F70B C9                   RET
 909  F70C
 910  F70C              txtRegisters:
 911  F70C 41 3D 00             DB    "A=",0
 912  F70F 46 3D 00             DB    "F=",0
 913  F712 42 3D 00             DB    "B=",0
 914  F715 43 3D 00             DB    "C=",0
 915  F718 44 3D 00             DB    "D=",0
 916  F71B 45 3D 00             DB    "E=",0
 917  F71E 48 3D 00             DB    "H=",0
 918  F721 4C 3D 00             DB    "L=",0
 919  F724 0A 0D 20 4D          DB    0AH,0DH," M(HL)=",0
 919  F728 28 48 4C 29
 919  F72C 3D 00
 920  F72E 50 43 3D 00          DB    "PC=",0
 921  F732 53 50 3D 00          DB    "SP=",0
 922  F736
 923  F736 F5           SUB27:  PUSH  AF            ; [2]
 924  F737 3A E6 F0     LBL59:  LD    A,(vars2.V_F0E6)
 925  F73A E6 0C                AND   0CH           ; 12
 926  F73C C2 37 F7             JP    NZ,LBL59
 927  F73F 79                   LD    A,C
 928  F740 32 E5 F0             LD    (vars2.V_F0E5),A
 929  F743 3A E6 F0             LD    A,(vars2.V_F0E6)
 930  F746 F6 20                OR    20H           ; 32 ' '
 931  F748 32 E6 F0             LD    (vars2.V_F0E6),A
 932  F74B 3A E6 F0     LBL60:  LD    A,(vars2.V_F0E6)
 933  F74E E6 04                AND   04H           ; 4
 934  F750 CA 4B F7             JP    Z,LBL60
 935  F753 AF                   XOR   A
 936  F754 32 E6 F0             LD    (vars2.V_F0E6),A
 937  F757 F1                   POP   AF
 938  F758 C9                   RET
 939  F759 E5                   PUSH  HL
 940  F75A 7E           LBL61:  LD    A,(HL)
 941  F75B B7                   OR    A
 942  F75C CA 67 F7             JP    Z,LBL62
 943  F75F 4F                   LD    C,A
 944  F760 CD 36 F7             CALL  SUB27
 945  F763 23                   INC   HL
 946  F764 C3 5A F7             JP    LBL61
 947  F767 E1           LBL62:  POP   HL
 948  F768 C9                   RET
 949  F769 F5                   PUSH  AF
 950  F76A 3E 91                LD    A,91H         ; 145
 951  F76C 32 E7 F0             LD    (vars2.V_F0E7),A
 952  F76F 3A E6 F0             LD    A,(vars2.V_F0E6)
 953  F772 F6 10                OR    10H           ; 16
 954  F774 32 E6 F0             LD    (vars2.V_F0E6),A
 955  F777 E6 EF                AND   0EFH          ; 239
 956  F779 32 E6 F0             LD    (vars2.V_F0E6),A
 957  F77C 0E 0F                LD    C,0FH         ; 15
 958  F77E CD 36 F7             CALL  SUB27
 959  F781 F1                   POP   AF
 960  F782 C9                   RET
 961  F783 32 E9 8F     LBL63:  LD    (bios_vars.cursorCfg),A
 962  F786 CD 06 C0             CALL  bios_drawCursorOld
 963  F789 F1                   POP   AF
 964  F78A 32 E9 8F             LD    (bios_vars.cursorCfg),A
 965  F78D 0E 18                LD    C,18H         ; 24
 966  F78F F1                   POP   AF
 967  F790 C3 09 F8             JP    mon2_printChar
 968  F793 44           SUB28:  LD    B,H
 969  F794 4D                   LD    C,L
 970  F795 CD 03 F8     LBL64:  CALL  mon2_getch         ; [4]
 971  F798 FE 08                CP    08H           ; 8
 972  F79A CA B9 F7             JP    Z,LBL65
 973  F79D FE 0D                CP    0DH           ; 13
 974  F79F CA D8 F7             JP    Z,LBL67
 975  F7A2 32 95 8F             LD    (vars1.V_8F95),A
 976  F7A5 CD 27 C4             CALL  bios_cmp_hl_de
 977  F7A8 CA 95 F7             JP    Z,LBL64
 978  F7AB 3A 95 8F             LD    A,(vars1.V_8F95)
 979  F7AE 77                   LD    (HL),A
 980  F7AF C5                   PUSH  BC
 981  F7B0 4F                   LD    C,A
 982  F7B1 CD 09 F8             CALL  mon2_printChar
 983  F7B4 C1                   POP   BC
 984  F7B5 23                   INC   HL
 985  F7B6 C3 95 F7             JP    LBL64
 986  F7B9 7C           LBL65:  LD    A,H
 987  F7BA B8                   CP    B
 988  F7BB C2 C3 F7             JP    NZ,LBL66
 989  F7BE 7D                   LD    A,L
 990  F7BF B9                   CP    C
 991  F7C0 CA 95 F7             JP    Z,LBL64
 992  F7C3 2B           LBL66:  DEC   HL
 993  F7C4 C5                   PUSH  BC
 994  F7C5 0E 08                LD    C,08H         ; 8
 995  F7C7 CD 09 F8             CALL  mon2_printChar
 996  F7CA 0E 20                LD    C,20H         ; 32 ' '
 997  F7CC CD 09 F8             CALL  mon2_printChar
 998  F7CF 0E 08                LD    C,08H         ; 8
 999  F7D1 CD 09 F8             CALL  mon2_printChar
1000  F7D4 C1                   POP   BC
1001  F7D5 C3 95 F7             JP    LBL64
1002  F7D8              LBL67:
1003  F7D8 77                   LD    (HL),A
1004  F7D9 C9                   RET
1005  F7DA E5                   PUSH  HL
1006  F7DB 21 E3 FF             LD    HL,0FFE3H   ; 65507
1007  F7DE 36 0D                LD    (HL),0DH    ; 13
1008  F7E0 36 0C                LD    (HL),0CH    ; 12
1009  F7E2 E1                   POP   HL
1010  F7E3 C9                   RET
1011  F7E4
1012  F7E4              ;----------------------------------------------------------------------------
1013  F7E4              ; Таблица переходов F800h
1014  F7E4              ;----------------------------------------------------------------------------
1015  F7E4                  ORG_PAD0 0F800h
1015  F7E4             >         IF $ > 0F800h
1015  F7E4 ~           >           ; вывод сообщения об ошибке
1015  F7E4 ~           >           ASSERT 0
1015  F7E4 ~           >           DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
1015  F7E4             >         ELSE
1015  F7E4             >           ; заполнение памяти
1015  F7E4 00 00 00... >           BLOCK 0F800h-$, 0
1015  F7E8             >         ENDIF
1015  F800             >         ORG 0F800h
1016  F800
1017  F800
1018  F800 C3 05 F1     mon2_restart:       JP    restartNoCls          ; F800
1019  F803 C3 37 C3     mon2_getch:         JP    bios_getchOld         ; F803
1020  F806 C3 77 C3                         JP    bios_tapeReadOld      ; F806
1021  F809 C3 37 C0     mon2_printChar:     JP    bios_printCharOld     ; F809
1022  F80C C3 D0 C3                         JP    bios_tapeWriteOld     ; F80C
1023  F80F C3 36 C8                         JP    bios_printer          ; F80F
1024  F812 C3 95 F3                         JP    setMIfKeyPressed      ; F812
1025  F815 C3 15 C8     mon2_printHexByte:  JP    bios_printHexByte     ; F815
1026  F818 C3 38 C4     mon2_printString:   JP    bios_printStringOld   ; F818
1027  F81B C3 03 C0     mon2_keyScan:       JP    bios_keyScanOld       ; F81B
1028  F81E C3 1E C8                         JP    bios_getCursorPos     ; F81E
1029  F821 C9                               RET                         ; F821 - не используется
1030  F822 00                               NOP
1031  F823 00                               NOP
1032  F824 C3 24 C8     SUB34:              JP    bios_tapeLoad         ; F824
1033  F827 C3 27 C8     mon2_tapeSave:      JP    bios_tapeSave         ; F827
1034  F82A C3 2A C8     mon2_calcCS:        JP    bios_calcCS           ; F82A
1035  F82D C3 70 C1                         JP    bios_beep_Old         ; F82D
1036  F830 C3 30 C8                         JP    bios_getMemTop        ; F830
1037  F833 C3 33 C8                         JP    bios_setMemTop        ; F833
1038  F836 C5           mon2_printHexWord:  PUSH  BC                    ; F836 - печать слова из HL в HEX формате, дополняется пробелом
1039  F837 C3 39 F5                         JP    printHexWordHL_noSpace
1040  F83A
1041  F83A                  END
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\mon2\mon2.asm
