   1  0000              ;----------------------------------------------------------------------------
   2  0000              ; MXOS - MON2.COM
   3  0000              ;
   4  0000              ; 2022-02-07 Дизассемблировано SpaceEngineer
   5  0000              ;----------------------------------------------------------------------------
   6  0000
   7  0000                  INCLUDE "../include/mxos.inc"
   1+ 0000              ;-----------------------------------------------------------------------
   2+ 0000              ; MXOS
   3+ 0000              ; Точки входа и настройки сборки MXOS
   4+ 0000              ;
   5+ 0000              ; Карта памяти:
   6+ 0000              ;   8FDF-8FFF - [  32 B] Переменные
   7+ 0000              ;   9000-BFFF - [12  KB] Экран
   8+ 0000              ;   C000-CFFF - [4096 B] DOS.SYS (в конце чуть чуть свободного места под доработки)
   9+ 0000              ;   D000-E1FF - [4607 B] NC.COM (в конце место под список файлов и чуть чуть свободного места под доработки)
  10+ 0000              ;   E200-E5FF - [1024 B] (свободно 1024 байт)
  11+ 0000              ;   E600-E7FF - [ 512 B] Драйвер магнитофона
  12+ 0000              ;   E900-F0FF - [2048 B] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
  13+ 0000              ;   F100-F8FF - [2048 B] FORMAT.COM, FPAGE.COM, MON2.COM и прочие утилиты
  14+ 0000              ;   F900-F9FF - [ 256 B] (Свободно 256 байт)
  15+ 0000              ;   FA00-FAFF - [ 256 B] Драйвер флеш-диска
  16+ 0000              ;   FB00-FEFF - [1024 B] Дисковый буфер
  17+ 0000              ;   FF00-FF81 - [ 129 B] Командная строка. Заполняется функцией bios_fileExec
  18+ 0000              ;   FF82-FFBF - [ 130 B] Стек
  19+ 0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвера обмена с RAM диском
  20+ 0000              ;   FFE0-FFFF - [  32 B] Оборудование
  21+ 0000              ;-----------------------------------------------------------------------
  22+ 0000
  23+ 0000
  24+ 0000              ;-----------------------------------------------------------------------
  25+ 0000              ; Конфигурация сборки
  26+ 0000              ;-----------------------------------------------------------------------
  27+ 0000
  28+ 0000              RAMD_MAX_PAGE        =  16      ; Максимальное количество страниц RAM диска
  29+ 0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
  30+ 0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
  31+ 0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
  32+ 0000              EMBED_FONT           =  0       ; Встроить шрифт в программу (при запуске шрифт копируется на FONT_ADDR)
  33+ 0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
  34+ 0000              FONT_ADDR            =  0E900h  ; Адрес шрфита
  35+ 0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
  36+ 0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
  37+ 0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
  38+ 0000              FAT16                =  1       ; Включить поддержку FAT16
  39+ 0000
  40+ 0000                  IF  LOAD_FONT
  41+ 0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
  42+ 0000                  ELSE
  43+ 0000 ~            FONT_ADDR_DIV_8 = -1
  44+ 0000                  ENDIF
  45+ 0000
  46+ 0000              ;-----------------------------------------------------------------------
  47+ 0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
  48+ 0000              ; Доступ к переменным и программ польователя:
  49+ 0000              ; ld a, bios_vars.lastKey
  50+ 0000              ;-----------------------------------------------------------------------
  51+ 0000
  52+ 0000                  STRUCT BIOS_VARIABLES
  53+ 0000 ~            _reserv_1     DW      -1              ; 8FDFh -
  54+ 0000 ~            tapeError     DW      0C800h          ; 8FE1h - Адрес, куда происходит переход при ошибке чтения с ленты
  55+ 0000 ~            tapeAddr      DW      -1              ; 8FE3h - Адрес программы загруженной с ленты
  56+ 0000 ~            _reserv_2     DW      -1              ; 8FE5h -
  57+ 0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; 8FE7h - Адрес альтернативного знакогенератора / 8
  58+ 0000 ~            cursorCfg     DB      11h ; 0A9h      ; 8FE9h - Внешний вид курсора (биты: 7 - мигание (если 0), 654 - положение (Y) от низа строки, 3210 - размер по высоте)
  59+ 0000 ~            koi8          DB      -1              ; 8FEAh - 0FFh = включен KOI-8, 0 = включен KOI-7
  60+ 0000 ~            escMode       DB      -1              ; 8FEBh - Обработка ESC-последовательности
  61+ 0000 ~            keyLocks      DB      3Ah             ; 8FECh -
  62+ 0000 ~            _reserv_3     DW      -1              ; 8FEDh -
  63+ 0000 ~            lastLastKey   DB      -1              ; 8FEFh - Предпоследняя нажатая клавиша
  64+ 0000 ~            lastKey       DB      -1              ; 8FF0h - Последняя нажатая клавиша
  65+ 0000 ~            beepFreq      DB      5Fh             ; 8FF1h - Частота звукового сигнала (также влияет на длительность)
  66+ 0000 ~            beepDuration  DB      20h             ; 8FF2h - Длительность звукового сигнала (сколько раз повторять посылку)
  67+ 0000 ~            tapeInverse   DB      0FFh            ; 8FF3h - Признак инверсии данных с ленты
  68+ 0000 ~            cursorDelay   DB      020h            ; 8FF4h -
  69+ 0000 ~            byte_8FF5     DB      0E0h            ; 8FF5h -
  70+ 0000 ~            oldSP         DW      -1              ; 8FF6h - Используется для сохранения SP некоторыми функциями
  71+ 0000 ~            ramPageCount  DB      RAMD_MAX_PAGE   ; 8FF8h - Количество детектированных 64кб страниц RAM-диска
  72+ 0000 ~            flashPage     DB      0               ; 8FF9h - Текущий номер страницы флеш-диска
  73+ 0000 ~            inverse       DW      0               ; 8FFAh - Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
  74+ 0000 ~            cursorY       DB      -1              ; 8FFCh - Положение курсора по вертикали в пикселях
  75+ 0000 ~            cursorX       DB      -1              ; 8FFDh - Положение курсора по горизонтали в пикселях / 2
  76+ 0000 ~            writeDelay    DB      28h             ; 8FFEh - Скорость при записи на ленту
  77+ 0000 ~            readDelay     DB      3Ch             ; 8FFFh - Скорость при чтении с ленты
  78+ 0000                  ENDS
  79+ 0000
  80+ 0000              ; Блок переменных BIOS начинается с адреса 8FDFh
  81+ 0000              bios_vars   BIOS_VARIABLES = 8FDFh
  82+ 0000
  83+ 0000              ;-----------------------------------------------------------------------
  84+ 0000              ; Стандартные точки входа ОС
  85+ 0000              ; Отмеченные * применять не рекомендуется
  86+ 0000              ;-----------------------------------------------------------------------
  87+ 0000
  88+ 0000              bios_init            = 0C000h ; Теплая перезагрузка
  89+ 0000
  90+ 0000              ; Устаревшие точки, лечше не применять
  91+ 0000              bios_keyScanOld      = 0C003h ; * Получить код нажатой клавиши, = bios_keyScan
  92+ 0000              bios_drawCursorOld   = 0C006h ; * Нарисовать/стереть курсор
  93+ 0000              bios_clearScreenOld  = 0C010h ; * Оистка экрана
  94+ 0000              bios_printCharOld    = 0C037h ; * Вывод символа на экран
  95+ 0000              bios_beep_Old        = 0C170h ; * Звуковой сигнал
  96+ 0000              bios_delay_l         = 0C18Fh ; * Задержка l циклов
  97+ 0000              bios_delay_b         = 0C190h ; * Задержка b циклов
  98+ 0000              bios_getchOld        = 0C337h ; * Ожидание ввода с клавиатуры
  99+ 0000              bios_tapeReadOld     = 0C377h ; * Чтение байта с магнитофона
 100+ 0000              bios_tapeWriteOld    = 0C3D0h ; * Запись байта на магнитофон
 101+ 0000              bios_cmp_hl_de       = 0C427h ; * Сравнить hl и de
 102+ 0000              bios_memcpy_bc_hl    = 0C42Dh ; * Скопировать блок памяти
 103+ 0000              bios_printStringOld  = 0C438h ; * Вывод строки на экран
 104+ 0000
 105+ 0000              bios_reboot          = 0C800h ; Запустить NC.COM
 106+ 0000              bios_getch           = 0C803h ; Ожидание ввода с клавиатуры
 107+ 0000              bios_tapeRead        = 0C806h ; Чтение байта с магнитофона
 108+ 0000              bios_printChar       = 0C809h ; Вывод символа на экран
 109+ 0000              bios_tapeWrite       = 0C80Ch ; Запись байта на магнитофон
 110+ 0000              bios_input           = 0C80Fh ; Ввод строки с клавиатуры
 111+ 0000              bios_keyCheck        = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
 112+ 0000              bios_printHexByte    = 0C815h ; Вывод HEX числа на экран (байт)
 113+ 0000              bios_printString     = 0C818h ; Вывод строки на экран
 114+ 0000              bios_keyScan         = 0C81Bh ; Получить код нажатой клавиши
 115+ 0000              bios_getCursorPos    = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
 116+ 0000              bios_setCursorPos    = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
 117+ 0000              bios_tapeLoad        = 0C824h ; Загрузить программу с магнитофона
 118+ 0000              bios_tapeSave        = 0C827h ; Сохранить программу на магнитофон
 119+ 0000              bios_calcCS          = 0C82Ah ; Расчет контрольной суммы
 120+ 0000              bios_printHexWord    = 0C82Dh ; Вывод HEX числа на экран (слово)
 121+ 0000              bios_getMemTop       = 0C830h ; Получить объем доступной памяти
 122+ 0000              bios_setMemTop       = 0C833h ; Установить объем доступной памяти
 123+ 0000              bios_printer         = 0C836h ; Напечатать байт на принтере
 124+ 0000                  IF RAMFOS_COMPATIBILITY
 125+ 0000              bios_strToHex        = 0C839h ; Преобразвоние строки в HEX формате в число
 126+ 0000                  ELSE
 127+ 0000 ~            bios_rebootAlt       = 0C839h ; Запустить NC.COM
 128+ 0000                  ENDIF
 129+ 0000              bios_rebootAlt2      = 0C83Ch ; Запустить NC.COM
 130+ 0000              bios_fileList        = 0C83Fh ; Получить список файлов
 131+ 0000              bios_fileGetSetDrive = 0C842h ; Получить/установить активное устройство
 132+ 0000              bios_fileCreate      = 0C845h ; Создать файл
 133+ 0000              bios_fileLoad        = 0C848h ; Загрузить файл по адресу из заголовка этого файла
 134+ 0000              bios_fileDelete      = 0C84Bh ; Удалить файл
 135+ 0000              bios_fileRename      = 0C84Eh ; Переименовать файл
 136+ 0000              bios_fileLoadInfo    = 0C851h ; Загрузить информацию о файле
 137+ 0000              bios_fileGetSetAddr  = 0C854h ; Получить/установить адрес загрузки файла
 138+ 0000              bios_fileGetSetAttr  = 0C857h ; Получить/установить атрибуты файла
 139+ 0000              bios_fileNamePrepare = 0C85Ah ; Преобразовать имя файла во внутренний формат
 140+ 0000              bios_fileExec        = 0C85Dh ; Запустить файл
 141+ 0000              bios_installDriver   = 0C860h ; Установить драйвер накопителя
 142+ 0000              bios_diskDriver      = 0C863h ; Драйвер выбранного диска
 143+ 0000              bios_fileLoad2       = 0C866h ; Загрузить файл по адресу de
 144+ 0000              bios_printCharReal   = 0C869h ; Вывод символа на экран (только реальные символы)
 145+ 0000              bios_printDecWord    = 0C86Ch ; Вывод числа экран в десятичной форме
 146+ 0000              bios_setRAMDDriver   = 0C86Fh ; Установить драйвр рам-диска
 147+ 0000
 148+ 0000              ;-----------------------------------------------------------------------
 149+ 0000              ; Точки входа драйвера доступа к ДОЗУ
 150+ 0000              ;-----------------------------------------------------------------------
 151+ 0000
 152+ 0000              bios_RAMDRead  = 0FFC0h ; чтение из ДОЗУ
 153+ 0000              bios_RAMDWrite = 0FFD0h ; запись в  ДОЗУ
 154+ 0000
 155+ 0000              ;-----------------------------------------------------------------------
 156+ 0000              ; Адрес таблицы переходов драйвера магнитофона
 157+ 0000              ;-----------------------------------------------------------------------
 158+ 0000
 159+ 0000              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
 160+ 0000
 161+ 0000              ;-----------------------------------------------------------------------
 162+ 0000              ; Порты устройств ПК "Специалист-MX2"
 163+ 0000              ;-----------------------------------------------------------------------
 164+ 0000
 165+ 0000              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
 166+ 0000              IO_KEYB_B       =  0FFE1h
 167+ 0000              IO_KEYB_C       =  0FFE2h
 168+ 0000              IO_KEYB_MODE    =  0FFE3h
 169+ 0000              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
 170+ 0000              IO_PROG_B       =  0FFE5h
 171+ 0000              IO_PROG_C       =  0FFE6h
 172+ 0000              IO_PROG_MODE    =  0FFE7h
 173+ 0000              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
 174+ 0000              IO_FDD_TRACK    =  0FFE9h
 175+ 0000              IO_FDD_SECTOR   =  0FFEAh
 176+ 0000              IO_FDD_DATA     =  0FFEBh
 177+ 0000              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
 178+ 0000              IO_TIMER_CH1    =  0FFEDh
 179+ 0000              IO_TIMER_CH2    =  0FFEEh
 180+ 0000              IO_TIMER_MODE   =  0FFEFh
 181+ 0000              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
 182+ 0000              IO_FDD_MOTOR    =  0FFF1h
 183+ 0000              IO_FDD_SIDE     =  0FFF2h
 184+ 0000              IO_FDD_DRIVE    =  0FFF3h
 185+ 0000              IO_COLOR        =  0FFF8h   ; регистр цвета
 186+ 0000              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
 187+ 0000              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
 188+ 0000              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
 189+ 0000              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
 190+ 0000
 191+ 0000              ;-----------------------------------------------------------------------
 192+ 0000              ; Структура файловой системы
 193+ 0000              ;-----------------------------------------------------------------------
 194+ 0000
 195+ 0000              ; Структура каталога
 196+ 0000
 197+ 0000                  IF FAT16
 198+ 0000
 199+ 0000              DIR_DESCR_SIZE  = 32    ; Размер дескриптора файла в каталоге (байт)
 200+ 0000              DIR_NAME_LENGTH = 8     ; Длина имени файла  (байт)
 201+ 0000              FAT_ITEM_SIZE   = 2     ; Размер записи в таблице FAT (байт)
 202+ 0000
 203+ 0000              ;-----------------------------------------------------------------------
 204+ 0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
 205+ 0000              ;-----------------------------------------------------------------------
 206+ 0000
 207+ 0000                  STRUCT FILE_DESCRIPTOR  ; 32 байта
 208+ 0000 ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 8 байт  - имя файла
 209+ 0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
 210+ 0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
 211+ 0000 ~            checkSum        BLOCK   1  ; ntRes          ; смещение 0Ch, 1 байт  - контрольная сумма (!!! временный костыль, в FAT32 это ntRes - используются в Windows NT !!!)
 212+ 0000 ~            ctrTimeTenth    BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
 213+ 0000 ~            ctrTime         BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
 214+ 0000 ~            ctrDate         BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
 215+ 0000 ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
 216+ 0000 ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
 217+ 0000 ~            wrtTime         BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
 218+ 0000 ~            wrtDate         BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
 219+ 0000 ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
 220+ 0000 ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
 221+ 0000                  ENDS
 222+ 0000
 223+ 0000              ;-----------------------------------------------------------------------
 224+ 0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
 225+ 0000              ;-----------------------------------------------------------------------
 226+ 0000
 227+ 0000                  ELSE
 228+ 0000 ~
 229+ 0000 ~            DIR_DESCR_SIZE  = 16    ; Размер дескриптора файла в каталоге
 230+ 0000 ~            DIR_NAME_LENGTH = 6     ; Длина имени файла (байт)
 231+ 0000 ~            FAT_ITEM_SIZE   = 1     ; Размер записи в таблице FAT (байт)
 232+ 0000 ~
 233+ 0000 ~            ;-----------------------------------------------------------------------
 234+ 0000 ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
 235+ 0000 ~            ;-----------------------------------------------------------------------
 236+ 0000 ~
 237+ 0000 ~                STRUCT FILE_DESCRIPTOR  ; 16 байт
 238+ 0000 ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 6 байт  - имя файла
 239+ 0000 ~            ext             BLOCK   3                   ; смещение 06h, 3 байта - расширение имени файла
 240+ 0000 ~            attrib          BLOCK   1                   ; смещение 09h, 1 байт  - атрибуты файла: 00h - обычный файл, 01h - системный файл
 241+ 0000 ~            loadAddress     BLOCK   2                   ; смещение 0Ah, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый
 242+ 0000 ~            size            BLOCK   2                   ; смещение 0Ch, 2 байта - размер файла в байтах - 1
 243+ 0000 ~            checkSum        BLOCK   1                   ; смещение 0Eh, 1 байт  - контрольная сумма
 244+ 0000 ~            firstCluster    BLOCK   1                   ; смещение 0Fh, 1 байт  - номер первого кластера в FAT
 245+ 0000 ~                ENDS
 246+ 0000 ~
 247+ 0000 ~            ;-----------------------------------------------------------------------
 248+ 0000 ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
 249+ 0000 ~            ;-----------------------------------------------------------------------
 250+ 0000 ~
 251+ 0000                  ENDIF
 252+ 0000
 253+ 0000              ;-----------------------------------------------------------------------
 254+ 0000              ; Буферы в памяти
 255+ 0000              ;-----------------------------------------------------------------------
 256+ 0000
 257+ 0000              CLUSTER_SIZE     = 00100h                   ; размер кластера 256 байт
 258+ 0000              CLUSTERS_IN_BANK = 10000h / CLUSTER_SIZE    ; сколько кластеров в 64 кб банке
 259+ 0000
 260+ 0000                  IF FAT16
 261+ 0000
 262+ 0000              FAT_CLUSTERS  = 16      ; сколько кластеров занимает таблица fat
 263+ 0000              DIR_CLUSTERS  = 4       ; сколько кластеров занимает корневой каталог
 264+ 0000              FAT_BUFFER    = 8000h - (FAT_CLUSTERS + DIR_CLUSTERS) * CLUSTER_SIZE; адрес буфера таблицы fat в памяти
 265+ 0000
 266+ 0000                  ELSE
 267+ 0000 ~
 268+ 0000 ~            FAT_CLUSTERS  = 1       ; сколько кластеров занимает таблица fat
 269+ 0000 ~            DIR_CLUSTERS  = 3       ; сколько кластеров занимает корневой каталог
 270+ 0000 ~            FAT_BUFFER    = 0FB00h  ; адрес буфера таблицы fat в памяти
 271+ 0000 ~
 272+ 0000                  ENDIF
 273+ 0000
 274+ 0000              FAT_SIZE      = FAT_CLUSTERS * CLUSTER_SIZE  ; размер таблицы fat в байтах
 275+ 0000              DIR_SIZE      = DIR_CLUSTERS * CLUSTER_SIZE  ; размер корневого каталога в байтах
 276+ 0000
 277+ 0000              DIR_BUFFER    = FAT_BUFFER + FAT_SIZE         ; адрес буфера корневого каталога в памяти
 278+ 0000
 279+ 0000              DIR_MAX_FILES = DIR_CLUSTERS * 256 / DIR_DESCR_SIZE    ; Максимум файлов в каталоге
 280+ 0000
 281+ 0000              BAT_BUFFER    = 0FC00h  ; буфер для загрузки BAT файла
 282+ 0000              CMD_LINE      = 0FF00h  ; 192 байта, но в конце стек
 283+ 0000              STACK_ADDR    = 0FFC0h  ; стек
 284+ 0000
 285+ 0000              ;-----------------------------------------------------------------------
 286+ 0000              ; Всякие полезности
 287+ 0000              ;-----------------------------------------------------------------------
 288+ 0000
 289+ 0000              ; Макрос для заполнения памяти от текущего адреса до указанного
 290+ 0000                  MACRO ORG_PAD adr
 291+ 0000 ~                     IF $ > adr
 292+ 0000 ~                       ; вывод сообщения об ошибке
 293+ 0000 ~                       ASSERT 0
 294+ 0000 ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
 295+ 0000 ~                     ELSE
 296+ 0000 ~                       ; заполнение памяти
 297+ 0000 ~                       BLOCK adr-$, 0FFh
 298+ 0000 ~                     ENDIF
 299+ 0000 ~                     ORG adr
 300+ 0000                  ENDM
 301+ 0000
 302+ 0000                  MACRO ORG_PAD0 adr
 303+ 0000 ~                     IF $ > adr
 304+ 0000 ~                       ; вывод сообщения об ошибке
 305+ 0000 ~                       ASSERT 0
 306+ 0000 ~                       DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
 307+ 0000 ~                     ELSE
 308+ 0000 ~                       ; заполнение памяти
 309+ 0000 ~                       BLOCK adr-$, 0
 310+ 0000 ~                     ENDIF
 311+ 0000 ~                     ORG adr
 312+ 0000                  ENDM
 313+ 0000
 314+ 0000              ; Макросы для проверки текущего адреса
 315+ 0000                  MACRO ASSERT_EQUAL adr
 316+ 0000 ~                     IF $ != adr
 317+ 0000 ~                       ASSERT 0
 318+ 0000 ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
 319+ 0000 ~                     ENDIF
 320+ 0000                  ENDM
 321+ 0000
 322+ 0000                  MACRO ASSERT_DONT_FIT adr
 323+ 0000 ~                     IF $ > adr
 324+ 0000 ~                       ASSERT 0
 325+ 0000 ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
 326+ 0000 ~                     ENDIF
 327+ 0000                  ENDM
 328+ 0000
 329+ 0000              ;-----------------------------------------------------------------------
 330+ 0000              ; Конец
 331+ 0000              ;-----------------------------------------------------------------------
 332+ 0000
   8  0000
   9  0000              ; Используемые подпрограммы DOS.SYS:
  10  0000              ; bios_keyScanOld      = 0C003h
  11  0000              ; bios_drawCursorOld   = 0C006h
  12  0000              ; bios_printCharOld    = 0C037h
  13  0000              ; bios_beep_Old        = 0C170h
  14  0000              ; bios_getchOld        = 0C337h
  15  0000              ; bios_tapeReadOld     = 0C377h
  16  0000              ; bios_tapeWriteOld    = 0C3D0h
  17  0000              ; bios_cmp_hl_de       = 0C427h
  18  0000              ; bios_printStringOld  = 0C438h
  19  0000              ; bios_reboot          = 0C800h
  20  0000              ; bios_getch           = 0C803h
  21  0000              ; bios_printChar       = 0C809h
  22  0000              ; bios_input           = 0C80Fh
  23  0000              ; bios_keyCheck        = 0C812h
  24  0000              ; bios_printHexByte    = 0C815h
  25  0000              ; bios_printString     = 0C818h
  26  0000              ; bios_keyScan         = 0C81Bh
  27  0000              ; bios_getCursorPos    = 0C81Eh
  28  0000              ; bios_tapeLoad        = 0C824h
  29  0000              ; bios_tapeSave        = 0C827h
  30  0000              ; bios_calcCS          = 0C82Ah
  31  0000              ; bios_getMemTop       = 0C830h
  32  0000              ; bios_setMemTop       = 0C833h
  33  0000              ; bios_printer         = 0C836h
  34  0000              ; bios_fileList        = 0C83Fh
  35  0000              ; bios_fileGetSetDrive = 0C842h
  36  0000              ; bios_fileCreate      = 0C845h
  37  0000              ; bios_fileLoad        = 0C848h
  38  0000              ; bios_fileLoadInfo    = 0C851h
  39  0000              ; bios_fileGetSetAddr  = 0C854h
  40  0000              ; bios_fileGetSetAttr  = 0C857h
  41  0000              ; bios_fileNamePrepare = 0C85Ah
  42  0000              ; bios_fileLoad2       = 0C866h
  43  0000
  44  0000              ; Используемые переменные DOS.SYS:
  45  0000              ; bios_vars.tapeError  = 8FE1h
  46  0000              ; bios_vars.tapeAddr   = 8FE3h
  47  0000              ; bios_vars.cursorCfg  = 8FE9h
  48  0000              ; bios_vars.koi8       = 8FEAh
  49  0000              ; bios_vars.cursorX    = 8FFCh
  50  0000
  51  0000              ; Собственные переменные
  52  0000                  STRUCT MON2_VARS_1
  53  0000 ~            V_8F80:     DS    1
  54  0000 ~            V_8F81:     DS    2
  55  0000 ~            V_8F83:     DS    2
  56  0000 ~            V_8F85:     DS    2
  57  0000 ~            V_8F87:     DS    2
  58  0000 ~            V_8F89:     DS    1
  59  0000 ~            V_8F8A:     DS    1
  60  0000 ~            V_8F8B:     DS    1
  61  0000 ~            V_8F8C:     DS    2
  62  0000 ~            V_8F8E:     DS    2
  63  0000 ~            V_8F90:     DS    1
  64  0000 ~            V_8F91:     DS    4
  65  0000 ~            V_8F95:     DS    1
  66  0000 ~            V_8F96:     DS    1
  67  0000 ~            V_8F97:     DS    2
  68  0000 ~            V_8F99:     DS    1
  69  0000 ~            V_8F9A:     DS    3
  70  0000 ~            V_8F9D:     DS    2
  71  0000 ~            V_8F9F:     DS    2
  72  0000 ~            V_8FA1:     DS    2
  73  0000 ~            V_8FA3:     DS    2
  74  0000 ~            V_8FA5:     DS    2
  75  0000 ~            V_8FA7:     DS    4
  76  0000 ~            V_8FAB:     DS    2
  77  0000                  ENDS
  78  0000
  79  0000                  STRUCT MON2_VARS_2
  80  0000 ~            V_F0E0:     DS    5
  81  0000 ~            V_F0E5:     DS    1
  82  0000 ~            V_F0E6:     DS    1
  83  0000 ~            V_F0E7:     DS    1
  84  0000                  ENDS
  85  0000
  86  0000                  STRUCT MON2_VARS_3
  87  0000 ~            ; похоже на старый дескриптор файла
  88  0000 ~            V_F900:     DS    10    ; имя (6), расширение (3), атрибуты (1)
  89  0000 ~            V_F90A:     DS    2     ; адрес загрузки
  90  0000 ~            V_F90C:     DS    2     ; размер-1
  91  0000                  ENDS
  92  0000
  93  0000              ; Адреса блоков переменных
  94  0000              vars1 MON2_VARS_1 = 08F80H
  95  0000              vars2 MON2_VARS_2 = 0F0E0H
  96  0000              vars3 MON2_VARS_3 = 0F900H
  97  0000
  98  0000
  99  0000              ; Начало программы
 100  0000                  ORG   0F100h
 101  F100
 102  F100                      ; Начинаем с очистки экрана
 103  F100 0E 1F                LD    C,1FH ; rjl символа очистки экрана
 104  F102 CD 09 C8             CALL  bios_printChar
 105  F105
 106  F105                      ; Рестарт без очистки экрана
 107  F105              RestartNoCls:
 108  F105 31 BF FF             LD    SP,0FFBFH
 109  F108 21 00 F8             LD    HL,mon2_restart           ; установить обработчик ошибки магнитофона
 110  F10B 22 E1 8F             LD    (bios_vars.tapeError),HL  ; на рестарт монитора
 111  F10E 21 FF 7E             LD    HL,7EFFH    ; 32511
 112  F111 22 AB 8F             LD    (vars1.V_8FAB),HL
 113  F114 CD 1A F1             CALL  SUB1
 114  F117 C3 05 F1             JP    RestartNoCls
 115  F11A
 116  F11A 21 FA F5     SUB1:   LD    HL,txtNewLine             ; 62970
 117  F11D CD 38 C4             CALL  bios_printStringOld
 118  F120 1E 02                LD    E,02H         ; 2
 119  F122 CD 42 C8             CALL  bios_fileGetSetDrive
 120  F125 C6 41                ADD   A,41H         ; 65 'A'
 121  F127 4F                   LD    C,A
 122  F128 CD 09 C8             CALL  bios_printChar
 123  F12B 0E 3E                LD    C,3EH         ; 62 '>'
 124  F12D CD 09 C8             CALL  bios_printChar
 125  F130 CD D5 F1             CALL  SUB2
 126  F133 CD E4 F5             CALL  SUB19
 127  F136 E5                   PUSH  HL
 128  F137 D5                   PUSH  DE
 129  F138 C5                   PUSH  BC
 130  F139 1E 02                LD    E,02H         ; 2
 131  F13B CD 42 C8             CALL  bios_fileGetSetDrive
 132  F13E F5                   PUSH  AF
 133  F13F 21 60 8F             LD    HL,8F60H    ; 36704
 134  F142 11 00 F9             LD    DE,vars3.V_F900   ; 63744
 135  F145 CD 5A C8             CALL  bios_fileNamePrepare
 136  F148 1E 02                LD    E,02H         ; 2
 137  F14A CD 42 C8             CALL  bios_fileGetSetDrive
 138  F14D 5F                   LD    E,A
 139  F14E F1                   POP   AF
 140  F14F BB                   CP    E
 141  F150 C1                   POP   BC
 142  F151 D1                   POP   DE
 143  F152 E1                   POP   HL
 144  F153 C0                   RET   NZ
 145  F154 CD EB F5             CALL  printNewLine
 146  F157 CD 83 F5             CALL  SUB14
 147  F15A FE 44                CP    44H           ; 68 'D'
 148  F15C CA B4 F6             JP    Z,LBL54
 149  F15F FE 4D                CP    4DH           ; 77 'M'
 150  F161 CA 1B F6             JP    Z,LBL46
 151  F164 FE 4C                CP    4CH           ; 76 'L'
 152  F166 CA 4F F5             JP    Z,LBL39
 153  F169 FE 4B                CP    4BH           ; 75 'K'
 154  F16B CA 46 F5             JP    Z,calcAndPrintCRC
 155  F16E FE 54                CP    54H           ; 84 'T'
 156  F170 CA 04 F5             JP    Z,LBL34
 157  F173 FE 58                CP    58H           ; 88 'X'
 158  F175 CA 68 F3             JP    Z,LBL15
 159  F178 FE 57                CP    57H           ; 87 'W'
 160  F17A CA 27 F8             JP    Z,mon2_tapeSave
 161  F17D FE 52                CP    52H           ; 82 'R'
 162  F17F CA 20 F3             JP    Z,LBL12
 163  F182 FE 43                CP    43H           ; 67 'C'
 164  F184 CA 0F F5             JP    Z,LBL35
 165  F187 FE 48                CP    48H           ; 72 'H'
 166  F189 CA 53 F3             JP    Z,LBL14
 167  F18C FE 4E                CP    4EH           ; 78 'N'
 168  F18E CA DF F4             JP    Z,LBL31
 169  F191 FE 47                CP    47H           ; 71 'G'
 170  F193 CA BE F3             JP    Z,LBL18
 171  F196 FE 46                CP    46H           ; 70 'F'
 172  F198 CA FB F4             JP    Z,LBL33
 173  F19B FE 53                CP    53H           ; 83 'S'
 174  F19D CA 2A F4             JP    Z,LBL21
 175  F1A0 FE 4A                CP    4AH           ; 74 'J'
 176  F1A2 CA CB F1             JP    Z,LBL2
 177  F1A5 FE 3F                CP    3FH           ; 63 '?'
 178  F1A7 CA DE F1             JP    Z,Dir_DirDisk
 179  F1AA FE 42                CP    42H           ; 66 'B'
 180  F1AC CA 2E F2             JP    Z,LBL5
 181  F1AF FE 41                CP    41H           ; 65 'A'
 182  F1B1 CA 7F F2             JP    Z,LBL7
 183  F1B4 FE 56                CP    56H           ; 86 'V'
 184  F1B6 CA 90 F2             JP    Z,LBL8
 185  F1B9 FE 55                CP    55H           ; 85 'U'
 186  F1BB CA B7 F2             JP    Z,LBL9
 187  F1BE FE 59                CP    59H           ; 89 'Y'
 188  F1C0 CA DF F2             JP    Z,LBL10
 189  F1C3 FE 51                CP    51H           ; 81 'Q'
 190  F1C5 CA F2 F2             JP    Z,Dir_GetFileAttr
 191  F1C8 C3 8A F6             JP    LBL52
 192  F1CB CD 12 C8     LBL2:   CALL  bios_keyCheck             ; [2]
 193  F1CE 3C                   INC   A
 194  F1CF CA 00 C8             JP    Z,bios_reboot
 195  F1D2 C3 CB F1             JP    LBL2
 196  F1D5 21 60 8F     SUB2:   LD    HL,8F60H    ; 36704
 197  F1D8 36 00                LD    (HL),00H
 198  F1DA 23                   INC   HL
 199  F1DB 36 00                LD    (HL),00H
 200  F1DD C9                   RET
 201  F1DE
 202  F1DE                      ; Директива ? - вывод каталога диска
 203  F1DE              Dir_DirDisk:
 204  F1DE 21 00 F9             LD    HL,vars3.V_F900   ; буфер
 205  F1E1 CD 3F C8             CALL  bios_fileList
 206  F1E4              DirDiskLoop:
 207  F1E4 7E                   LD    A,(HL)            ; первый символ имени файла
 208  F1E5 3C                   INC   A
 209  F1E6 C8                   RET   Z                 ; если FF (конец каталога) - выходим
 210  F1E7 CD 12 C8             CALL  bios_keyCheck     ; Проверяем, не нажата ли клавиша
 211  F1EA FE 1F                CP    1FH               ; СТР
 212  F1EC CC 03 C8             CALL  Z,bios_getch      ; если нажата СТР, ждем нажатия СТР еще раз
 213  F1EF FE 1F                CP    1FH               ; СТР
 214  F1F1 C8                   RET   Z                 ; выход, если СТР нажата еще раз
 215  F1F2 06 06                LD    B,06H             ; печатаем 6 символов имени файла
 216  F1F4 CD 24 F2             CALL  printStringB
 217  F1F7 0E 2E                LD    C,2EH             ; печатаем точку
 218  F1F9 CD 09 C8             CALL  bios_printChar
 219  F1FC 06 03                LD    B,03H             ; печатаем 3 символа расширения файла
 220  F1FE CD 24 F2             CALL  printStringB
 221  F201 CD 9F F6             CALL  printSpace
 222  F204 23                   INC   HL                ; переходим через байт атрибута файла
 223  F205 5E                   LD    E,(HL)            ; DE = адрес загрузки файла
 224  F206 23                   INC   HL
 225  F207 56                   LD    D,(HL)
 226  F208 D5                   PUSH  DE                ; адрес загрузки файла в стеке
 227  F209 23                   INC   HL
 228  F20A 5E                   LD    E,(HL)            ; DE = размер файла
 229  F20B 23                   INC   HL
 230  F20C 56                   LD    D,(HL)
 231  F20D E3                   EX    (SP),HL           ; текущий указатель дескриптора в стек, а HL = адрес загрузки файла
 232  F20E CD 35 F5             CALL  printHexWordHL   ; печатаем начальный адрес загрузки файла
 233  F211 19                   ADD   HL,DE
 234  F212 CD 35 F5             CALL  printHexWordHL   ; печатаем конечынй адрес загрузки файла
 235  F215 E1                   POP   HL                ; HL = указатель дескриптора
 236  F216 7D                   LD    A,L
 237  F217 E6 F0                AND   0F0H
 238  F219 6F                   LD    L,A               ; Обнуляем младшие 4 бита HL - переход на начало текущего дескриптора файла
 239  F21A 11 10 00             LD    DE,0010H
 240  F21D 19                   ADD   HL,DE             ; HL += 16 - переход на следующий дескриптор файла
 241  F21E CD EB F5             CALL  printNewLine
 242  F221 C3 E4 F1             JP    DirDiskLoop
 243  F224
 244  F224                      ; Печать строки по адресу HL длиной B
 245  F224              printStringB:
 246  F224 4E                   LD    C,(HL)
 247  F225 CD 09 C8             CALL  bios_printChar
 248  F228 23                   INC   HL
 249  F229 05                   DEC   B
 250  F22A C2 24 F2             JP    NZ,printStringB
 251  F22D C9                   RET
 252  F22E
 253  F22E 22 0A F9     LBL5:   LD    (vars3.V_F90A),HL
 254  F231 EB                   EX    DE,HL
 255  F232 7A                   LD    A,D
 256  F233 2F                   CPL
 257  F234 57                   LD    D,A
 258  F235 7B                   LD    A,E
 259  F236 2F                   CPL
 260  F237 5F                   LD    E,A
 261  F238 13                   INC   DE
 262  F239 19                   ADD   HL,DE
 263  F23A 22 0C F9             LD    (vars3.V_F90C),HL
 264  F23D CD 09 F3             CALL  EnterFileName
 265  F240 CD 45 C8             CALL  bios_fileCreate
 266  F243 21 59 F2             LD    HL,txtSmallDisk             ; 62041
 267  F246 DC 4A F2             CALL  C,SUB4
 268  F249 C9                   RET
 269  F24A B7           SUB4:   OR    A
 270  F24B CA 52 F2             JP    Z,LBL6
 271  F24E CD 18 C8             CALL  bios_printString
 272  F251 C9                   RET
 273  F252 21 66 F2     LBL6:   LD    HL,txtSmallDir             ; 62054
 274  F255 CD 18 C8             CALL  bios_printString
 275  F258 C9                   RET
 276  F259
 277  F259                      ; Русский текст в кодировке КОИ-8
 278  F259 0A 0D 6D 61  txtSmallDisk:   DB  0AH,0DH,"mal disk !",00H
 278  F25D 6C 20 64 69
 278  F261 73 6B 20 21
 278  F265 00
 279  F266 0A 0D 6D 61  txtSmallDir:    DB  0AH,0DH,"mal DIR !", 00H
 279  F26A 6C 20 44 49
 279  F26E 52 20 21 00
 280  F272 0A 0D 6E 65  txtNoFile:      DB  0AH,0DH,"net fajla ",00H
 280  F276 74 20 66 61
 280  F27A 6A 6C 61 20
 280  F27E 00
 281  F27F
 282  F27F E5           LBL7:   PUSH  HL
 283  F280 CD 09 F3             CALL  EnterFileName
 284  F283 D1                   POP   DE
 285  F284 0E 01                LD    C,01H
 286  F286 CD 54 C8             CALL  bios_fileGetSetAddr
 287  F289 21 72 F2             LD    HL,txtNoFile             ; 62066
 288  F28C DC 18 C8             CALL  C,bios_printString
 289  F28F C9                   RET
 290  F290 E5           LBL8:   PUSH  HL
 291  F291 CD 09 F3             CALL  EnterFileName
 292  F294 D1                   POP   DE
 293  F295 D5                   PUSH  DE
 294  F296 CD 66 C8             CALL  bios_fileLoad2
 295  F299 F5                   PUSH  AF
 296  F29A 21 72 F2             LD    HL,txtNoFile             ; 62066
 297  F29D DC 18 C8             CALL  C,bios_printString
 298  F2A0 F1                   POP   AF
 299  F2A1 D1                   POP   DE
 300  F2A2 D8                   RET   C
 301  F2A3 D5                   PUSH  DE
 302  F2A4 21 00 F9             LD    HL,vars3.V_F900   ; 63744
 303  F2A7 CD 51 C8             CALL  bios_fileLoadInfo
 304  F2AA 2A 0C F9             LD    HL,(vars3.V_F90C)
 305  F2AD EB                   EX    DE,HL
 306  F2AE E1                   POP   HL
 307  F2AF CD 35 F5             CALL  printHexWordHL
 308  F2B2 19                   ADD   HL,DE
 309  F2B3 CD 35 F5             CALL  printHexWordHL
 310  F2B6 C9                   RET
 311  F2B7 CD 09 F3     LBL9:   CALL  EnterFileName
 312  F2BA CD 48 C8             CALL  bios_fileLoad
 313  F2BD F5                   PUSH  AF
 314  F2BE 21 72 F2             LD    HL,txtNoFile             ; 62066
 315  F2C1 DC 18 C8             CALL  C,bios_printString
 316  F2C4 CD 9F F6             CALL  printSpace
 317  F2C7 F1                   POP   AF
 318  F2C8 D8                   RET   C
 319  F2C9 21 00 F9             LD    HL,vars3.V_F900   ; 63744
 320  F2CC CD 51 C8             CALL  bios_fileLoadInfo
 321  F2CF 2A 0A F9             LD    HL,(vars3.V_F90A)
 322  F2D2 E5                   PUSH  HL
 323  F2D3 CD 35 F5             CALL  printHexWordHL
 324  F2D6 D1                   POP   DE
 325  F2D7 2A 0C F9             LD    HL,(vars3.V_F90C)
 326  F2DA 19                   ADD   HL,DE
 327  F2DB CD 35 F5             CALL  printHexWordHL
 328  F2DE C9                   RET
 329  F2DF
 330  F2DF E5           LBL10:  PUSH  HL
 331  F2E0 CD 09 F3             CALL  EnterFileName         ; ввод имени файла
 332  F2E3 0E 01                LD    C,01H                 ; режим для фаункции bios_fileGetSetAttr - установка байта атрибутов файла
 333  F2E5 E3                   EX    (SP),HL
 334  F2E6 7D                   LD    A,L
 335  F2E7 E1                   POP   HL
 336  F2E8 CD 57 C8             CALL  bios_fileGetSetAttr   ; установка байта атрибутов файла
 337  F2EB 21 72 F2             LD    HL,txtNoFile
 338  F2EE DC 18 C8             CALL  C,bios_printString    ; если файл не найден - вывести сообщение
 339  F2F1 C9                   RET
 340  F2F2
 341  F2F2                      ; Директива Q - вывод атрибутов файла
 342  F2F2              Dir_GetFileAttr:
 343  F2F2 CD 09 F3             CALL  EnterFileName         ; ввод имени файла
 344  F2F5 0E 02                LD    C,02H                 ; режим для фаункции bios_fileGetSetAttr - чтение байта атрибутов файла
 345  F2F7 CD 57 C8             CALL  bios_fileGetSetAttr   ; чтение байта атрибутов файла
 346  F2FA F5                   PUSH  AF                    ; результат и флаг ошибки (cf) - в стек
 347  F2FB 21 72 F2             LD    HL,txtNoFile
 348  F2FE DC 18 C8             CALL  C,bios_printString    ; если файл не найден - вывести сообщение
 349  F301 CD 9F F6             CALL  printSpace
 350  F304 F1                   POP   AF                    ; вытаскиваем байт атрибутов
 351  F305 D4 15 C8             CALL  NC,bios_printHexByte  ; печатаем байт атрибутов, если не было ошибки
 352  F308 C9                   RET
 353  F309
 354  F309                      ; Запрос имени файла
 355  F309                      ; на выходе:
 356  F309                      ;   HL = адрем буфера с подготовленным именем файла
 357  F309              EnterFileName:
 358  F309 21 0B F6             LD    HL,txtFileQuestMark   ; печать приглашеиня ввести имя файла
 359  F30C CD 18 C8             CALL  bios_printString
 360  F30F 21 60 8F             LD    HL,8F60H              ; буфер для ввода строки
 361  F312 11 6D 8F             LD    DE,8F6DH
 362  F315 CD 0F C8             CALL  bios_input
 363  F318 11 00 F9             LD    DE,vars3.V_F900       ; буфер для подготовленного имени файла
 364  F31B CD 5A C8             CALL  bios_fileNamePrepare  ; подготавливаем имя файла
 365  F31E EB                   EX    DE,HL                 ; HL = подготовленное имя файла
 366  F31F C9                   RET
 367  F320
 368  F320 CD 24 F8     LBL12:  CALL  SUB34
 369  F323 C5                   PUSH  BC
 370  F324 D5                   PUSH  DE
 371  F325 E5                   PUSH  HL
 372  F326 CD 2A C8             CALL  bios_calcCS
 373  F329 E1                   POP   HL
 374  F32A CD 35 F5             CALL  printHexWordHL
 375  F32D E1                   POP   HL
 376  F32E CD 35 F5             CALL  printHexWordHL
 377  F331 E1                   POP   HL
 378  F332 50                   LD    D,B
 379  F333 59                   LD    E,C
 380  F334 CD 27 C4             CALL  bios_cmp_hl_de
 381  F337 C2 3E F3             JP    NZ,LBL13
 382  F33A CD 35 F5             CALL  printHexWordHL
 383  F33D C9                   RET
 384  F33E CD 9F F6     LBL13:  CALL  printSpace
 385  F341 0E 3F                LD    C,3FH         ; 63 '?'
 386  F343 CD 09 C8             CALL  bios_printChar
 387  F346 C9                   RET
 388  F347 F5           SUB6: PUSH  AF
 389  F348 3A E9 8F             LD    A,(bios_vars.cursorCfg)
 390  F34B F5                   PUSH  AF
 391  F34C 3E 11                LD    A,11H         ; 17
 392  F34E C3 83 F7             JP    LBL63
 393  F351 00                   NOP
 394  F352 00                   NOP
 395  F353 E5           LBL14:  PUSH  HL
 396  F354 19                   ADD   HL,DE
 397  F355 CD 35 F5             CALL  printHexWordHL
 398  F358 CD 9F F6             CALL  printSpace
 399  F35B 7B                   LD    A,E
 400  F35C 2F                   CPL
 401  F35D 5F                   LD    E,A
 402  F35E 7A                   LD    A,D
 403  F35F 2F                   CPL
 404  F360 57                   LD    D,A
 405  F361 13                   INC   DE
 406  F362 E1                   POP   HL
 407  F363 19                   ADD   HL,DE
 408  F364 CD 35 F5             CALL  printHexWordHL
 409  F367 C9                   RET
 410  F368 21 A4 8F     LBL15:  LD    HL,vars1.V_8FA3+1 ; 36772
 411  F36B 11 0C F7             LD    DE,txtRegisters             ; 63244
 412  F36E 0E 04                LD    C,04H         ; 4
 413  F370 C5           LBL16:  PUSH  BC
 414  F371 CD 9D F3             CALL  SUB7
 415  F374 C1                   POP   BC
 416  F375 0D                   DEC   C
 417  F376 C2 70 F3             JP    NZ,LBL16
 418  F379 CD B2 F3             CALL  SUB8
 419  F37C 2A 9D 8F             LD    HL,(vars1.V_8F9D)
 420  F37F CD 35 F5             CALL  printHexWordHL
 421  F382 CD B2 F3             CALL  SUB8
 422  F385 2A 97 8F             LD    HL,(vars1.V_8F97)
 423  F388 CD 35 F5             CALL  printHexWordHL
 424  F38B CD B2 F3             CALL  SUB8
 425  F38E 2A A5 8F             LD    HL,(vars1.V_8FA5)
 426  F391 CD 35 F5             CALL  printHexWordHL
 427  F394 C9                   RET
 428  F395 CD 1B C8     LBL17:  CALL  bios_keyScan
 429  F398 3C                   INC   A
 430  F399 C8                   RET   Z
 431  F39A 36 FF                LD    (HL),0FFH   ; 255
 432  F39C C9                   RET
 433  F39D 46           SUB7:   LD    B,(HL)
 434  F39E 2B                   DEC   HL
 435  F39F 4E                   LD    C,(HL)
 436  F3A0 2B                   DEC   HL
 437  F3A1 C5                   PUSH  BC
 438  F3A2 CD B2 F3             CALL  SUB8
 439  F3A5 78                   LD    A,B
 440  F3A6 CD 15 F8             CALL  mon2_printHexByte
 441  F3A9 CD B2 F3             CALL  SUB8
 442  F3AC C1                   POP   BC
 443  F3AD 79                   LD    A,C
 444  F3AE CD 15 F8             CALL  mon2_printHexByte
 445  F3B1 C9                   RET
 446  F3B2 EB           SUB8:   EX    DE,HL         ; [5]
 447  F3B3 C5                   PUSH  BC
 448  F3B4 CD 9F F6             CALL  printSpace
 449  F3B7 CD 38 C4             CALL  bios_printStringOld
 450  F3BA 23                   INC   HL
 451  F3BB C1                   POP   BC
 452  F3BC EB                   EX    DE,HL
 453  F3BD C9                   RET
 454  F3BE 7B           LBL18:  LD    A,E
 455  F3BF B7                   OR    A
 456  F3C0 C2 C8 F3             JP    NZ,LBL19
 457  F3C3 7A                   LD    A,D
 458  F3C4 B7                   OR    A
 459  F3C5 CA EB F3             JP    Z,LBL20
 460  F3C8 E5           LBL19:  PUSH  HL
 461  F3C9 EB                   EX    DE,HL
 462  F3CA 22 97 8F             LD    (vars1.V_8F97),HL
 463  F3CD 7E                   LD    A,(HL)
 464  F3CE 36 FF                LD    (HL),0FFH   ; 255
 465  F3D0 32 99 8F             LD    (vars1.V_8F99),A
 466  F3D3 21 38 00             LD    HL,0038H    ; 56
 467  F3D6 11 9A 8F             LD    DE,vars1.V_8F9A   ; 36762
 468  F3D9 01 F7 F3             LD    BC,REF4             ; 62455
 469  F3DC CD F4 F3             CALL  SUB11
 470  F3DF 36 C3                LD    (HL),0C3H   ; 195
 471  F3E1 CD F2 F3             CALL  SUB10
 472  F3E4 CD F2 F3             CALL  SUB10
 473  F3E7 70                   LD    (HL),B
 474  F3E8 2B                   DEC   HL
 475  F3E9 71                   LD    (HL),C
 476  F3EA E1                   POP   HL
 477  F3EB CD F1 F3     LBL20:  CALL  SUB9
 478  F3EE C3 05 F1             JP    RestartNoCls
 479  F3F1 E9           SUB9:   JP    (HL)
 480  F3F2 23           SUB10:  INC   HL            ; [4]
 481  F3F3 13                   INC   DE
 482  F3F4 7E           SUB11:  LD    A,(HL)                ; [2]
 483  F3F5 12                   LD    (DE),A
 484  F3F6 C9                   RET
 485  F3F7 22 9D 8F     REF4:   LD    (vars1.V_8F9D),HL
 486  F3FA EB                   EX    DE,HL
 487  F3FB 22 9F 8F             LD    (vars1.V_8F9F),HL
 488  F3FE C5                   PUSH  BC
 489  F3FF E1                   POP   HL
 490  F400 22 A1 8F             LD    (vars1.V_8FA1),HL
 491  F403 F5                   PUSH  AF
 492  F404 E1                   POP   HL
 493  F405 22 A3 8F             LD    (vars1.V_8FA3),HL
 494  F408 21 00 00             LD    HL,0000H
 495  F40B 39                   ADD   HL,SP
 496  F40C 23                   INC   HL
 497  F40D 23                   INC   HL
 498  F40E 22 A5 8F             LD    (vars1.V_8FA5),HL
 499  F411 2A 97 8F             LD    HL,(vars1.V_8F97)
 500  F414 3A 99 8F             LD    A,(vars1.V_8F99)
 501  F417 77                   LD    (HL),A
 502  F418 21 9A 8F             LD    HL,vars1.V_8F9A   ; 36762
 503  F41B 11 38 00             LD    DE,0038H    ; 56
 504  F41E CD F4 F3             CALL  SUB11
 505  F421 CD F2 F3             CALL  SUB10
 506  F424 CD F2 F3             CALL  SUB10
 507  F427 C3 05 F1             JP    RestartNoCls
 508  F42A E5           LBL21:  PUSH  HL
 509  F42B C5                   PUSH  BC
 510  F42C 21 60 8F             LD    HL,8F60H    ; 36704
 511  F42F 0E 00                LD    C,00H
 512  F431 7E           LBL22:  LD    A,(HL)
 513  F432 FE 2C                CP    2CH           ; 44 ','
 514  F434 C2 38 F4             JP    NZ,LBL23
 515  F437 0C                   INC   C
 516  F438 23           LBL23:  INC   HL
 517  F439 FE 0D                CP    0DH           ; 13
 518  F43B C2 31 F4             JP    NZ,LBL22
 519  F43E 0D                   DEC   C
 520  F43F 79                   LD    A,C
 521  F440 32 89 8F             LD    (vars1.V_8F89),A
 522  F443 FE 01                CP    01H           ; 1
 523  F445 C1                   POP   BC
 524  F446 E1                   POP   HL
 525  F447 CA 62 F4             JP    Z,LBL24
 526  F44A E5                   PUSH  HL
 527  F44B D5                   PUSH  DE
 528  F44C C5                   PUSH  BC
 529  F44D 2A 87 8F             LD    HL,(vars1.V_8F87)
 530  F450 4D                   LD    C,L
 531  F451 44                   LD    B,H
 532  F452 CD 8B F5             CALL  SUB15
 533  F455 7D                   LD    A,L
 534  F456 32 8B 8F             LD    (vars1.V_8F8B),A
 535  F459 21 8C 8F             LD    HL,vars1.V_8F8C   ; 36748
 536  F45C 73                   LD    (HL),E
 537  F45D 23                   INC   HL
 538  F45E 71                   LD    (HL),C
 539  F45F C1                   POP   BC
 540  F460 D1                   POP   DE
 541  F461 E1                   POP   HL
 542  F462 79           LBL24:  LD    A,C
 543  F463 32 8A 8F             LD    (vars1.V_8F8A),A
 544  F466 E5           LBL25:  PUSH  HL            ; [2]
 545  F467 21 8A 8F             LD    HL,vars1.V_8F8A   ; 36746
 546  F46A 22 8E 8F             LD    (vars1.V_8F8E),HL
 547  F46D E1                   POP   HL
 548  F46E CD 27 C4             CALL  bios_cmp_hl_de
 549  F471 C8                   RET   Z
 550  F472 CD A5 F6             CALL  SUB24
 551  F475 3A 89 8F             LD    A,(vars1.V_8F89)
 552  F478 32 90 8F             LD    (vars1.V_8F90),A
 553  F47B 47                   LD    B,A
 554  F47C 4E           LBL26:  LD    C,(HL)
 555  F47D E5                   PUSH  HL
 556  F47E 2A 8E 8F             LD    HL,(vars1.V_8F8E)
 557  F481 7E                   LD    A,(HL)
 558  F482 B9                   CP    C
 559  F483 C2 D0 F4             JP    NZ,LBL30
 560  F486 23                   INC   HL
 561  F487 22 8E 8F             LD    (vars1.V_8F8E),HL
 562  F48A E1                   POP   HL
 563  F48B 23                   INC   HL
 564  F48C 05                   DEC   B
 565  F48D C2 7C F4             JP    NZ,LBL26
 566  F490 E5                   PUSH  HL
 567  F491 D5                   PUSH  DE
 568  F492 C5                   PUSH  BC
 569  F493 F5                   PUSH  AF
 570  F494 3A 89 8F             LD    A,(vars1.V_8F89)
 571  F497 2B           LBL27:  DEC   HL
 572  F498 3D                   DEC   A
 573  F499 C2 97 F4             JP    NZ,LBL27
 574  F49C CD 35 F5             CALL  printHexWordHL
 575  F49F 2B                   DEC   HL
 576  F4A0 2B                   DEC   HL
 577  F4A1 3A 89 8F             LD    A,(vars1.V_8F89)
 578  F4A4 C6 04                ADD   A,04H         ; 4
 579  F4A6 47                   LD    B,A
 580  F4A7 CD D5 F4     LBL28:  CALL  SUB12
 581  F4AA 23                   INC   HL
 582  F4AB 05                   DEC   B
 583  F4AC C2 A7 F4             JP    NZ,LBL28
 584  F4AF 21 FD F5             LD    HL,txtHomeRight11Dot
 585  F4B2 CD 18 F8             CALL  mon2_printString
 586  F4B5 3A 89 8F             LD    A,(vars1.V_8F89)
 587  F4B8 47                   LD    B,A
 588  F4B9 80                   ADD   A,B
 589  F4BA 80                   ADD   A,B
 590  F4BB 3D                   DEC   A
 591  F4BC 5F                   LD    E,A
 592  F4BD 0E 18                LD    C,18H         ; 24
 593  F4BF CD 47 F3     LBL29:  CALL  SUB6
 594  F4C2 1D                   DEC   E
 595  F4C3 C2 BF F4             JP    NZ,LBL29
 596  F4C6 CD EB F5             CALL  printNewLine
 597  F4C9 F1                   POP   AF
 598  F4CA C1                   POP   BC
 599  F4CB D1                   POP   DE
 600  F4CC E1                   POP   HL
 601  F4CD C3 66 F4             JP    LBL25
 602  F4D0 E1           LBL30:  POP   HL
 603  F4D1 23                   INC   HL
 604  F4D2 C3 66 F4             JP    LBL25
 605  F4D5 7E           SUB12:  LD    A,(HL)
 606  F4D6 C5                   PUSH  BC
 607  F4D7 CD 15 F8             CALL  mon2_printHexByte
 608  F4DA CD 9F F6             CALL  printSpace
 609  F4DD C1                   POP   BC
 610  F4DE C9                   RET
 611  F4DF 7E           LBL31:  LD    A,(HL)                ; [2]
 612  F4E0 B9                   CP    C
 613  F4E1 CA F3 F4             JP    Z,LBL32
 614  F4E4 CD 35 F5             CALL  printHexWordHL
 615  F4E7 7E                   LD    A,(HL)
 616  F4E8 C5                   PUSH  BC
 617  F4E9 CD 15 F8             CALL  mon2_printHexByte
 618  F4EC CD A5 F6             CALL  SUB24
 619  F4EF CD EB F5             CALL  printNewLine
 620  F4F2 C1                   POP   BC
 621  F4F3 CD 27 C4     LBL32:  CALL  bios_cmp_hl_de
 622  F4F6 C8                   RET   Z
 623  F4F7 23                   INC   HL
 624  F4F8 C3 DF F4             JP    LBL31
 625  F4FB 71           LBL33:  LD    (HL),C                ; [2]
 626  F4FC CD 27 C4             CALL  bios_cmp_hl_de
 627  F4FF C8                   RET   Z
 628  F500 23                   INC   HL
 629  F501 C3 FB F4             JP    LBL33
 630  F504 7E           LBL34:  LD    A,(HL)                ; [2]
 631  F505 02                   LD    (BC),A
 632  F506 CD 27 C4             CALL  bios_cmp_hl_de
 633  F509 C8                   RET   Z
 634  F50A 23                   INC   HL
 635  F50B 03                   INC   BC
 636  F50C C3 04 F5             JP    LBL34
 637  F50F 0A           LBL35:  LD    A,(BC)                ; [2]
 638  F510 BE                   CP    (HL)
 639  F511 CA 2C F5             JP    Z,LBL36
 640  F514 C5                   PUSH  BC
 641  F515 CD 35 F5             CALL  printHexWordHL
 642  F518 7E                   LD    A,(HL)
 643  F519 CD 15 F8             CALL  mon2_printHexByte
 644  F51C CD 9F F6             CALL  printSpace
 645  F51F C1                   POP   BC
 646  F520 C5                   PUSH  BC
 647  F521 0A                   LD    A,(BC)
 648  F522 CD 15 F8             CALL  mon2_printHexByte
 649  F525 CD A5 F6             CALL  SUB24
 650  F528 CD EB F5             CALL  printNewLine
 651  F52B C1                   POP   BC
 652  F52C CD 27 C4     LBL36:  CALL  bios_cmp_hl_de
 653  F52F C8                   RET   Z
 654  F530 23                   INC   HL
 655  F531 03                   INC   BC
 656  F532 C3 0F F5             JP    LBL35
 657  F535
 658  F535                      ; Печать слова в HEX формате из HL, обрамляется пробелами
 659  F535              printHexWordHL:
 660  F535 C5                   PUSH  BC
 661  F536 CD 9F F6             CALL  printSpace
 662  F539              printHexWordHL_noSpace:
 663  F539 7C                   LD    A,H
 664  F53A CD 15 F8             CALL  mon2_printHexByte
 665  F53D 7D                   LD    A,L
 666  F53E CD 15 F8             CALL  mon2_printHexByte
 667  F541 CD 9F F6             CALL  printSpace
 668  F544 C1                   POP   BC
 669  F545 C9                   RET
 670  F546
 671  F546                      ; Расчет и печать контрольной суммы
 672  F546                      ; вход:
 673  F546                      ;   hl = начальный адрес
 674  F546                      ;   de = конечный адрес
 675  F546              calcAndPrintCRC:
 676  F546 CD 2A F8             CALL  mon2_calcCS
 677  F549 C5                   PUSH  BC
 678  F54A E1                   POP   HL    ; hl = bc
 679  F54B CD 35 F5             CALL  printHexWordHL
 680  F54E C9                   RET
 681  F54F
 682  F54F CD 35 F5     LBL39:  CALL  printHexWordHL         ; [2]
 683  F552 06 10                LD    B,10H         ; 16
 684  F554 4E           LBL40:  LD    C,(HL)
 685  F555 3A 85 8F             LD    A,(vars1.V_8F85)
 686  F558 B7                   OR    A
 687  F559 CA 5E F5             JP    Z,LBL41
 688  F55C A1                   AND   C
 689  F55D 4F                   LD    C,A
 690  F55E 79           LBL41:  LD    A,C
 691  F55F FE 20                CP    20H           ; 32 ' '
 692  F561 DA 69 F5             JP    C,LBL42
 693  F564 FE 7F                CP    7FH           ; 127
 694  F566 DA 6B F5             JP    C,LBL43
 695  F569 0E 2E        LBL42:  LD    C,2EH         ; 46 '.'
 696  F56B CD 09 F8     LBL43:  CALL  mon2_printChar
 697  F56E CD 9F F6             CALL  printSpace
 698  F571 CD 27 C4             CALL  bios_cmp_hl_de
 699  F574 C8                   RET   Z
 700  F575 05                   DEC   B
 701  F576 23                   INC   HL
 702  F577 C2 54 F5             JP    NZ,LBL40
 703  F57A CD A5 F6             CALL  SUB24
 704  F57D CD EB F5             CALL  printNewLine
 705  F580 C3 4F F5             JP    LBL39
 706  F583 01 60 8F     SUB14:  LD    BC,8F60H    ; 36704
 707  F586 0A                   LD    A,(BC)
 708  F587 32 80 8F             LD    (vars1.V_8F80),A
 709  F58A 03                   INC   BC
 710  F58B CD B2 F5     SUB15:  CALL  SUB16
 711  F58E 22 81 8F             LD    (vars1.V_8F81),HL
 712  F591 CD B2 F5             CALL  SUB16
 713  F594 22 83 8F             LD    (vars1.V_8F83),HL
 714  F597 CD B2 F5             CALL  SUB16
 715  F59A 22 85 8F             LD    (vars1.V_8F85),HL
 716  F59D 69                   LD    L,C
 717  F59E 60                   LD    H,B
 718  F59F 22 87 8F             LD    (vars1.V_8F87),HL
 719  F5A2 2A 85 8F             LD    HL,(vars1.V_8F85)
 720  F5A5 4D                   LD    C,L
 721  F5A6 44                   LD    B,H
 722  F5A7 2A 83 8F             LD    HL,(vars1.V_8F83)
 723  F5AA EB                   EX    DE,HL
 724  F5AB 2A 81 8F             LD    HL,(vars1.V_8F81)
 725  F5AE 3A 80 8F             LD    A,(vars1.V_8F80)
 726  F5B1 C9                   RET
 727  F5B2 21 00 00     SUB16:  LD    HL,0000H    ; [3]
 728  F5B5 0A           LBL44:  LD    A,(BC)
 729  F5B6 FE 0D                CP    0DH           ; 13
 730  F5B8 C8                   RET   Z
 731  F5B9 FE 2C                CP    2CH           ; 44 ','
 732  F5BB CA CB F5             JP    Z,LBL45
 733  F5BE CD CD F5             CALL  SUB17
 734  F5C1 29                   ADD   HL,HL
 735  F5C2 29                   ADD   HL,HL
 736  F5C3 29                   ADD   HL,HL
 737  F5C4 29                   ADD   HL,HL
 738  F5C5 85                   ADD   A,L
 739  F5C6 6F                   LD    L,A
 740  F5C7 03                   INC   BC
 741  F5C8 C3 B5 F5             JP    LBL44
 742  F5CB 03           LBL45:  INC   BC
 743  F5CC C9                   RET
 744  F5CD D6 30        SUB17:  SUB   30H           ; 48 '0'
 745  F5CF FE 0A                CP    0AH           ; 10
 746  F5D1 D8                   RET   C
 747  F5D2 D6 11                SUB   11H           ; 17
 748  F5D4 FE 06                CP    06H           ; 6
 749  F5D6 D2 8A F6             JP    NC,LBL52
 750  F5D9 C6 0A                ADD   A,0AH         ; 10
 751  F5DB C9                   RET
 752  F5DC C5           SUB18:  PUSH  BC
 753  F5DD 0E 19                LD    C,19H         ; 25
 754  F5DF CD 09 F8             CALL  mon2_printChar
 755  F5E2 C1                   POP   BC
 756  F5E3 C9                   RET
 757  F5E4 E5           SUB19:  PUSH  HL
 758  F5E5 21 60 8F             LD    HL,8F60H    ; 36704
 759  F5E8 C3 93 F6             JP    LBL53
 760  F5EB
 761  F5EB                      ; Печать перевода строки (0Ah, 0Dh)
 762  F5EB              printNewLine:
 763  F5EB 0E 0A                LD    C,0AH
 764  F5ED CD 09 F8             CALL  mon2_printChar
 765  F5F0 0E 0D                LD    C,0DH
 766  F5F2 CD 09 F8             CALL  mon2_printChar
 767  F5F5 C9                   RET
 768  F5F6
 769  F5F6                      ; Русский текст в кодировке КОИ-8
 770  F5F6 20 20 3F 00  txtSpaceQuestMark:  DB  "  ?",00H
 771  F5FA 0A 0D 00     txtNewLine:         DB  0AH,0DH,00H
 772  F5FD 0D 18 18 18  txtHomeRight11Dot:  DB  0DH,18H,18H,18H,18H,18H,18H,18H,18H,18H,18H,18H,2EH,00H
 772  F601 18 18 18 18
 772  F605 18 18 18 18
 772  F609 2E 00
 773  F60B 66 61 6A 6C  txtFileQuestMark:   DB  "fajl ? ",00H
 773  F60F 20 3F 20 00
 774  F613 0A 66 61 6A                      DB  0AH,"fajl: ",00H
 774  F617 6C 3A 20 00
 775  F61B
 776  F61B CD DC F5     LBL46:  CALL  SUB18
 777  F61E CD EB F5     LBL47:  CALL  printNewLine         ; [2]
 778  F621 CD 35 F5             CALL  printHexWordHL
 779  F624 7E                   LD    A,(HL)
 780  F625 CD 15 F8             CALL  mon2_printHexByte
 781  F628 CD 9F F6             CALL  printSpace
 782  F62B CD 03 F8             CALL  mon2_getch
 783  F62E CD AE F6             CALL  SUB25
 784  F631 FE 1A                CP    1AH           ; 26
 785  F633 CA 3F F6             JP    Z,LBL48
 786  F636 FE 08                CP    08H           ; 8
 787  F638 CA 43 F6             JP    Z,LBL49
 788  F63B CD 47 F6             CALL  SUB21
 789  F63E 77                   LD    (HL),A
 790  F63F 23           LBL48:  INC   HL
 791  F640 C3 1E F6             JP    LBL47
 792  F643 2B           LBL49:  DEC   HL
 793  F644 C3 1E F6             JP    LBL47
 794  F647 C5           SUB21:  PUSH  BC
 795  F648 C3 4F F6             JP    LBL50
 796  F64B C5                   PUSH  BC
 797  F64C CD 03 F8             CALL  mon2_getch
 798  F64F CD 60 F6     LBL50:  CALL  SUB22
 799  F652 07                   RLCA
 800  F653 07                   RLCA
 801  F654 07                   RLCA
 802  F655 07                   RLCA
 803  F656 47                   LD    B,A
 804  F657 CD 03 F8             CALL  mon2_getch
 805  F65A CD 60 F6             CALL  SUB22
 806  F65D B0                   OR    B
 807  F65E C1                   POP   BC
 808  F65F C9                   RET
 809  F660 FE 20        SUB22:  CP    20H           ; 32 ' '; [2]
 810  F662 DA 05 F1             JP    C,RestartNoCls
 811  F665 FE 3A                CP    3AH           ; 58 ':'
 812  F667 DA 7F F6             JP    C,LBL51
 813  F66A E6 5F                AND   5FH           ; 95 '_'
 814  F66C FE 41                CP    41H           ; 65 'A'
 815  F66E DA 8A F6             JP    C,LBL52
 816  F671 FE 47                CP    47H           ; 71 'G'
 817  F673 D2 8A F6             JP    NC,LBL52
 818  F676 F5                   PUSH  AF
 819  F677 4F                   LD    C,A
 820  F678 CD 09 F8             CALL  mon2_printChar
 821  F67B F1                   POP   AF
 822  F67C D6 37                SUB   37H           ; 55 '7'
 823  F67E C9                   RET
 824  F67F F6 10        LBL51:  OR    10H           ; 16
 825  F681 F5                   PUSH  AF
 826  F682 4F                   LD    C,A
 827  F683 CD 09 F8             CALL  mon2_printChar
 828  F686 F1                   POP   AF
 829  F687 D6 30                SUB   30H           ; 48 '0'
 830  F689 C9                   RET
 831  F68A 21 F6 F5     LBL52:  LD    HL,txtSpaceQuestMark             ; 62966; [4]
 832  F68D CD 38 C4             CALL  bios_printStringOld
 833  F690 C3 05 F1             JP    RestartNoCls
 834  F693 C5           LBL53:  PUSH  BC
 835  F694 D5                   PUSH  DE
 836  F695 11 80 8F             LD    DE,vars1.V_8F80   ; 36736
 837  F698 CD 93 F7             CALL  SUB28
 838  F69B D1                   POP   DE
 839  F69C C1                   POP   BC
 840  F69D E1                   POP   HL
 841  F69E C9                   RET
 842  F69F
 843  F69F                      ; Печать пробела
 844  F69F              printSpace:
 845  F69F 0E 20                LD    C,20H
 846  F6A1 CD 09 F8             CALL  mon2_printChar
 847  F6A4 C9                   RET
 848  F6A5
 849  F6A5 CD 1B F8     SUB24:  CALL  mon2_keyScan         ; [5]
 850  F6A8 FE 1F                CP    1FH           ; 31
 851  F6AA C0                   RET   NZ
 852  F6AB CD 03 F8             CALL  mon2_getch
 853  F6AE FE 1F        SUB25:  CP    1FH           ; 31
 854  F6B0 C0                   RET   NZ
 855  F6B1 C3 05 F1             JP    RestartNoCls
 856  F6B4 CD 36 F8     LBL54:  CALL  mon2_printHexWord
 857  F6B7 7D                   LD    A,L
 858  F6B8 E6 0F                AND   0FH           ; 15
 859  F6BA 4F                   LD    C,A
 860  F6BB 2F                   CPL
 861  F6BC E6 0F                AND   0FH           ; 15
 862  F6BE 3C                   INC   A
 863  F6BF 47                   LD    B,A
 864  F6C0 79                   LD    A,C
 865  F6C1 87                   ADD   A,A
 866  F6C2 87                   ADD   A,A
 867  F6C3 87                   ADD   A,A
 868  F6C4 81                   ADD   A,C
 869  F6C5 C6 0F                ADD   A,0FH         ; 15
 870  F6C7 32 FD 8F             LD    (bios_vars.cursorX),A
 871  F6CA 7E           LBL55:  LD    A,(HL)
 872  F6CB CD 15 F8             CALL  mon2_printHexByte
 873  F6CE 78                   LD    A,B
 874  F6CF FE 09                CP    09H           ; 9
 875  F6D1 C2 DC F6             JP    NZ,LBL56
 876  F6D4 0E 2D                LD    C,2DH         ; 45 '-'
 877  F6D6 CD 09 F8             CALL  mon2_printChar
 878  F6D9 C3 DF F6             JP    LBL57
 879  F6DC CD 9F F6     LBL56:  CALL  printSpace
 880  F6DF CD 27 C4     LBL57:  CALL  bios_cmp_hl_de
 881  F6E2 C8                   RET   Z
 882  F6E3 05                   DEC   B
 883  F6E4 23                   INC   HL
 884  F6E5 C2 CA F6             JP    NZ,LBL55
 885  F6E8 CD A5 F6             CALL  SUB24
 886  F6EB CD EB F5             CALL  printNewLine
 887  F6EE C3 B4 F6             JP    LBL54
 888  F6F1 5F                   LD    E,A
 889  F6F2 0F                   RRCA
 890  F6F3 0F                   RRCA
 891  F6F4 0F                   RRCA
 892  F6F5 0F                   RRCA
 893  F6F6 CD 00 F7             CALL  SUB26
 894  F6F9 57                   LD    D,A
 895  F6FA 7B                   LD    A,E
 896  F6FB CD 00 F7             CALL  SUB26
 897  F6FE 5F                   LD    E,A
 898  F6FF C9                   RET
 899  F700 E6 0F        SUB26:  AND   0FH           ; 15; [2]
 900  F702 FE 0A                CP    0AH           ; 10
 901  F704 DA 09 F7             JP    C,LBL58
 902  F707 C6 07                ADD   A,07H         ; 7
 903  F709 C6 30        LBL58:  ADD   A,30H         ; 48 '0'
 904  F70B C9                   RET
 905  F70C
 906  F70C              txtRegisters:
 907  F70C 41 3D 00             DB    "A=",0
 908  F70F 46 3D 00             DB    "F=",0
 909  F712 42 3D 00             DB    "B=",0
 910  F715 43 3D 00             DB    "C=",0
 911  F718 44 3D 00             DB    "D=",0
 912  F71B 45 3D 00             DB    "E=",0
 913  F71E 48 3D 00             DB    "H=",0
 914  F721 4C 3D 00             DB    "L=",0
 915  F724 0A 0D 20 4D          DB    0AH,0DH," M(HL)=",0
 915  F728 28 48 4C 29
 915  F72C 3D 00
 916  F72E 50 43 3D 00          DB    "PC=",0
 917  F732 53 50 3D 00          DB    "SP=",0
 918  F736
 919  F736 F5           SUB27:  PUSH  AF            ; [2]
 920  F737 3A E6 F0     LBL59:  LD    A,(vars2.V_F0E6)
 921  F73A E6 0C                AND   0CH           ; 12
 922  F73C C2 37 F7             JP    NZ,LBL59
 923  F73F 79                   LD    A,C
 924  F740 32 E5 F0             LD    (vars2.V_F0E5),A
 925  F743 3A E6 F0             LD    A,(vars2.V_F0E6)
 926  F746 F6 20                OR    20H           ; 32 ' '
 927  F748 32 E6 F0             LD    (vars2.V_F0E6),A
 928  F74B 3A E6 F0     LBL60:  LD    A,(vars2.V_F0E6)
 929  F74E E6 04                AND   04H           ; 4
 930  F750 CA 4B F7             JP    Z,LBL60
 931  F753 AF                   XOR   A
 932  F754 32 E6 F0             LD    (vars2.V_F0E6),A
 933  F757 F1                   POP   AF
 934  F758 C9                   RET
 935  F759 E5                   PUSH  HL
 936  F75A 7E           LBL61:  LD    A,(HL)
 937  F75B B7                   OR    A
 938  F75C CA 67 F7             JP    Z,LBL62
 939  F75F 4F                   LD    C,A
 940  F760 CD 36 F7             CALL  SUB27
 941  F763 23                   INC   HL
 942  F764 C3 5A F7             JP    LBL61
 943  F767 E1           LBL62:  POP   HL
 944  F768 C9                   RET
 945  F769 F5                   PUSH  AF
 946  F76A 3E 91                LD    A,91H         ; 145
 947  F76C 32 E7 F0             LD    (vars2.V_F0E7),A
 948  F76F 3A E6 F0             LD    A,(vars2.V_F0E6)
 949  F772 F6 10                OR    10H           ; 16
 950  F774 32 E6 F0             LD    (vars2.V_F0E6),A
 951  F777 E6 EF                AND   0EFH          ; 239
 952  F779 32 E6 F0             LD    (vars2.V_F0E6),A
 953  F77C 0E 0F                LD    C,0FH         ; 15
 954  F77E CD 36 F7             CALL  SUB27
 955  F781 F1                   POP   AF
 956  F782 C9                   RET
 957  F783 32 E9 8F     LBL63:  LD    (bios_vars.cursorCfg),A
 958  F786 CD 06 C0             CALL  bios_drawCursorOld
 959  F789 F1                   POP   AF
 960  F78A 32 E9 8F             LD    (bios_vars.cursorCfg),A
 961  F78D 0E 18                LD    C,18H         ; 24
 962  F78F F1                   POP   AF
 963  F790 C3 09 F8             JP    mon2_printChar
 964  F793 44           SUB28:  LD    B,H
 965  F794 4D                   LD    C,L
 966  F795 CD 03 F8     LBL64:  CALL  mon2_getch         ; [4]
 967  F798 FE 08                CP    08H           ; 8
 968  F79A CA B9 F7             JP    Z,LBL65
 969  F79D FE 0D                CP    0DH           ; 13
 970  F79F CA D8 F7             JP    Z,LBL67
 971  F7A2 32 95 8F             LD    (vars1.V_8F95),A
 972  F7A5 CD 27 C4             CALL  bios_cmp_hl_de
 973  F7A8 CA 95 F7             JP    Z,LBL64
 974  F7AB 3A 95 8F             LD    A,(vars1.V_8F95)
 975  F7AE 77                   LD    (HL),A
 976  F7AF C5                   PUSH  BC
 977  F7B0 4F                   LD    C,A
 978  F7B1 CD 09 F8             CALL  mon2_printChar
 979  F7B4 C1                   POP   BC
 980  F7B5 23                   INC   HL
 981  F7B6 C3 95 F7             JP    LBL64
 982  F7B9 7C           LBL65:  LD    A,H
 983  F7BA B8                   CP    B
 984  F7BB C2 C3 F7             JP    NZ,LBL66
 985  F7BE 7D                   LD    A,L
 986  F7BF B9                   CP    C
 987  F7C0 CA 95 F7             JP    Z,LBL64
 988  F7C3 2B           LBL66:  DEC   HL
 989  F7C4 C5                   PUSH  BC
 990  F7C5 0E 08                LD    C,08H         ; 8
 991  F7C7 CD 09 F8             CALL  mon2_printChar
 992  F7CA 0E 20                LD    C,20H         ; 32 ' '
 993  F7CC CD 09 F8             CALL  mon2_printChar
 994  F7CF 0E 08                LD    C,08H         ; 8
 995  F7D1 CD 09 F8             CALL  mon2_printChar
 996  F7D4 C1                   POP   BC
 997  F7D5 C3 95 F7             JP    LBL64
 998  F7D8              LBL67:
 999  F7D8 77                   LD    (HL),A
1000  F7D9 C9                   RET
1001  F7DA E5                   PUSH  HL
1002  F7DB 21 E3 FF             LD    HL,0FFE3H   ; 65507
1003  F7DE 36 0D                LD    (HL),0DH    ; 13
1004  F7E0 36 0C                LD    (HL),0CH    ; 12
1005  F7E2 E1                   POP   HL
1006  F7E3 C9                   RET
1007  F7E4
1008  F7E4              ;----------------------------------------------------------------------------
1009  F7E4              ; Таблица переходов F800h
1010  F7E4              ;----------------------------------------------------------------------------
1011  F7E4                  ORG_PAD0 0F800h
1011  F7E4             >         IF $ > 0F800h
1011  F7E4 ~           >           ; вывод сообщения об ошибке
1011  F7E4 ~           >           ASSERT 0
1011  F7E4 ~           >           DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
1011  F7E4             >         ELSE
1011  F7E4             >           ; заполнение памяти
1011  F7E4 00 00 00... >           BLOCK 0F800h-$, 0
1011  F7E8             >         ENDIF
1011  F800             >         ORG 0F800h
1012  F800
1013  F800
1014  F800 C3 05 F1     mon2_restart:       JP    RestartNoCls                  ; F800
1015  F803 C3 37 C3     mon2_getch:         JP    bios_getchOld         ; F803
1016  F806 C3 77 C3                         JP    bios_tapeReadOld      ; F806
1017  F809 C3 37 C0     mon2_printChar:     JP    bios_printCharOld     ; F809
1018  F80C C3 D0 C3                         JP    bios_tapeWriteOld     ; F80C
1019  F80F C3 36 C8                         JP    bios_printer          ; F80F
1020  F812 C3 95 F3                         JP    LBL17                 ; F812
1021  F815 C3 15 C8     mon2_printHexByte:  JP    bios_printHexByte     ; F815
1022  F818 C3 38 C4     mon2_printString:   JP    bios_printStringOld   ; F818
1023  F81B C3 03 C0     mon2_keyScan:       JP    bios_keyScanOld       ; F81B
1024  F81E C3 1E C8                         JP    bios_getCursorPos     ; F81E
1025  F821 C9                               RET                         ; F821 - не используется
1026  F822 00                               NOP
1027  F823 00                               NOP
1028  F824 C3 24 C8     SUB34:              JP    bios_tapeLoad         ; F824
1029  F827 C3 27 C8     mon2_tapeSave:      JP    bios_tapeSave         ; F827
1030  F82A C3 2A C8     mon2_calcCS:        JP    bios_calcCS           ; F82A
1031  F82D C3 70 C1                         JP    bios_beep_Old         ; F82D
1032  F830 C3 30 C8                         JP    bios_getMemTop        ; F830
1033  F833 C3 33 C8                         JP    bios_setMemTop        ; F833
1034  F836 C5           mon2_printHexWord:  PUSH  BC                    ; F836 - печать слова из HL в HEX формате, дополняется пробелом
1035  F837 C3 39 F5                         JP    printHexWordHL_noSpace
1036  F83A
1037  F83A                  END
