# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\format\FORMAT.asm
  1   0000              ;+---------------------------------------------------------------------------
  2   0000              ; MXOS
  3   0000              ; FORMAT.COM
  4   0000              ;
  5   0000              ; 2022-01-14 Дизассемблировано и доработано SpaceEngineer
  6   0000              ;
  7   0000              ; Доработки:
  8   0000              ; - "тихий режим" по параметру Y (форматировать без cпроcа)
  9   0000              ;    например FORMAT.COM B: Y
 10   0000              ;
 11   0000              ;----------------------------------------------------------------------------
 12   0000
 13   0000                  INCLUDE "../include/mxos.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\format\../include/mxos.inc
  1+  0000              ;-----------------------------------------------------------------------
  2+  0000              ; MXOS
  3+  0000              ; Точки входа и настройки сборки MXOS
  4+  0000              ;
  5+  0000              ; Карта памяти:
  6+  0000              ;   8FDF-8FFF - [  32  B] Переменные
  7+  0000              ;   9000-BFFF - [12   KB] Экран
  8+  0000              ;   C000-CFFF - [4    KB] DOS.SYS (в конце чуть чуть свободного места под доработки)
  9+  0000              ;   D000-E1FF - [4.5  KB] NC.COM (в конце место под список файлов и чуть чуть свободного места под доработки)
 10+  0000              ;   E200-E5FF - [1.0  KB] (свободно 1024 байт)
 11+  0000              ;   E600-E7FF - [0.5  KB] Драйвер магнитофона
 12+  0000              ;   E900-F0FF - [2    KB] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
 13+  0000              ;   F100-F8FF - [2.0  KB] FORMAT.COM, FPAGE.COM, MON2.COM и прочие утилиты
 14+  0000              ;   F900-F9FF - [ 256  B] (Свободно 256 байт)
 15+  0000              ;   FA00-FAFF - [ 256  B] Драйвер флеш-диска
 16+  0000              ;   FB00-FDFF - [ 768  B] Дисковый буфер
 17+  0000              ;   FF00-FF81 - [ 129  B] Командная строка. Заполняется функцией bios_fileExec
 18+  0000              ;   FF82-FFBF - [ 130  B] Стек
 19+  0000              ;   FFC0-FFEF - [  32  B] Непереключаемое ОЗУ, драйвера обмена с RAM диском
 20+  0000              ;   FFE0-FFFF - [  32  B] Оборудование
 21+  0000              ;-----------------------------------------------------------------------
 22+  0000
 23+  0000
 24+  0000              ;-----------------------------------------------------------------------
 25+  0000              ; Конфигурация сборки
 26+  0000              ;-----------------------------------------------------------------------
 27+  0000
 28+  0000              RAMD_MAX_PAGE        =  0Fh     ; Максимальное количество страниц RAM диска (до 0Fh)
 29+  0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
 30+  0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
 31+  0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
 32+  0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
 33+  0000              FONT_ADDR            =  0E900h  ; Адрес шрфита
 34+  0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
 35+  0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
 36+  0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
 37+  0000              FAT16                =  1       ; Включить поддержку FAT16
 38+  0000
 39+  0000                  IF  LOAD_FONT
 40+  0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
 41+  0000                  ELSE
 42+  0000 ~            FONT_ADDR_DIV_8 = -1
 43+  0000                  ENDIF
 44+  0000
 45+  0000              ;-----------------------------------------------------------------------
 46+  0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
 47+  0000              ; Доступ к переменным и программ польователя:
 48+  0000              ; ld a, bios_vars.lastKey
 49+  0000              ;-----------------------------------------------------------------------
 50+  0000
 51+  0000                  STRUCT BIOS_VARIABLES
 52+  0000 ~            _reserv_1     DW      -1
 53+  0000 ~            tapeError     DW      0C800h          ; Адрес, куда происходит переход при ошибке чтения с ленты
 54+  0000 ~            tapeAddr      DW      -1              ; Адрес программы загруженной с ленты
 55+  0000 ~            _reserv_2     DW      -1
 56+  0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; Адрес альтернативного знакогенератора /8
 57+  0000 ~            cursorCfg     DB      0A9h            ; Внешний вид курсора (7 - бит видимость, 654 - положение, 3210 - высота)
 58+  0000 ~            koi8          DB      -1              ; 0FFh = включен KOI-8, 0 = включен KOI-7
 59+  0000 ~            escMode       DB      -1              ; Обработка ESC-последовательности
 60+  0000 ~            keyLocks      DB      3Ah
 61+  0000 ~            _reserv_3     DW      -1
 62+  0000 ~            lastLastKey   DB      -1
 63+  0000 ~            lastKey       DB      -1
 64+  0000 ~            beepDuration  DB      5Fh             ; Длительность звукового сигнала
 65+  0000 ~            beepFreq      DB      20h             ; Частота звукового сигнала
 66+  0000 ~            tapeInverse   DB      0FFh
 67+  0000 ~            cursorDelay   DB      020h
 68+  0000 ~            byte_8FF5     DB      0E0h
 69+  0000 ~            oldSP         DW      -1              ; Используется для сохранения SP некоторыми функциями
 70+  0000 ~            maxRamPage    DB      RAMD_MAX_PAGE   ; Максимальный детектированный номер страницы RAM-диска
 71+  0000 ~            flashPage     DB      0               ; Текущий номер страницы флеш-диска
 72+  0000 ~            inverse       DW      0               ; Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
 73+  0000 ~            cursorY       DB      -1              ; Положение курсора по вертикали в пикселях
 74+  0000 ~            cursorX       DB      -1              ; Положение курсора по горизонтали в пикселях / 2
 75+  0000 ~            writeDelay    DB      28h             ; Скорость при записи на ленту
 76+  0000 ~            readDelay     DB      3Ch             ; Скорость при чтении с ленты
 77+  0000                  ENDS
 78+  0000
 79+  0000              ; Адрес структуры BIOS_VARIABLES
 80+  0000
 81+  0000              	ORG 08FDFh
 82+  8FDF
 83+  8FDF              bios_vars   BIOS_VARIABLES = $
 84+  8FDF
 85+  8FDF              ;-----------------------------------------------------------------------
 86+  8FDF              ; Буферы в памяти
 87+  8FDF              ;-----------------------------------------------------------------------
 88+  8FDF
 89+  8FDF              fat              = 0FB00h
 90+  8FDF              diskDirectory    = 0FC00h
 91+  8FDF              diskDirectoryEnd = 0FE00h
 92+  8FDF              v_cmdLine        = 0FF00h
 93+  8FDF              STACK_ADDR       = 0FFC0h
 94+  8FDF
 95+  8FDF              ;-----------------------------------------------------------------------
 96+  8FDF              ; Стандартные точки входа ОС
 97+  8FDF              ; Отмеченные * применять не рекомендуется
 98+  8FDF              ;-----------------------------------------------------------------------
 99+  8FDF
100+  8FDF              bios_init            = 0C000h ; Теплая перезагрузка
101+  8FDF
102+  8FDF              ; Устаревшие точки, лечше не применять
103+  8FDF              bios_keyScanOld      = 0C003h ; * Получить код нажатой клавиши, = bios_keyScan
104+  8FDF              bios_drawCursorOld   = 0C006h ; * Нарисовать/стереть курсор
105+  8FDF              bios_clearScreenOld  = 0C010h ; * Оистка экрана
106+  8FDF              bios_printCharOld    = 0C037h ; * Вывод символа на экран
107+  8FDF              bios_beep_Old        = 0C170h ; * Звуковой сигнал
108+  8FDF              bios_delay_l         = 0C18Fh ; * Задержка
109+  8FDF              bios_getchOld        = 0C337h ; * Ожидание ввода с клавиатуры
110+  8FDF              bios_tapeReadOld     = 0C377h ; * Чтение байта с магнитофона
111+  8FDF              bios_tapeWriteOld    = 0C3D0h ; * Запись байта на магнитофон
112+  8FDF              bios_cmp_hl_de       = 0C427h ; * Сравнить hl и de
113+  8FDF              bios_memcpy_bc_hl    = 0C42Dh ; * Скопировать блок памяти
114+  8FDF              bios_printStringOld  = 0C438h ; * Вывод строки на экран
115+  8FDF
116+  8FDF              bios_reboot          = 0C800h ; Запустить NC.COM
117+  8FDF              bios_getch           = 0C803h ; Ожидание ввода с клавиатуры
118+  8FDF              bios_tapeRead        = 0C806h ; Чтение байта с магнитофона
119+  8FDF              bios_printChar       = 0C809h ; Вывод символа на экран
120+  8FDF              bios_tapeWrite       = 0C80Ch ; Запись байта на магнитофон
121+  8FDF              bios_input           = 0C80Fh ; Ввод строки с клавиатуры
122+  8FDF              bios_keyCheck        = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
123+  8FDF              bios_printHexByte    = 0C815h ; Вывод HEX числа на экран (байт)
124+  8FDF              bios_printString     = 0C818h ; Вывод строки на экран
125+  8FDF              bios_keyScan         = 0C81Bh ; Получить код нажатой клавиши
126+  8FDF              bios_getCursorPos    = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
127+  8FDF              bios_setCursorPos    = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
128+  8FDF              bios_tapeLoad        = 0C824h ; Загрузить программу с магнитофона
129+  8FDF              bios_tapeSave        = 0C827h ; Сохранить программу на магнитофон
130+  8FDF              bios_calcCS          = 0C82Ah ; Расчет контрольной суммы
131+  8FDF              bios_printHexWord    = 0C82Dh ; Вывод HEX числа на экран (слово)
132+  8FDF              bios_getMemTop       = 0C830h ; Получить объем доступной памяти
133+  8FDF              bios_setMemTop       = 0C833h ; Установить объем доступной памяти
134+  8FDF              bios_printer         = 0C836h ; Напечатать байт на принтере
135+  8FDF                  IF RAMFOS_COMPATIBILITY
136+  8FDF              bios_strToHex        = 0C839h ; Преобразвоние строки в HEX формате в число
137+  8FDF                  ELSE
138+  8FDF ~            bios_rebootAlt       = 0C839h ; Запустить NC.COM
139+  8FDF                  ENDIF
140+  8FDF              bios_rebootAlt2      = 0C83Ch ; Запустить NC.COM
141+  8FDF              bios_fileList        = 0C83Fh ; Получить список файлов
142+  8FDF              bios_fileGetSetDrive = 0C842h ; Получить/установить активное устройство
143+  8FDF              bios_fileCreate      = 0C845h ; Создать файл
144+  8FDF              bios_fileLoad        = 0C848h ; Загрузить файл по адресу из заголовка этого файла
145+  8FDF              bios_fileDelete      = 0C84Bh ; Удалить файл
146+  8FDF              bios_fileRename      = 0C84Eh ; Переименовать файл
147+  8FDF              bios_fileLoadInfo    = 0C851h ; Загрузить информацию о файле
148+  8FDF              bios_fileGetSetAddr  = 0C854h ; Получить/установить адрес загрузки файла
149+  8FDF              bios_fileGetSetAttr  = 0C857h ; Получить/установить атрибуты файла
150+  8FDF              bios_fileNamePrepare = 0C85Ah ; Преобразовать имя файла во внутренний формат
151+  8FDF              bios_fileExec        = 0C85Dh ; Запустить файл
152+  8FDF              bios_installDriver   = 0C860h ; Установить драйвер накопителя
153+  8FDF              bios_diskDriver      = 0C863h ; Драйвер выбранного диска
154+  8FDF              bios_fileLoad2       = 0C866h ; Загрузить файл по адресу de
155+  8FDF              bios_printCharReal   = 0C869h ; Вывод символа на экран (только реальные символы)
156+  8FDF              bios_printDecWord    = 0C86Ch ; Вывод числа экран в десятичной форме
157+  8FDF              bios_setRAMDDriver   = 0C86Fh ; Установить драйвр рам-диска
158+  8FDF
159+  8FDF              ;-----------------------------------------------------------------------
160+  8FDF              ; Точки входа драйвера доступа к ДОЗУ
161+  8FDF              ;-----------------------------------------------------------------------
162+  8FDF
163+  8FDF              bios_RAMDRead  = 0FFC0h ; чтение из ДОЗУ
164+  8FDF              bios_RAMDWrite = 0FFD0h ; запись в  ДОЗУ
165+  8FDF
166+  8FDF              ;-----------------------------------------------------------------------
167+  8FDF              ; Адрес таблицы переходов драйвера магнитофона
168+  8FDF              ;-----------------------------------------------------------------------
169+  8FDF
170+  8FDF              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
171+  8FDF
172+  8FDF              ;-----------------------------------------------------------------------
173+  8FDF              ; Порты устройств ПК "Специалист-MX2"
174+  8FDF              ;-----------------------------------------------------------------------
175+  8FDF
176+  8FDF              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
177+  8FDF              IO_KEYB_B       =  0FFE1h
178+  8FDF              IO_KEYB_C       =  0FFE2h
179+  8FDF              IO_KEYB_MODE    =  0FFE3h
180+  8FDF              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
181+  8FDF              IO_PROG_B       =  0FFE5h
182+  8FDF              IO_PROG_C       =  0FFE6h
183+  8FDF              IO_PROG_MODE    =  0FFE7h
184+  8FDF              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
185+  8FDF              IO_FDD_TRACK    =  0FFE9h
186+  8FDF              IO_FDD_SECTOR   =  0FFEAh
187+  8FDF              IO_FDD_DATA     =  0FFEBh
188+  8FDF              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
189+  8FDF              IO_TIMER_CH1    =  0FFEDh
190+  8FDF              IO_TIMER_CH2    =  0FFEEh
191+  8FDF              IO_TIMER_MODE   =  0FFEFh
192+  8FDF              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
193+  8FDF              IO_FDD_MOTOR    =  0FFF1h
194+  8FDF              IO_FDD_SIDE     =  0FFF2h
195+  8FDF              IO_FDD_DRIVE    =  0FFF3h
196+  8FDF              IO_COLOR        =  0FFF8h   ; регистр цвета
197+  8FDF              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
198+  8FDF              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
199+  8FDF              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
200+  8FDF              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
201+  8FDF
202+  8FDF              ;-----------------------------------------------------------------------
203+  8FDF              ; Структура файловой системы
204+  8FDF              ;-----------------------------------------------------------------------
205+  8FDF
206+  8FDF              ; Структура каталога
207+  8FDF
208+  8FDF                  IF FAT16
209+  8FDF
210+  8FDF              DIR_DESCR_SIZE  = 32    ; Размер дескриптора файла в каталоге
211+  8FDF              DIR_MAX_FILES   = 24    ; Максимум файлов в каталоге
212+  8FDF              DIR_NAME_LENGTH = 8     ; Длина имени файла
213+  8FDF
214+  8FDF              ;-----------------------------------------------------------------------
215+  8FDF              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
216+  8FDF              ;-----------------------------------------------------------------------
217+  8FDF
218+  8FDF                  STRUCT FILE_DESCRIPTOR  ; 32 байта
219+  8FDF ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 8 байт  - имя файла
220+  8FDF ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
221+  8FDF ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
222+  8FDF ~            checkSum        BLOCK   1  ; ntRes          ; смещение 0Ch, 1 байт  - контрольная сумма (!!! временный костыль, в FAT32 это ntRes - используются в Windows NT !!!)
223+  8FDF ~            ctrTimeTenth    BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
224+  8FDF ~            ctrTime         BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
225+  8FDF ~            ctrDate         BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
226+  8FDF ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
227+  8FDF ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
228+  8FDF ~            wrtTime         BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
229+  8FDF ~            wrtDate         BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
230+  8FDF ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
231+  8FDF ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
232+  8FDF                  ENDS
233+  8FDF
234+  8FDF              ;-----------------------------------------------------------------------
235+  8FDF              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
236+  8FDF              ;-----------------------------------------------------------------------
237+  8FDF
238+  8FDF                  ELSE
239+  8FDF ~
240+  8FDF ~            DIR_DESCR_SIZE  = 16    ; Размер дескриптора файла в каталоге
241+  8FDF ~            DIR_MAX_FILES   = 48    ; Максимум файлов в каталоге
242+  8FDF ~            DIR_NAME_LENGTH = 6     ; Длина имени файла
243+  8FDF ~
244+  8FDF ~            ;-----------------------------------------------------------------------
245+  8FDF ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
246+  8FDF ~            ;-----------------------------------------------------------------------
247+  8FDF ~
248+  8FDF ~                STRUCT FILE_DESCRIPTOR  ; 16 байт
249+  8FDF ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 6 байт  - имя файла
250+  8FDF ~            ext             BLOCK   3                   ; смещение 06h, 3 байта - расширение имени файла
251+  8FDF ~            attrib          BLOCK   1                   ; смещение 09h, 1 байт  - атрибуты файла: 00h - обычный файл, 01h - системный файл
252+  8FDF ~            loadAddress     BLOCK   2                   ; смещение 0Ah, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый
253+  8FDF ~            size            BLOCK   2                   ; смещение 0Ch, 2 байта - размер файла в байтах - 1
254+  8FDF ~            checkSum        BLOCK   1                   ; смещение 0Eh, 1 байт  - контрольная сумма
255+  8FDF ~            firstCluster    BLOCK   1                   ; смещение 0Fh, 1 байт  - номер первого кластера в FAT
256+  8FDF ~                ENDS
257+  8FDF ~
258+  8FDF ~            ;-----------------------------------------------------------------------
259+  8FDF ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
260+  8FDF ~            ;-----------------------------------------------------------------------
261+  8FDF ~
262+  8FDF                  ENDIF
263+  8FDF
264+  8FDF              ;-----------------------------------------------------------------------
265+  8FDF              ; Всякие полезности
266+  8FDF              ;-----------------------------------------------------------------------
267+  8FDF
268+  8FDF              ; Макрос для заполнения памяти от текущего адреса до указанного
269+  8FDF                  MACRO ORG_PAD adr
270+  8FDF ~                     ; add padding + display warning
271+  8FDF ~                     IF $ > adr
272+  8FDF ~                       ; no padding
273+  8FDF ~                       ASSERT 0
274+  8FDF ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
275+  8FDF ~                     ELSE
276+  8FDF ~                       ; add padding
277+  8FDF ~                       BLOCK adr-$
278+  8FDF ~                     ENDIF
279+  8FDF ~                     ORG adr
280+  8FDF                  ENDM
281+  8FDF
282+  8FDF              ; Макросы для проверки текущего адреса
283+  8FDF                  MACRO ASSERT_EQUAL adr
284+  8FDF ~                     IF $ != adr
285+  8FDF ~                       ASSERT 0
286+  8FDF ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
287+  8FDF ~                     ENDIF
288+  8FDF                  ENDM
289+  8FDF
290+  8FDF                  MACRO ASSERT_DONT_FIT adr
291+  8FDF ~                     IF $ > adr
292+  8FDF ~                       ASSERT 0
293+  8FDF ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
294+  8FDF ~                     ENDIF
295+  8FDF                  ENDM
296+  8FDF
297+  8FDF              ;-----------------------------------------------------------------------
298+  8FDF              ; Конец
299+  8FDF              ;-----------------------------------------------------------------------
300+  8FDF
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\format\../include/mxos.inc
 14   8FDF
 15   8FDF                  ORG 0F100h
 16   F100
 17   F100 1A               ld      a,(de)      ; В de передаётся адрес строки аргументов
 18   F101 FE 20            cp      20h
 19   F103 D2 1C F1         jp nc,  Readparams  ; Прыжок, если есть параметр
 20   F106
 21   F106                  ; Запрос буквы диска для форматирования
 22   F106              chooseDrive:
 23   F106 21 AD F1         ld      hl, str_ChoseDrive
 24   F109 CD 18 C8         call    bios_printString     ; Вывод сообщения 'CHOOSE DRIVE: '
 25   F10C CD 03 C8         call    bios_getch           ; Ожидание нажатия клавиши
 26   F10F 4F               ld      c, a
 27   F110 CD 09 C8         call    bios_printChar
 28   F113 FE 21            cp      21h             ; сравнение c пробелом
 29   F115 DA 8C F1         jp c,   abort           ; Выход в ОС, если меньше или равно
 30   F118 47               ld      b, a            ; Запомнить букву диска в b
 31   F119 C3 36 F1         jp      confirmRequest
 32   F11C
 33   F11C              Readparams:
 34   F11C 47               ld      b, a            ; Запомнить букву диска в b
 35   F11D
 36   F11D              SearchLoop1:                ; Поиск первого пробела в строке параметров
 37   F11D 1A               ld      a,(de)
 38   F11E FE 21            cp      21h
 39   F120 DA 27 F1         jp c,   SearchLoop2
 40   F123 13               inc     de
 41   F124 C3 1D F1         jp      SearchLoop1
 42   F127
 43   F127              SearchLoop2:                ; Пропуск последующих пробелов
 44   F127 1A               ld      a,(de)
 45   F128 FE 20            cp      20h
 46   F12A C2 31 F1         jp nz,  SearchLoopExit
 47   F12D 13               inc     de
 48   F12E C3 27 F1         jp      SearchLoop2
 49   F131
 50   F131              SearchLoopExit:
 51   F131 FE 59            cp      'Y'             ; Если найден параметр 'Y', переход к форматированию
 52   F133 CA 4C F1         jp z,   confirmed
 53   F136
 54   F136                  ; Подтверждение форматирования
 55   F136              confirmRequest:
 56   F136 78               ld      a, b
 57   F137 32 A2 F1         ld      (str_A_Y_N),a   ; Заменить 'A' в строке сообщения на введённую букву
 58   F13A 21 9A F1         ld      hl, str_Format
 59   F13D CD 18 C8         call    bios_printString; вывод сообщения 'FORMAT <буква>: [Y/N]?'
 60   F140 CD 03 C8         call    bios_getch      ; Ожидание нажатия клавиши
 61   F143 4F               ld      c, a
 62   F144 CD 09 C8         call    bios_printChar
 63   F147 FE 59            cp      'Y'             ; сравнение c 'Y'
 64   F149 C2 8C F1         jp nz,  abort           ; Выход в ОС, если не 'Y'
 65   F14C
 66   F14C              confirmed:
 67   F14C 78               ld      a, b            ; Восстановить букву диска в a
 68   F14D
 69   F14D                  ; Буква диска в регистре a
 70   F14D              Format:
 71   F14D D6 41            sub     41h             ; Номер диска
 72   F14F FE 08            cp      08h             ; Максимальный номер диска = 7
 73   F151 D2 93 F1         jp nc,  InvalidDrive    ; Выход, если неверный номер диска
 74   F154 47               ld      b, a            ; Запомнить номер диска в b
 75   F155
 76   F155                  ; Установить выбранный диск текущим
 77   F155 78               ld      a, b    ; Номер диска в a
 78   F156 1E 01            ld      e, 01h
 79   F158 CD 42 C8         call    bios_fileGetSetDrive
 80   F15B
 81   F15B                  ; Выдать размер диска в a
 82   F15B 1E 03            ld      e, 03h
 83   F15D CD 63 C8         call    bios_diskDriver
 84   F160 5F               ld      e, a    ; Поместить размер диска в e
 85   F161 3D               dec     a
 86   F162
 87   F162                  ; Очиcтка буфера (e байт)
 88   F162 21 00 D1         ld      hl, buffer
 89   F165              clearbufLoop:
 90   F165 36 00            ld      (hl), 0
 91   F167 2C               inc     l
 92   F168 1D               dec     e
 93   F169 C2 65 F1         jp nz,  clearbufLoop
 94   F16C
 95   F16C                  ; Создание пустой структуры FAT (256 байт)
 96   F16C              createFATLoop:
 97   F16C 3C               inc     a
 98   F16D CA 76 F1         jp z,   WriteToDisk
 99   F170 36 01            ld      (hl), 01h
100   F172 2C               inc     l
101   F173 C3 6C F1         jp      createFATLoop
102   F176
103   F176                  ; Запить FAT на диск
104   F176                  ; d - номер сектора
105   F176                  ; e - код операции
106   F176              WriteToDisk:
107   F176 11 01 00         ld      de, 0001h  ; Запись сектора номер 0
108   F179 CD 63 C8         call    bios_diskDriver
109   F17C
110   F17C                  ; Создание пустой структуры каталога (256 байт)
111   F17C              createcatLoop:
112   F17C 36 FF            ld      (hl), 0FFh
113   F17E 2C               inc     l
114   F17F C2 7C F1         jp nz,  createcatLoop
115   F182
116   F182                  ; Запить секторов c номера 3 по 1
117   F182 16 03            ld      d, 03h
118   F184              WriteLoop:
119   F184 CD 63 C8         call    bios_diskDriver
120   F187 15               dec     d
121   F188 C2 84 F1         jp nz,  WriteLoop
122   F18B
123   F18B                  ; Выход в ОС
124   F18B C9               ret
125   F18C
126   F18C              abort:
127   F18C 21 D3 F1         ld      hl, str_Aborting
128   F18F CD 18 C8         call    bios_printString     ; Вывод сообщения 'ABORTING'
129   F192 C9               ret
130   F193
131   F193              InvalidDrive:
132   F193 21 BD F1         ld      hl, str_InvalidDrive
133   F196 CD 18 C8         call    bios_printString     ; Вывод сообщения 'INVALID DRIVE LETTER'
134   F199 C9               ret
135   F19A
136   F19A              ;----------------------------------------------------------------------------
137   F19A              ; Данные
138   F19A
139   F19A              str_Format:
140   F19A 0A 46 4F 52      DB 0Ah,"FORMAT "
140   F19E 4D 41 54 20
141   F1A2
142   F1A2              str_A_Y_N:
143   F1A2 41 3A 20 5B      DB "A: [Y/N]? ",0
143   F1A6 59 2F 4E 5D
143   F1AA 3F 20 00
144   F1AD
145   F1AD              str_ChoseDrive:
146   F1AD 0A 43 48 4F      DB 0Ah,"CHOOSE DRIVE: ",0
146   F1B1 4F 53 45 20
146   F1B5 44 52 49 56
146   F1B9 45 3A 20 00
147   F1BD
148   F1BD              str_InvalidDrive:
149   F1BD 0A 49 4E 56      DB 0Ah,"INVALID DRIVE LETTER",0
149   F1C1 41 4C 49 44
149   F1C5 20 44 52 49
149   F1C9 56 45 20 4C
149   F1CD 45 54 54 45
149   F1D1 52 00
150   F1D3
151   F1D3              str_Aborting:
152   F1D3 0A 41 42 4F      DB 0Ah,"ABORTING",0
152   F1D7 52 54 49 4E
152   F1DB 47 00
153   F1DD
154   F1DD              buffer = 0D100h ; Буфер
155   F1DD
156   F1DD              ;----------------------------------------------------------------------------
157   F1DD
158   F1DD                  END
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\format\FORMAT.asm
