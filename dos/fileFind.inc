;+---------------------------------------------------------------------------
; MXOS
; Найти файл
;
; На входе
;  hl - имя
;
; На выходе
;  bc, de, hl - сохраняются
;  cf - ошибка
;  v_foundDescrPtr - найденный файл
;
; 2013-12-12 Дизассемблировано vinxru
; 2022-02-11 Переработано SpaceEngineer
;----------------------------------------------------------------------------

fileFind:   ; Сохраняем регистры
            push    bc  ; [1]
            push    de  ; [2]

            ; de = номер первого сектора каталога
            ; с  = количество секторов каталога (мл. байт)
            call    fatBeginDirLoop

            ; Цикл по секторам каталога
fileFind_dirLoop:
            ; Сохраняем номер сектора каталога
            push    de  ; [3]               ; de = номер сектора каталога

            ; Кэшируем сектор каталога
            push    hl  ; [4*]
            xor     a                       ; флаг - сектор не будет меняться
            call    getSectorAddressInCache ; выход: hl = адрес сектора в буфере
            ex      hl, de                  ; de = адрес сектора в буфере
            pop     hl  ; [4*]              ; hl = адрес имени искомого файла

            ; Кол-во дескрипторов файлов в одном секторе каталога (мл. байт)
            ld      a, (v_diskInfo.descrPerSector)
            ld      b, a
            push    bc  ; [4]               ; b = счетчик секторов

            ; Цикл по дескрипторам в закешированном секторе каталога
fileFind_sectorLoop:

            ; Сохраняем адрес начала имени в каталоге и адрес имени искомого файла
            push    hl  ; [5]   hl = адрес имени искомого файла
            push    de  ; [6]   de = адрес дескриптора файла в кэше

            ; Если первый символ имени 0FFh, переходим к следующем файлу
            ld      a, (de)
            inc     a
            jp z,   fileFind_next

            ; Сравниваем имена файлов по адресам hl и de
            ld      c, DIR_NAME_LENGTH + 3  ; длина имени + расширения
            call    stricmp
            jp nz,  fileFind_next           ; если имена не совпадают, переходим к следующему файлу

            ;-----------------------------------------------------------
            ; Файл найден
            pop     hl  ; [6]   hl = адрес дескриптора файла в кэше

            ; Сохраняем адрес дескриптора в кэше в переменную v_cachedDescrPtr
            ld      (v_cachedDescrPtr), hl
            ex      hl, de

            ; Сохраняем адрес v_tmpFileDescr в переменную v_foundDescrPtr
            ld      hl, v_tmpFileDescr
            ld      (v_foundDescrPtr), hl

            ; Копируем дескриптор файла в переменную v_tmpFileDescr
            ; de = откуда (v_cachedDescrPtr), hl = куда (v_tmpFileDescr)
            call    copyDescriptor

            ; Восстаналиваем регистры
            pop     hl  ; [5]   hl = адрес имени искомого файла
            pop     bc  ; [4]   c  = счетчик секторов

            ; Сохраняем номер сектора каталога в переменную v_cachedSector
            pop     de  ; [3]   de = номер сектора каталога
            ex      hl, de
            ld      (v_cachedSector), hl
            ex      hl, de

            ; Восстаналиваем регистры и выходим с CF=0
            pop     de  ; [2]   
            pop     bc  ; [1]   
            or      a   ;       для выхода с флагом
            ret
            ;-----------------------------------------------------------

fileFind_next:
            ; Вычисляем адрес следующего дескриптора файла
            pop     de  ; [6]   de = адрес дескриптора файла в кэше
            ld      hl, DIR_DESCR_SIZE
            add     hl, de
            ex      de, hl

            ; Восстанавливаем адрес искомого имени
            pop     hl  ; [5]   hl = адрес имени искомого файла

            ; Еще остались файлы в секторе каталога?
            dec     b
            jp nz,  fileFind_sectorLoop

            ; Еще остались секторы каталога?
            pop     bc  ; [4]   c  = счетчик секторов

            ; Восстанавливаем номер сектора каталога
            pop     de  ; [3]   de = номер сектора каталога
            inc     de  ;       следующий сектор каталога

            dec     c
            jp nz,  fileFind_dirLoop

            ;-----------------------------------------------------------
            ; Файл не найден
            ; Восстаналиваем регистры и выходим с CF=1 и a=3
            pop     de  ; [2]
            pop     bc  ; [1]
            ld      a, 3
            scf
            ret

;----------------------------------------------------------------------------
; MXOS
; Копирование дескриптора файла
;
; вход:
;  de = адрес откуда
;  hl = адрес куда
;
; регистры не сохраняются!
;
; 2022-02-11 SpaceEngineer
;----------------------------------------------------------------------------

copyDescriptor:
            ld      b, DIR_DESCR_SIZE
cfd_loop:   ; Копируем b байт из de в hl
            ld      a, (de)
            ld      (hl), a
            inc     hl
            inc     de
            dec     b
            jp nz,  cfd_loop

            ret
