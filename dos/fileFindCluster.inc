;+---------------------------------------------------------------------------
; MXOS
; Поиск свободного кластера 
;
; На выходе
;  cf - ошибка
;  a - кластер
;  регистры bc, de, hl сохраняются
;
; 2013-12-12 Дизассемблировано vinxru
;----------------------------------------------------------------------------

fileFindClusterFirst:
            ; Сохраняем регистры
            push  hl

            ; Начинаем поиск с первого кластера (первые 4 не используются)
            ld    hl,  fat + 4
            jp    fileFindClus_2

;----------------------------------------------------------------------------
; Продолжение поиска свободного кластера 
;
; На выходе
;  cf - ошибка
;  a - кластер
;  регистры bc, de, hl сохраняются
;----------------------------------------------------------------------------

fileFindClusterNext:
            ; Сохраняем регистры
            push  hl

            ; Начинаем поиск с этого кластера
            ld    hl, (v_findCluster)

            ; Ищем свободный кластер
            ; В соответствующей ячейке таблицы FAT должен быть 0
fileFindClus_2:   xor   a
fileFindClus_0:   cp    (hl)
            jp z, fileFindClus_1    ; Найден
            inc   l
            jp nz,  fileFindClus_0

            ; Восстаналиваем регистры и выходим a=1, CF=1, ZF=0
            pop   hl
            ld    a, 1
            scf
            ret

; ---------------------------------------------------------------------------

fileFindClus_1:   ; Свобожный кластер найден
            ld    a, l

            ; Устаналиваем ZF=0. Номер кластера не может быть нулевым.
            ; В случае ошибки мы то же выходим с ZF=1
            or    a

            ; Для ускорения поиска сохраняем номер следующего кластера в v_findCluster
            inc   l
            ld    (v_findCluster), hl

            ; Восстанавливаем регистры и выходим с CF=0, ZF=0
            pop   hl
            ret

