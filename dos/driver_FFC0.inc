;+---------------------------------------------------------------------------
; MXOS
; Драйвер диска в ДОЗУ, ПЗУ (часть которая копируется на адрес 0FFC0h)
;
; FFC0h - чтение 256-байтного блока
;   На входе
;     c = номер страницы
;     d = номер блока 
;     e = 0
;     hl = адрес буфера в памяти
;
; FFD0h - запись 256-байтного блока
;   На входе
;     c = номер страницы
;     d = номер блока 
;     e = 0
;     hl = адрес буфера в памяти
;
; 2013-12-12 Дизассемблировано и доработано vinxru
;----------------------------------------------------------------------------

#if BIG_MEM==0

; ---------------------------------------------------------------------------
; Чтение 256-байтного блока с диска

driverStart:
driverR:
		sta  IO_ARAM		; Сюда встает STA IO_ROM для ROM-диска
		ldax d
		sta  IO_RAM
		mov  m, a
		inx  h
		inr  e
		jnz  0FFC0h
		ret

; ---------------------------------------------------------------------------

		.db 0FFh
		.db 0FFh

; ---------------------------------------------------------------------------
; Запись 256-байтного блока на диск

driverW:
		mov  a, m		; Сюда встает RET для ROM-диска
		sta  IO_ARAM
		stax d
		sta  IO_RAM
		inx  h
		inr  e
		jnz  0FFD0h
driverEnd:
		ret

#else

; ---------------------------------------------------------------------------
; Чтение 256-байтного блока с диска

driverStart:
		mov  a, c
driverR:
		sta  IO_ARAM		; Сюда встает STA IO_ROM для ROM-диска
		ldax d
		sta  IO_RAM
		mov  m, a
		inx  h
		inr  e
		jnz  0FFC0h
		ret

; ---------------------------------------------------------------------------
; Запись 256-байтного блока на диск

loc_FFCF:
		inx	h
loc_FFD0:
driverW:
		mov  b, m		; Сюда встает RET для ROM-диска
		mov  a, c
		sta  IO_ARAM
		mov  a, b
		stax d
		sta  IO_RAM
		inr  e
		jnz  0FFCFh
driverEnd:
		ret

; ---------------------------------------------------------------------------
; Проверка

#if loc_FFD0-driverStart+0FFC0h != 0FFD0h
Entry_point_FFD0_has_been_shifted
#endif

#if driverEnd-driverStart+1 > 32
Driver_did_not_fit
#endif

#endif

