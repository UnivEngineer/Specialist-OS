# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tape.asm
  1   0000              ;+---------------------------------------------------------------------------
  2   0000              ; MXOS
  3   0000              ; TAPE.COM - драйвер магнитофона, вынесенный из DOS.SYS
  4   0000              ;
  5   0000              ; 2022-02-02 SpaceEngineer
  6   0000              ;----------------------------------------------------------------------------
  7   0000
  8   0000                  INCLUDE "../include/mxos.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\../include/mxos.inc
  1+  0000              ;-----------------------------------------------------------------------
  2+  0000              ; MXOS
  3+  0000              ; Точки входа и настройки сборки MXOS
  4+  0000              ;
  5+  0000              ; Новая карта памяти:
  6+  0000              ;   8FDF-8FFF - [  32 B] Переменные
  7+  0000              ;   9000-BFFF - [12  KB] Экран
  8+  0000              ;   C000-D3FF - [5120 B] DOS.SYS
  9+  0000              ;   D400-DBFF - [2048 B] Свободно (2048 байт)
 10+  0000              ;   DC00-EDFF - [ 512 B] Драйвер магнитофона
 11+  0000              ;   DE00-DFFF - [ 512 B] Драйвер флеш-диска
 12+  0000              ;   E000-E7FF - [2048 B] Шрифт
 13+  0000              ;   E800-FAFF - [4864 B] Системные программы (NC.COM, E.COM, DL-RED.COM, FORMAT.COM, MON2.COM, ...)
 14+  0000              ;   FB00-FEFF - [1024 B] Дисковый кэш (fat + каталог)
 15+  0000              ;   FF00-FF81 - [ 130 B] Командная строка
 16+  0000              ;   FF82-FFBF - [  62 B] Стек
 17+  0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
 18+  0000              ;   FFE0-FFFF - [  32 B] Оборудование
 19+  0000              ;
 20+  0000              ; Старая карта памяти:
 21+  0000              ;   8FDF-8FFF - [  32 B] Переменные
 22+  0000              ;   9000-BFFF - [12  KB] Экран
 23+  0000              ;   C000-CFFF - [4096 B] DOS.SYS
 24+  0000              ;   D000-E1FF - [4607 B] Системные программы (NC.COM, E.COM, DL-RED.COM)
 25+  0000              ;   E200-E5FF - [1024 B] Свободно (1024 байт)
 26+  0000              ;   E600-E7FF - [ 512 B] Драйвер магнитофона
 27+  0000              ;   E800-E8FF - [ 256 B] Свободно (256 байт)
 28+  0000              ;   E900-F0FF - [2048 B] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
 29+  0000              ;   F100-F8FF - [2048 B] Системные программы (FORMAT.COM, MON2.COM, ...)
 30+  0000              ;   F900-F9FF - [ 256 B] Свободно (256 байт)
 31+  0000              ;   FA00-FAFF - [ 256 B] Драйвер флеш-диска
 32+  0000              ;   FB00-FEFF - [1024 B] Дисковый буфер (fat + каталог)
 33+  0000              ;   FF00-FF81 - [ 130 B] Командная строка
 34+  0000              ;   FF82-FFBF - [  62 B] Стек
 35+  0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
 36+  0000              ;   FFE0-FFFF - [  32 B] Оборудование
 37+  0000              ;-----------------------------------------------------------------------
 38+  0000
 39+  0000
 40+  0000              ;-----------------------------------------------------------------------
 41+  0000              ; Конфигурация сборки
 42+  0000              ;-----------------------------------------------------------------------
 43+  0000
 44+  0000              NEW_MEMORY_MAP       =  1       ; Новая карта памяти
 45+  0000              RAMD_MAX_PAGE        =  16      ; Максимальное количество страниц RAM диска
 46+  0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
 47+  0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
 48+  0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
 49+  0000              EMBED_FONT           =  0       ; Встроить шрифт в программу (при запуске шрифт копируется на FONT_ADDR)
 50+  0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
 51+  0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
 52+  0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
 53+  0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
 54+  0000
 55+  0000                  IF  NEW_MEMORY_MAP
 56+  0000              FONT_ADDR = 0E000h  ; Адрес шрфита
 57+  0000                  ELSE
 58+  0000 ~            FONT_ADDR = 0E900h  ; Адрес шрфита
 59+  0000                  ENDIF
 60+  0000
 61+  0000                  IF  LOAD_FONT
 62+  0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
 63+  0000                  ELSE
 64+  0000 ~            FONT_ADDR_DIV_8 = -1
 65+  0000                  ENDIF
 66+  0000
 67+  0000              ;-----------------------------------------------------------------------
 68+  0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
 69+  0000              ; Доступ к переменным из программ польователя:
 70+  0000              ; ld a, bios_vars.lastKey
 71+  0000              ;-----------------------------------------------------------------------
 72+  0000
 73+  0000                  STRUCT BIOS_VARIABLES
 74+  0000 ~            _reserv_1     DW      -1              ; 8FDFh -
 75+  0000 ~            tapeError     DW      0C800h          ; 8FE1h - Адрес, куда происходит переход при ошибке чтения с ленты
 76+  0000 ~            tapeAddr      DW      -1              ; 8FE3h - Адрес программы загруженной с ленты
 77+  0000 ~            _reserv_2     DW      -1              ; 8FE5h -
 78+  0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; 8FE7h - Адрес альтернативного знакогенератора / 8
 79+  0000 ~            cursorCfg     DB       21h ; 0A9h     ; 8FE9h - Внешний вид курсора (биты: 7 - мигание (если 0), 654 - положение (Y) от низа строки, 3210 - размер по высоте)
 80+  0000 ~            koi7          DB       0   ; 0FFh     ; 8FEAh - 0FFh = включен KOI-7, 0 = включен KOI-8
 81+  0000 ~            escMode       DB      -1              ; 8FEBh - Обработка ESC-последовательности
 82+  0000 ~            keyLocks      DB      0BAh ; 3Ah      ; 8FECh - Caps Lock или Рус/Lat (3A - прописные анг, BA - строчные анг, BB - прописные рус, 3B - строчные рус)
 83+  0000 ~            _reserv_3     DW      -1              ; 8FEDh -
 84+  0000 ~            lastLastKey   DB      -1              ; 8FEFh - Предпоследняя нажатая клавиша
 85+  0000 ~            lastKey       DB      -1              ; 8FF0h - Последняя нажатая клавиша
 86+  0000 ~            beepFreq      DB       5Fh            ; 8FF1h - Частота звукового сигнала (также влияет на длительность)
 87+  0000 ~            beepDuration  DB       20h            ; 8FF2h - Длительность звукового сигнала (сколько раз повторять посылку)
 88+  0000 ~            tapeInverse   DB      0FFh            ; 8FF3h - Признак инверсии данных с ленты
 89+  0000 ~            cursorDelay   DB       20h            ; 8FF4h - Задержка мигания курсора
 90+  0000 ~            antiBsDelay   DB      0E0h            ; 8FF5h - Задержка защиты от дребезга контактов клавиш
 91+  0000 ~            oldSP         DW      -1              ; 8FF6h - Используется для сохранения SP некоторыми функциями
 92+  0000 ~            ramPageCount  DB      RAMD_MAX_PAGE   ; 8FF8h - Количество детектированных 64кб страниц RAM-диска
 93+  0000 ~            _reserv_4     DB       0              ; 8FF9h -
 94+  0000 ~            inverse       DW       0              ; 8FFAh - Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
 95+  0000 ~            cursorY       DB      -1              ; 8FFCh - Положение курсора по вертикали в пикселях
 96+  0000 ~            cursorX       DB      -1              ; 8FFDh - Положение курсора по горизонтали в пикселях / 2
 97+  0000 ~            writeDelay    DB      28h             ; 8FFEh - Скорость при записи на ленту
 98+  0000 ~            readDelay     DB      3Ch             ; 8FFFh - Скорость при чтении с ленты
 99+  0000                  ENDS
100+  0000
101+  0000              ; Блок переменных BIOS начинается с адреса 8FDFh
102+  0000              bios_vars   BIOS_VARIABLES = 8FDFh
103+  0000
104+  0000              ;-----------------------------------------------------------------------
105+  0000              ; Стандартные точки входа ОС
106+  0000              ; Отмеченные [OLD] применять не рекомендуется
107+  0000              ; Отмеченные [MXOS2] - новые в MXOS 2
108+  0000              ;-----------------------------------------------------------------------
109+  0000
110+  0000              bios_init               = 0C000h ; Теплая перезагрузка
111+  0000
112+  0000              ; Устаревшие точки, лечше не применять
113+  0000              bios_keyScanOld         = 0C003h ; [OLD] Получить код нажатой клавиши, = bios_keyScan
114+  0000              bios_drawCursorOld      = 0C006h ; [OLD] Нарисовать/стереть курсор
115+  0000              bios_clearScreenOld     = 0C010h ; [OLD] Оистка экрана
116+  0000              bios_printCharOld       = 0C037h ; [OLD] Вывод символа на экран
117+  0000              bios_beep_Old           = 0C170h ; [OLD] Звуковой сигнал
118+  0000              bios_delay_l            = 0C18Fh ; [OLD] Задержка l циклов
119+  0000              bios_delay_b            = 0C190h ; [OLD] Задержка b циклов
120+  0000              bios_getchOld           = 0C337h ; [OLD] Ожидание ввода с клавиатуры
121+  0000              bios_tapeReadOld        = 0C377h ; [OLD] Чтение байта с магнитофона
122+  0000              bios_tapeWriteOld       = 0C3D0h ; [OLD] Запись байта на магнитофон
123+  0000              bios_cmp_hl_de          = 0C427h ; [OLD] Сравнить hl и de
124+  0000              bios_memcpy_bc_hl       = 0C42Dh ; [OLD] Скопировать блок памяти
125+  0000              bios_printStringOld     = 0C438h ; [OLD] Вывод строки на экран
126+  0000
127+  0000              ; Стандартные точки C800h
128+  0000              bios_reboot             = 0C800h ; Запустить NC.COM
129+  0000              bios_getch              = 0C803h ; Ожидание ввода с клавиатуры
130+  0000              bios_tapeRead           = 0C806h ; Чтение байта с магнитофона
131+  0000              bios_printChar          = 0C809h ; Вывод символа на экран
132+  0000              bios_tapeWrite          = 0C80Ch ; Запись байта на магнитофон
133+  0000              bios_input              = 0C80Fh ; Ввод строки с клавиатуры
134+  0000              bios_keyCheck           = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
135+  0000              bios_printHexByte       = 0C815h ; Вывод HEX числа на экран (байт)
136+  0000              bios_printString        = 0C818h ; Вывод строки на экран
137+  0000              bios_keyScan            = 0C81Bh ; Получить код нажатой клавиши
138+  0000              bios_getCursorPos       = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
139+  0000              bios_setCursorPos       = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
140+  0000              bios_tapeLoad           = 0C824h ; Загрузить программу с магнитофона
141+  0000              bios_tapeSave           = 0C827h ; Сохранить программу на магнитофон
142+  0000              bios_calcCS             = 0C82Ah ; Расчет контрольной суммы
143+  0000              bios_printHexWord       = 0C82Dh ; Вывод HEX числа на экран (слово)
144+  0000              bios_getMemTop          = 0C830h ; Получить объем доступной памяти
145+  0000              bios_setMemTop          = 0C833h ; Установить объем доступной памяти
146+  0000              bios_printer            = 0C836h ; Напечатать байт на принтере
147+  0000                  IF RAMFOS_COMPATIBILITY
148+  0000              bios_strToHex           = 0C839h ; [MXOS2] Преобразвоние строки в HEX формате в число
149+  0000                  ELSE
150+  0000 ~            bios_rebootAlt          = 0C839h ; Запустить NC.COM
151+  0000                  ENDIF
152+  0000              bios_rebootAlt2         = 0C83Ch ; Запустить NC.COM
153+  0000              bios_fileList           = 0C83Fh ; Получить список файлов
154+  0000              bios_fileGetSetDrive    = 0C842h ; Получить/установить активное устройство
155+  0000              bios_fileCreate         = 0C845h ; Создать файл
156+  0000              bios_fileLoad           = 0C848h ; Загрузить файл по адресу из заголовка этого файла
157+  0000              bios_fileDelete         = 0C84Bh ; Удалить файл
158+  0000              bios_fileRename         = 0C84Eh ; Переименовать файл
159+  0000              bios_fileLoadInfo       = 0C851h ; Загрузить информацию о файле
160+  0000              bios_fileGetSetAddr     = 0C854h ; Получить/установить адрес загрузки файла
161+  0000              bios_fileGetSetAttr     = 0C857h ; Получить/установить атрибуты файла
162+  0000              bios_fileNamePrepare    = 0C85Ah ; Преобразовать имя файла во внутренний формат
163+  0000              bios_fileExec           = 0C85Dh ; Запустить файл
164+  0000              bios_installDriver      = 0C860h ; Установить драйвер накопителя
165+  0000              bios_diskDriver         = 0C863h ; Драйвер выбранного диска
166+  0000              bios_fileLoad2          = 0C866h ; Загрузить файл по адресу de
167+  0000
168+  0000              ; Новые точки C800h MXOS2
169+  0000              bios_printCharReal      = 0C869h ; [MXOS2] Вывод символа на экран (только реальные символы)
170+  0000              bios_printDecWord       = 0C86Ch ; [MXOS2] Вывод числа экран в десятичной форме
171+  0000              bios_setRAMDDriver      = 0C86Fh ; [MXOS2] Установить драйвр рам-диска
172+  0000              bios_getDriveFreeSpace  = 0C872h ; [MXOS2] Получить оставшийся свободный объем диска
173+  0000              bios_upperCase          = 0C875h ; [MXOS2] Перевод кода символа КОИ-8 в верхний регистр
174+  0000              bios_strcmp             = 0C878h ; [MXOS2] Сравнение строк, чувствительное к регистру
175+  0000              bios_stricmp            = 0C87Bh ; [MXOS2] Сравнение строк, нечувствительное к регистру
176+  0000              bios_sub_hl_de          = 0C87Eh ; [MXOS2] Вычитание hl и de: hl = hl - de
177+  0000              bios_div_hl_2           = 0C881h ; [MXOS2] Деление hl на 2: hl = hl / 2
178+  0000              bios_mul_hl_de          = 0C884h ; [MXOS2] Умножение hl на de: hl = hl * de
179+  0000              bios_div_hl_de          = 0C887h ; [MXOS2] Деление hl на de: hl = hl / de, de = hl % de
180+  0000
181+  0000              ;-----------------------------------------------------------------------
182+  0000              ; Адрес таблицы переходов драйвера магнитофона
183+  0000              ;-----------------------------------------------------------------------
184+  0000
185+  0000              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
186+  0000
187+  0000              ;-----------------------------------------------------------------------
188+  0000              ; Непереключаемое ОЗУ ПК "Специалист-MX" (0FFC0h-0FFDF, 32 байта)
189+  0000              ;-----------------------------------------------------------------------
190+  0000
191+  0000              bios_RAMDRead   = 0FFC0h ; п/п чтения из ДОЗУ
192+  0000              bios_RAMDWrite  = 0FFD0h ; п/п записи в  ДОЗУ
193+  0000
194+  0000              ;-----------------------------------------------------------------------
195+  0000              ; Порты устройств ПК "Специалист-MX2" (0FFE0h-0FFFF, 32 байта)
196+  0000              ;-----------------------------------------------------------------------
197+  0000
198+  0000              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
199+  0000              IO_KEYB_B       =  0FFE1h
200+  0000              IO_KEYB_C       =  0FFE2h
201+  0000              IO_KEYB_MODE    =  0FFE3h
202+  0000              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
203+  0000              IO_PROG_B       =  0FFE5h
204+  0000              IO_PROG_C       =  0FFE6h
205+  0000              IO_PROG_MODE    =  0FFE7h
206+  0000              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
207+  0000              IO_FDD_TRACK    =  0FFE9h
208+  0000              IO_FDD_SECTOR   =  0FFEAh
209+  0000              IO_FDD_DATA     =  0FFEBh
210+  0000              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
211+  0000              IO_TIMER_CH1    =  0FFEDh
212+  0000              IO_TIMER_CH2    =  0FFEEh
213+  0000              IO_TIMER_MODE   =  0FFEFh
214+  0000              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
215+  0000              IO_FDD_MOTOR    =  0FFF1h
216+  0000              IO_FDD_SIDE     =  0FFF2h
217+  0000              IO_FDD_DRIVE    =  0FFF3h
218+  0000              IO_COLOR        =  0FFF8h   ; регистр цвета
219+  0000              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
220+  0000              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
221+  0000              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
222+  0000              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
223+  0000
224+  0000              ;-----------------------------------------------------------------------
225+  0000              ; Структура файловой системы
226+  0000              ;-----------------------------------------------------------------------
227+  0000
228+  0000              ; Структура каталога
229+  0000              FILE_DESCR_SIZE  = 32   ; размер дескриптора файла в каталоге (байт)
230+  0000              FILE_NAME_LENGTH = 8    ; длина имени файла  (байт)
231+  0000              FAT_ITEM_SIZE    = 2    ; размер записи в таблице FAT (байт)
232+  0000
233+  0000              SECTOR_SIZE  = 00100h   ; размер сектора 256 байт
234+  0000              CLUSTER_SIZE = 00100h   ; размер кластера 256 байт
235+  0000
236+  0000              ; Специальные коды кластеров FAT
237+  0000              FAT12_BAD = 00FF7h  ; плохой кластер
238+  0000              FAT16_BAD = 0FFF7h
239+  0000              FAT12_EOC = 00FFFh  ; последний кластер файла
240+  0000              FAT16_EOC = 0FFFFh
241+  0000              FAT12_RES = 00FFFh  ; зарезервированный кластер
242+  0000              FAT16_RES = 0FFFFh
243+  0000
244+  0000              ;-----------------------------------------------------------------------
245+  0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
246+  0000              ;-----------------------------------------------------------------------
247+  0000
248+  0000                  STRUCT FILE_DESCRIPTOR  ; 32 байта
249+  0000 ~            name            BLOCK   FILE_NAME_LENGTH    ; смещение 00h, 8 байт  - имя файла
250+  0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
251+  0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
252+  0000 ~            ntReserved      BLOCK   1                   ; смещение 0Ch, 1 байт  - используются в Windows NT
253+  0000 ~            createTimeTenth BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
254+  0000 ~            createTime      BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
255+  0000 ~            createDate      BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
256+  0000 ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
257+  0000 ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
258+  0000 ~            writeTime       BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
259+  0000 ~            writeDate       BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
260+  0000 ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
261+  0000 ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
262+  0000                  ENDS
263+  0000
264+  0000              ;-----------------------------------------------------------------------
265+  0000              ; Информация о файле (компактный вариант дескриптора)
266+  0000              ; Почти совместимо с дескриптором оригинального Коммандера
267+  0000              ;-----------------------------------------------------------------------
268+  0000
269+  0000              FILE_INFO_SIZE = 16     ; размер структуры (байт)
270+  0000
271+  0000                  STRUCT FILE_INFO    ; 16 байт
272+  0000 ~            name            BLOCK   FILE_NAME_LENGTH    ; смещение 00h, 8 байт  - имя файла
273+  0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
274+  0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
275+  0000 ~            loadAddress     BLOCK   2                   ; смещение 0Eh, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый
276+  0000 ~            size            BLOCK   2                   ; смещение 0Ch, 2 байта - размер файла в байтах
277+  0000                  ENDS
278+  0000
279+  0000              ;-----------------------------------------------------------------------
280+  0000              ; Информация о активном накопителе (диске)
281+  0000              ;-----------------------------------------------------------------------
282+  0000
283+  0000                  STRUCT DISK_INFO
284+  0000 ~            sectorSize          BLOCK   2   ; размер сектора, байт (256, 512, 1024)
285+  0000 ~            sectorsPerCluster   BLOCK   2   ; размер кластера, секторов (1, 2, 4, 8)
286+  0000 ~            resSectors          BLOCK   2   ; сколько секторов занимает зарезервированная область = первый сектор таблицы fat
287+  0000 ~            fatSectors          BLOCK   2   ; сколько секторов занимает таблица fat
288+  0000 ~            dirSectors          BLOCK   2   ; сколько секторов занимает корневой каталог
289+  0000 ~            totalSectors        BLOCK   2   ; сколько всего секторов на диске
290+  0000 ~            rootDirMaxFiles     BLOCK   2   ; максимум файлов в корневом каталоге
291+  0000 ~            descrPerSector      BLOCK   2   ; сколько дескрипторов файлов вмещается в один сектор
292+  0000 ~            fatNumCells         BLOCK   2   ; количество ячеек в таблице fat (= fatSectors * sectorSize / 2)
293+  0000 ~            dirStartSector      BLOCK   2   ; первый сектор корневого каталога
294+  0000 ~            dataStartSector     BLOCK   2   ; первый сектор области данных
295+  0000 ~            volumeLabel         BLOCK  12   ; метка тома и 0 в конце
296+  0000 ~            isValid             BLOCK   1   ; 0 = нет драйвера, 1 = диск не распознан, 2 = диск распознан, корректно отформатирован
297+  0000                  ENDS
298+  0000
299+  0000              DISK_NO_DRIVER = 0
300+  0000              DISK_INVALID   = 1
301+  0000              DISK_VALID     = 2
302+  0000
303+  0000              ;-----------------------------------------------------------------------
304+  0000              ; Буферы в памяти
305+  0000              ;-----------------------------------------------------------------------
306+  0000
307+  0000              ; Дисковый кэш
308+  0000              FAT_CACHE_ADDR = 0FB00h ; адрес кэша секторов fat в памяти
309+  0000              FAT_CACHE_SIZE = 1024   ; размер кэша в байтах
310+  0000              FAT_CACHE_CAPACITY = FAT_CACHE_SIZE / SECTOR_SIZE   ; сколько секторов вмещается в кэш
311+  0000
312+  0000              ; Буфер для загрузки BAT файла
313+  0000                  IF NEW_MEMORY_MAP
314+  0000              BAT_BUFFER = 0E800h
315+  0000                  ELSE
316+  0000 ~            BAT_BUFFER = 0FC00h
317+  0000                  ENDIF
318+  0000
319+  0000              ; Командная строка и стек
320+  0000              CMD_LINE   = 0FF00h  ; 192 байта, но в конце стек
321+  0000              STACK_ADDR = 0FFC0h  ; стек
322+  0000
323+  0000              ;-----------------------------------------------------------------------
324+  0000              ; Всякие полезности
325+  0000              ;-----------------------------------------------------------------------
326+  0000
327+  0000              ; Макрос для заполнения памяти от текущего адреса до указанного
328+  0000                  MACRO ORG_PAD adr
329+  0000 ~                     IF $ > adr
330+  0000 ~                       ; вывод сообщения об ошибке
331+  0000 ~                       ASSERT 0
332+  0000 ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
333+  0000 ~                     ELSE
334+  0000 ~                       ; заполнение памяти
335+  0000 ~                       BLOCK adr-$, 0FFh
336+  0000 ~                     ENDIF
337+  0000 ~                     ORG adr
338+  0000                  ENDM
339+  0000
340+  0000                  MACRO ORG_PAD0 adr
341+  0000 ~                     IF $ > adr
342+  0000 ~                       ; вывод сообщения об ошибке
343+  0000 ~                       ASSERT 0
344+  0000 ~                       DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
345+  0000 ~                     ELSE
346+  0000 ~                       ; заполнение памяти
347+  0000 ~                       BLOCK adr-$, 0
348+  0000 ~                     ENDIF
349+  0000 ~                     ORG adr
350+  0000                  ENDM
351+  0000
352+  0000              ; Макросы для проверки текущего адреса
353+  0000                  MACRO ASSERT_EQUAL adr
354+  0000 ~                     IF $ != adr
355+  0000 ~                       ASSERT 0
356+  0000 ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
357+  0000 ~                     ENDIF
358+  0000                  ENDM
359+  0000
360+  0000                  MACRO ASSERT_DONT_FIT adr
361+  0000 ~                     IF $ > adr
362+  0000 ~                       ASSERT 0
363+  0000 ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
364+  0000 ~                     ENDIF
365+  0000                  ENDM
366+  0000
367+  0000              ;-----------------------------------------------------------------------
368+  0000              ; Конец
369+  0000              ;-----------------------------------------------------------------------
370+  0000
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\../include/mxos.inc
  9   0000
 10   0000                  ORG     0DC00h
 11   DC00
 12   DC00              	INCLUDE "tapeInit.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeInit.inc
  1+  DC00              ;+---------------------------------------------------------------------------
  2+  DC00              ; MXOS
  3+  DC00              ; TAPE.SYS - Инициализация
  4+  DC00              ;
  5+  DC00              ; 2022-02-02 SpaceEngineer
  6+  DC00              ;----------------------------------------------------------------------------
  7+  DC00
  8+  DC00              tapeInit:
  9+  DC00                      ; Копируем таблицу переходов в DOS.SYS и выходим
 10+  DC00 21 0C DC             ld      hl, jumpsStart
 11+  DC03 11 1E DC             ld      de, jumpsEnd
 12+  DC06 01 77 C3             ld      bc, TAPE_DRIVER_JUMPS
 13+  DC09 C3 2D C4             jp      bios_memcpy_bc_hl
 14+  DC0C
 15+  DC0C                      ; Таблца переходов
 16+  DC0C              jumpsStart:
 17+  DC0C C3 24 DC             jp      tapeRead
 18+  DC0F C3 7F DC             jp      tapeWrite
 19+  DC12 C3 11 DD             jp      tapeLoad
 20+  DC15 C3 D8 DC             jp      tapeSave
 21+  DC18 C3 A4 DC             jp      tapeLoadInt
 22+  DC1B C3 D2 DC             jp      tapeReadError
 23+  DC1E              jumpsEnd:
 24+  DC1E
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeInit.inc
 13   DC1E              	INCLUDE "tapeWriteDelay.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeWriteDelay.inc
  1+  DC1E              ;+---------------------------------------------------------------------------
  2+  DC1E              ; MXOS
  3+  DC1E              ; Задержка при записи на ленту
  4+  DC1E              ;
  5+  DC1E              ; 2013-12-12 Дизассемблировано vinxru
  6+  DC1E              ;----------------------------------------------------------------------------
  7+  DC1E
  8+  DC1E 3A FE 8F     writeDelay: ld    a, (bios_vars.writeDelay)
  9+  DC21 C3 79 DC                 jp    delay_a
 10+  DC24
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeWriteDelay.inc
 14   DC24              	INCLUDE "tapeRead.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeRead.inc
  1+  DC24              ;+---------------------------------------------------------------------------
  2+  DC24              ; MXOS
  3+  DC24              ; Чтение байта с ленты
  4+  DC24              ;
  5+  DC24              ; На входе
  6+  DC24              ;  a=255 пропуск пилот-тона до байта до E6h, загрузка первого байта после
  7+  DC24              ;  a=8   загрузка байта (8 бит)
  8+  DC24              ;
  9+  DC24              ; На выходе
 10+  DC24              ;  c - байт
 11+  DC24              ;  de, hl - сохраняются
 12+  DC24              ;
 13+  DC24              ; 2013-12-12 Дизассемблировано vinxru
 14+  DC24              ;----------------------------------------------------------------------------
 15+  DC24
 16+  DC24              tapeRead:   ; Сохраняем регистры
 17+  DC24 C5                       push  bc
 18+  DC25 D5                       push  de
 19+  DC26
 20+  DC26                          ; Тут будет принятый байт
 21+  DC26 0E 00                    ld    c, 0
 22+  DC28
 23+  DC28                          ; d=8 если загрузка (счетчик бит) или 0FFh если ожидание
 24+  DC28 57                       ld    d, a
 25+  DC29
 26+  DC29              tapeRead_0: ; Получаем состояние
 27+  DC29 3A E1 FF                 ld    a, (IO_KEYB_B)
 28+  DC2C E6 01                    and   1
 29+  DC2E 5F                       ld    e, a
 30+  DC2F
 31+  DC2F                          ; Сдвигаем c
 32+  DC2F 79                       ld    a, c
 33+  DC30 E6 7F                    and   7Fh
 34+  DC32 07                       rlca
 35+  DC33 4F                       ld    c, a
 36+  DC34
 37+  DC34              tapeRead_1: ; Получаем состояние
 38+  DC34 3A E1 FF                 ld    a, (IO_KEYB_B)
 39+  DC37
 40+  DC37                          ; Если нажата клавиша, выходим
 41+  DC37 FE 80                    cp    80h
 42+  DC39 DA D2 DC                 jp c, tapeReadError
 43+  DC3C
 44+  DC3C                          ; Ждем изменения сигнала
 45+  DC3C E6 01                    and   1
 46+  DC3E BB                       cp    e
 47+  DC3F CA 34 DC                 jp z, tapeRead_1
 48+  DC42
 49+  DC42                          ; Сохраняем бит
 50+  DC42 B1                       or    c
 51+  DC43 4F                       ld    c, a
 52+  DC44
 53+  DC44                          ; Задержка
 54+  DC44 CD 76 DC                 call  readDelay
 55+  DC47
 56+  DC47 3A E1 FF                 ld    a, (IO_KEYB_B)
 57+  DC4A E6 01                    and   1
 58+  DC4C 5F                       ld    e, a
 59+  DC4D
 60+  DC4D                          ; Если происходит загрузка данных, переходим на tapeRead_4
 61+  DC4D 7A                       ld    a, d
 62+  DC4E B7                       or    a
 63+  DC4F F2 6B DC                 jp p, tapeRead_4
 64+  DC52
 65+  DC52                          ; Если происходит ожидание
 66+  DC52                          ; Если не найден 0E6h, переходим tapeRead_2
 67+  DC52 79                       ld    a, c
 68+  DC53 FE E6                    cp    0E6h
 69+  DC55 C2 5F DC                 jp nz,  tapeRead_2
 70+  DC58
 71+  DC58                          ; Начинаем загрузку без инверсии
 72+  DC58 AF                       xor   a
 73+  DC59 32 F3 8F                 ld    (bios_vars.tapeInverse),a
 74+  DC5C C3 69 DC                 jp    tapeRead_3
 75+  DC5F
 76+  DC5F              tapeRead_2: ; Если не найден 19h, переходим на tapeRead_0
 77+  DC5F FE 19                    cp    19h
 78+  DC61 C2 29 DC                 jp nz,  tapeRead_0
 79+  DC64
 80+  DC64                          ; Начинаем загрузку с инверсией
 81+  DC64 3E FF                    ld    a, 0FFh
 82+  DC66 32 F3 8F                 ld    (bios_vars.tapeInverse),a
 83+  DC69
 84+  DC69                          ; Загружаем 8 бит
 85+  DC69 16 09        tapeRead_3: ld    d, 9
 86+  DC6B
 87+  DC6B                          ; Повторяем 8 байт
 88+  DC6B 15           tapeRead_4: dec   d
 89+  DC6C C2 29 DC                 jp nz,  tapeRead_0
 90+  DC6F
 91+  DC6F                          ; Инверсия байта
 92+  DC6F 3A F3 8F                 ld    a, (bios_vars.tapeInverse)
 93+  DC72 A9                       xor   c
 94+  DC73
 95+  DC73                          ; Восстаналиваем регистры
 96+  DC73 D1                       pop   de
 97+  DC74 C1                       pop   bc
 98+  DC75 C9                       ret
 99+  DC76
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeRead.inc
 15   DC76              	INCLUDE "tapeReadDelay.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeReadDelay.inc
  1+  DC76              ;+---------------------------------------------------------------------------
  2+  DC76              ; MXOS
  3+  DC76              ; Задержка при чтении с ленты
  4+  DC76              ;
  5+  DC76              ; 2013-12-12 Дизассемблировано vinxru
  6+  DC76              ;----------------------------------------------------------------------------
  7+  DC76
  8+  DC76 3A FF 8F     readDelay:  ld    a, (bios_vars.readDelay)
  9+  DC79 47           delay_a:    ld    b, a
 10+  DC7A 05           delay_l_0:  dec   b
 11+  DC7B C2 7A DC                 jp nz,  delay_l_0
 12+  DC7E C9                       ret
 13+  DC7F
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeReadDelay.inc
 16   DC7F              	INCLUDE "tapeWrite.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeWrite.inc
  1+  DC7F              ;+---------------------------------------------------------------------------
  2+  DC7F              ; MXOS
  3+  DC7F              ; Запись байта на ленту
  4+  DC7F              ;
  5+  DC7F              ; На входе
  6+  DC7F              ;   a - байт
  7+  DC7F              ;
  8+  DC7F              ; На выходе
  9+  DC7F              ;   все регистры сохраняются
 10+  DC7F              ;
 11+  DC7F              ; 2013-12-12 Дизассемблировано vinxru
 12+  DC7F              ;----------------------------------------------------------------------------
 13+  DC7F
 14+  DC7F              tapeWrite:  ; Сохранение регистров
 15+  DC7F C5                       push  bc
 16+  DC80 D5                       push  de
 17+  DC81 F5                       push  af
 18+  DC82
 19+  DC82 57                       ld    d, a
 20+  DC83
 21+  DC83                          ; Надо записть 8 бит
 22+  DC83 0E 08                    ld    c, 8
 23+  DC85
 24+  DC85              tapeWrite_1:
 25+  DC85                          ; Сдвинуть d
 26+  DC85 7A                       ld    a, d
 27+  DC86 07                       rlca
 28+  DC87 57                       ld    d, a
 29+  DC88
 30+  DC88                          ; Вывести бит на ленту
 31+  DC88 E6 01                    and   1
 32+  DC8A F6 0E                    or    0Eh
 33+  DC8C 32 E3 FF                 ld    (IO_KEYB_MODE),a
 34+  DC8F 5F                       ld    e, a
 35+  DC90
 36+  DC90                          ; Задержка
 37+  DC90 CD 1E DC                 call  writeDelay
 38+  DC93
 39+  DC93                          ; Вывести инверсный бит на магнитофон
 40+  DC93 7B                       ld    a, e
 41+  DC94 EE 01                    xor   1
 42+  DC96 32 E3 FF                 ld    (IO_KEYB_MODE),a
 43+  DC99
 44+  DC99                          ; Задержка
 45+  DC99 CD 1E DC                 call  writeDelay
 46+  DC9C
 47+  DC9C                          ; Повторить 8 раз
 48+  DC9C 0D                       dec   c
 49+  DC9D C2 85 DC                 jp nz,  tapeWrite_1
 50+  DCA0
 51+  DCA0                          ; Восстановление регистров и выход
 52+  DCA0 F1                       pop   af
 53+  DCA1 D1                       pop   de
 54+  DCA2 C1                       pop   bc
 55+  DCA3 C9                       ret
 56+  DCA4
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeWrite.inc
 17   DCA4              	INCLUDE "tapeLoadInt.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeLoadInt.inc
  1+  DCA4              ;+---------------------------------------------------------------------------
  2+  DCA4              ; MXOS
  3+  DCA4              ; Загрузка программы с ленты. КС не загружается.
  4+  DCA4              ;
  5+  DCA4              ; В случае ошибки управление передается по адресу в bios_vars.tapeError
  6+  DCA4              ;
  7+  DCA4              ; На выходе
  8+  DCA4              ;  bios_vars.tapeAddr - адрес загруженной программы
  9+  DCA4              ;
 10+  DCA4              ; 2013-12-12 Дизассемблировано vinxru
 11+  DCA4              ;----------------------------------------------------------------------------
 12+  DCA4
 13+  DCA4              tapeLoadInt:
 14+  DCA4                          ; Ждем пилот-тон и читаем слово - это адрес загрузки программы
 15+  DCA4 3E FF                    ld      a, 0FFh
 16+  DCA6 CD 24 DC                 call    tapeRead
 17+  DCA9 6F                       ld      l, a
 18+  DCAA 3E 08                    ld      a, 8
 19+  DCAC CD 24 DC                 call    tapeRead
 20+  DCAF 67                       ld      h, a
 21+  DCB0 22 E3 8F                 ld      (bios_vars.tapeAddr), hl
 22+  DCB3
 23+  DCB3                          ; Читаем следующее слово - это конец программы
 24+  DCB3 3E 08                    ld      a, 8
 25+  DCB5 CD 24 DC                 call    tapeRead
 26+  DCB8 5F                       ld      e, a
 27+  DCB9 3E 08                    ld      a, 8
 28+  DCBB CD 24 DC                 call    tapeRead
 29+  DCBE 57                       ld      d, a
 30+  DCBF
 31+  DCBF                          ; Читаем тело программы
 32+  DCBF 3E 08        loc_C414:   ld      a, 8
 33+  DCC1 CD 24 DC     loc_C416:   call    tapeRead
 34+  DCC4 77                       ld      (hl), a
 35+  DCC5 CD 27 C4                 call    bios_cmp_hl_de
 36+  DCC8 23                       inc     hl
 37+  DCC9 C2 BF DC                 jp nz,  loc_C414
 38+  DCCC
 39+  DCCC                          ; Выходим не запуская
 40+  DCCC C9                       ret
 41+  DCCD
 42+  DCCD              ; ---------------------------------------------------------------------------
 43+  DCCD              ; Не используется
 44+  DCCD
 45+  DCCD              tapeLoadAny:
 46+  DCCD 3E FF                    ld    a, 0FFh
 47+  DCCF C3 C1 DC                 jp    loc_C416
 48+  DCD2
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeLoadInt.inc
 18   DCD2              	INCLUDE "tapeReadError.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeReadError.inc
  1+  DCD2              ;+---------------------------------------------------------------------------
  2+  DCD2              ; MXOS
  3+  DCD2              ; Вызывается при ошибке чтения с ленты
  4+  DCD2              ;
  5+  DCD2              ; 2013-12-12 Дизассемблировано vinxru
  6+  DCD2              ;----------------------------------------------------------------------------
  7+  DCD2
  8+  DCD2 D1           tapeReadError:    pop   de
  9+  DCD3 C1                       pop   bc
 10+  DCD4 2A E1 8F                 ld    hl, (bios_vars.tapeError)
 11+  DCD7 E9                       jp    (hl)
 12+  DCD8
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeReadError.inc
 19   DCD8              	INCLUDE "tapeSave.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeSave.inc
  1+  DCD8              ;+---------------------------------------------------------------------------
  2+  DCD8              ; MXOS
  3+  DCD8              ; Запись программы на ленту
  4+  DCD8              ;
  5+  DCD8              ; На входе
  6+  DCD8              ;  hl - начальный адрес
  7+  DCD8              ;  de - конечный адрес
  8+  DCD8              ;
  9+  DCD8              ; На выходе
 10+  DCD8              ;  bc - контрольная сумма
 11+  DCD8              ;  de, hl - сохраняются
 12+  DCD8              ;
 13+  DCD8              ; 2013-12-12 Дизассемблировано vinxru
 14+  DCD8              ;----------------------------------------------------------------------------
 15+  DCD8
 16+  DCD8              tapeSave:   ; Расчитываем CRC
 17+  DCD8 E5                       push    hl
 18+  DCD9 CD 2A C8                 call    bios_calcCS
 19+  DCDC E1                       pop     hl
 20+  DCDD
 21+  DCDD E5                       push    hl
 22+  DCDE C5                       push    bc
 23+  DCDF
 24+  DCDF                          ; Пилот-тон (256 нулей)
 25+  DCDF 06 00                    ld      b, 0
 26+  DCE1 AF           loc_C9A4:   xor     a
 27+  DCE2 CD 7F DC                 call    tapeWrite
 28+  DCE5 05                       dec     b
 29+  DCE6 C2 E1 DC                 jp nz,  loc_C9A4
 30+  DCE9
 31+  DCE9                          ; Стартовый байт 0E6h
 32+  DCE9 3E E6                    ld      a, 0E6h
 33+  DCEB CD 7F DC                 call    tapeWrite
 34+  DCEE
 35+  DCEE                          ; Запись адреса первого байта
 36+  DCEE CD 09 DD                 call    tapeWriteWord
 37+  DCF1 EB                       ex      de, hl
 38+  DCF2
 39+  DCF2                          ; Запись адреса последнего байта
 40+  DCF2 CD 09 DD                 call    tapeWriteWord
 41+  DCF5 EB                       ex      de, hl
 42+  DCF6
 43+  DCF6              loc_C9B9:   ; Запись блока памяти от hl до de
 44+  DCF6 7E                       ld      a, (hl)
 45+  DCF7 CD 7F DC                 call    tapeWrite
 46+  DCFA CD 24 DD                 call    cmp_hl_de_2
 47+  DCFD 23                       inc     hl
 48+  DCFE C2 F6 DC                 jp nz,  loc_C9B9
 49+  DD01
 50+  DD01                          ; Запись CRC
 51+  DD01 E1                       pop     hl
 52+  DD02 CD 09 DD                 call    tapeWriteWord
 53+  DD05
 54+  DD05                          ; Возвращаем CRC в регистре bc
 55+  DD05 44                       ld      b, h
 56+  DD06 4D                       ld      c, l
 57+  DD07
 58+  DD07                          ; Восстанавливаем регистры и выходим
 59+  DD07 E1                       pop     hl
 60+  DD08 C9                       ret
 61+  DD09
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeSave.inc
 20   DD09              	INCLUDE "tapeWriteWord.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeWriteWord.inc
  1+  DD09              ;+---------------------------------------------------------------------------
  2+  DD09              ; MXOS
  3+  DD09              ; Запись слова на ленту
  4+  DD09              ;
  5+  DD09              ; На входе
  6+  DD09              ;  hl - слово
  7+  DD09              ;
  8+  DD09              ; На выходе
  9+  DD09              ;  bc, de, hl - сохраняются
 10+  DD09              ;
 11+  DD09              ; 2013-12-12 Дизассемблировано vinxru
 12+  DD09              ;----------------------------------------------------------------------------
 13+  DD09
 14+  DD09              tapeWriteWord:
 15+  DD09 7D                       ld    a, l
 16+  DD0A CD 7F DC                 call  tapeWrite
 17+  DD0D 7C                       ld    a, h
 18+  DD0E C3 7F DC                 jp    tapeWrite
 19+  DD11
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeWriteWord.inc
 21   DD11              	INCLUDE "tapeLoad.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeLoad.inc
  1+  DD11              ;+---------------------------------------------------------------------------
  2+  DD11              ; MXOS
  3+  DD11              ; Загрузка программы с ленты. КС загружается, но не проверяется.
  4+  DD11              ;
  5+  DD11              ; В случае ошибки управление передается по адресу в bios_vars.tapeError
  6+  DD11              ;
  7+  DD11              ; На выходе
  8+  DD11              ;  bc - контольная сумма
  9+  DD11              ;  hl, bios_vars.tapeAddr - адрес загруженной программы
 10+  DD11              ;
 11+  DD11              ; 2013-12-12 Дизассемблировано vinxru
 12+  DD11              ;----------------------------------------------------------------------------
 13+  DD11
 14+  DD11              tapeLoad:   ; Загружаем файл с ленты без загрузки КС
 15+  DD11 CD A4 DC                 call  tapeLoadInt
 16+  DD14
 17+  DD14                          ; Читаем КС
 18+  DD14 3E 08                    ld    a, 8
 19+  DD16 CD 24 DC                 call  tapeRead
 20+  DD19 4F                       ld    c, a
 21+  DD1A 3E 08                    ld    a, 8
 22+  DD1C CD 24 DC                 call  tapeRead
 23+  DD1F 47                       ld    b, a
 24+  DD20
 25+  DD20                          ; В hl возвращаем адрес запуска
 26+  DD20 2A E3 8F                 ld    hl, (bios_vars.tapeAddr)
 27+  DD23 C9                       ret
 28+  DD24
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tapeLoad.inc
 22   DD24              	INCLUDE "cmp_hl_de_2.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\cmp_hl_de_2.inc
  1+  DD24              ;+---------------------------------------------------------------------------
  2+  DD24              ; MXOS
  3+  DD24              ; Сравнить hl и de
  4+  DD24              ;
  5+  DD24              ; 2013-12-12 Дизассемблировано vinxru
  6+  DD24              ;----------------------------------------------------------------------------
  7+  DD24
  8+  DD24              cmp_hl_de_2:
  9+  DD24 7C                   ld    a, h
 10+  DD25 BA                   cp    d
 11+  DD26 D8                   ret   c
 12+  DD27 C0                   ret   nz
 13+  DD28 7D                   ld    a, l
 14+  DD29 BB                   cp    e
 15+  DD2A C9                   ret
 16+  DD2B
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\cmp_hl_de_2.inc
 23   DD2B
 24   DD2B                  ; Проверка - TAPE.COM не должен вылезать за эти пределы
 25   DD2B                  ASSERT_DONT_FIT 0DE00h
 25   DD2B             >         IF $ > 0DE00h
 25   DD2B ~           >           ASSERT 0
 25   DD2B ~           >           DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
 25   DD2B             >         ENDIF
 26   DD2B
 27   DD2B                  END
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\tape\tape.asm
