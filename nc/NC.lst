# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\NC.asm
  1   0000              ;----------------------------------------------------------------------------
  2   0000              ; MXOS - Файловый менеджер NC.COM
  3   0000              ;
  4   0000              ; 2013-12-18 Дизассемблировано и доработано vinxru
  5   0000              ; 2022-01-31 Доработано SpaceEngineer
  6   0000              ;----------------------------------------------------------------------------
  7   0000
  8   0000                  INCLUDE "../include/mxos.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\../include/mxos.inc
  1+  0000              ;-----------------------------------------------------------------------
  2+  0000              ; MXOS
  3+  0000              ; Точки входа и настройки сборки MXOS
  4+  0000              ;
  5+  0000              ; Новая карта памяти:
  6+  0000              ;   8FDF-8FFF - [  32 B] Переменные
  7+  0000              ;   9000-BFFF - [12  KB] Экран
  8+  0000              ;   C000-D3FF - [5120 B] DOS.SYS
  9+  0000              ;   D400-DBFF - [2048 B] Свободно (2048 байт)
 10+  0000              ;   DC00-EDFF - [ 512 B] Драйвер магнитофона
 11+  0000              ;   DE00-DFFF - [ 512 B] Драйвер флеш-диска
 12+  0000              ;   E000-E7FF - [2048 B] Шрифт
 13+  0000              ;   E800-FAFF - [4864 B] Системные программы (NC.COM, E.COM, DL-RED.COM, FORMAT.COM, MON2.COM, ...)
 14+  0000              ;   FB00-FEFF - [1024 B] Дисковый кэш (fat + каталог)
 15+  0000              ;   FF00-FF81 - [ 130 B] Командная строка
 16+  0000              ;   FF82-FFBF - [  62 B] Стек
 17+  0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
 18+  0000              ;   FFE0-FFFF - [  32 B] Оборудование
 19+  0000              ;
 20+  0000              ; Старая карта памяти:
 21+  0000              ;   8FDF-8FFF - [  32 B] Переменные
 22+  0000              ;   9000-BFFF - [12  KB] Экран
 23+  0000              ;   C000-CFFF - [4096 B] DOS.SYS
 24+  0000              ;   D000-E1FF - [4607 B] Системные программы (NC.COM, E.COM, DL-RED.COM)
 25+  0000              ;   E200-E5FF - [1024 B] Свободно (1024 байт)
 26+  0000              ;   E600-E7FF - [ 512 B] Драйвер магнитофона
 27+  0000              ;   E800-E8FF - [ 256 B] Свободно (256 байт)
 28+  0000              ;   E900-F0FF - [2048 B] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
 29+  0000              ;   F100-F8FF - [2048 B] Системные программы (FORMAT.COM, MON2.COM, ...)
 30+  0000              ;   F900-F9FF - [ 256 B] Свободно (256 байт)
 31+  0000              ;   FA00-FAFF - [ 256 B] Драйвер флеш-диска
 32+  0000              ;   FB00-FEFF - [1024 B] Дисковый буфер (fat + каталог)
 33+  0000              ;   FF00-FF81 - [ 130 B] Командная строка
 34+  0000              ;   FF82-FFBF - [  62 B] Стек
 35+  0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
 36+  0000              ;   FFE0-FFFF - [  32 B] Оборудование
 37+  0000              ;-----------------------------------------------------------------------
 38+  0000
 39+  0000
 40+  0000              ;-----------------------------------------------------------------------
 41+  0000              ; Конфигурация сборки
 42+  0000              ;-----------------------------------------------------------------------
 43+  0000
 44+  0000              NEW_MEMORY_MAP       =  1       ; Новая карта памяти
 45+  0000              RAMD_MAX_PAGE        =  16      ; Максимальное количество страниц RAM диска
 46+  0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
 47+  0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
 48+  0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
 49+  0000              EMBED_FONT           =  0       ; Встроить шрифт в программу (при запуске шрифт копируется на FONT_ADDR)
 50+  0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
 51+  0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
 52+  0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
 53+  0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
 54+  0000
 55+  0000                  IF  NEW_MEMORY_MAP
 56+  0000              FONT_ADDR = 0E000h  ; Адрес шрфита
 57+  0000                  ELSE
 58+  0000 ~            FONT_ADDR = 0E900h  ; Адрес шрфита
 59+  0000                  ENDIF
 60+  0000
 61+  0000                  IF  LOAD_FONT
 62+  0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
 63+  0000                  ELSE
 64+  0000 ~            FONT_ADDR_DIV_8 = -1
 65+  0000                  ENDIF
 66+  0000
 67+  0000              ;-----------------------------------------------------------------------
 68+  0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
 69+  0000              ; Доступ к переменным и программ польователя:
 70+  0000              ; ld a, bios_vars.lastKey
 71+  0000              ;-----------------------------------------------------------------------
 72+  0000
 73+  0000                  STRUCT BIOS_VARIABLES
 74+  0000 ~            _reserv_1     DW      -1              ; 8FDFh -
 75+  0000 ~            tapeError     DW      0C800h          ; 8FE1h - Адрес, куда происходит переход при ошибке чтения с ленты
 76+  0000 ~            tapeAddr      DW      -1              ; 8FE3h - Адрес программы загруженной с ленты
 77+  0000 ~            _reserv_2     DW      -1              ; 8FE5h -
 78+  0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; 8FE7h - Адрес альтернативного знакогенератора / 8
 79+  0000 ~            cursorCfg     DB       21h ; 0A9h     ; 8FE9h - Внешний вид курсора (биты: 7 - мигание (если 0), 654 - положение (Y) от низа строки, 3210 - размер по высоте)
 80+  0000 ~            koi7          DB       0   ; 0FFh     ; 8FEAh - 0FFh = включен KOI-7, 0 = включен KOI-8
 81+  0000 ~            escMode       DB      -1              ; 8FEBh - Обработка ESC-последовательности
 82+  0000 ~            keyLocks      DB      0BAh ; 3Ah      ; 8FECh - Caps Lock или Рус/Lat (3A - прописные анг, BA - строчные анг, BB - прописные рус, 3B - строчные рус)
 83+  0000 ~            _reserv_3     DW      -1              ; 8FEDh -
 84+  0000 ~            lastLastKey   DB      -1              ; 8FEFh - Предпоследняя нажатая клавиша
 85+  0000 ~            lastKey       DB      -1              ; 8FF0h - Последняя нажатая клавиша
 86+  0000 ~            beepFreq      DB       5Fh            ; 8FF1h - Частота звукового сигнала (также влияет на длительность)
 87+  0000 ~            beepDuration  DB       20h            ; 8FF2h - Длительность звукового сигнала (сколько раз повторять посылку)
 88+  0000 ~            tapeInverse   DB      0FFh            ; 8FF3h - Признак инверсии данных с ленты
 89+  0000 ~            cursorDelay   DB       20h            ; 8FF4h - Задержка мигания курсора
 90+  0000 ~            antiBsDelay   DB      0E0h            ; 8FF5h - Задержка защиты от дребезга контактов клавиш
 91+  0000 ~            oldSP         DW      -1              ; 8FF6h - Используется для сохранения SP некоторыми функциями
 92+  0000 ~            ramPageCount  DB      RAMD_MAX_PAGE   ; 8FF8h - Количество детектированных 64кб страниц RAM-диска
 93+  0000 ~            _reserv_4     DB       0              ; 8FF9h -
 94+  0000 ~            inverse       DW       0              ; 8FFAh - Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
 95+  0000 ~            cursorY       DB      -1              ; 8FFCh - Положение курсора по вертикали в пикселях
 96+  0000 ~            cursorX       DB      -1              ; 8FFDh - Положение курсора по горизонтали в пикселях / 2
 97+  0000 ~            writeDelay    DB      28h             ; 8FFEh - Скорость при записи на ленту
 98+  0000 ~            readDelay     DB      3Ch             ; 8FFFh - Скорость при чтении с ленты
 99+  0000                  ENDS
100+  0000
101+  0000              ; Блок переменных BIOS начинается с адреса 8FDFh
102+  0000              bios_vars   BIOS_VARIABLES = 8FDFh
103+  0000
104+  0000              ;-----------------------------------------------------------------------
105+  0000              ; Стандартные точки входа ОС
106+  0000              ; Отмеченные [OLD] применять не рекомендуется
107+  0000              ; Отмеченные [MXOS2] - новые в MXOS 2
108+  0000              ;-----------------------------------------------------------------------
109+  0000
110+  0000              bios_init               = 0C000h ; Теплая перезагрузка
111+  0000
112+  0000              ; Устаревшие точки, лечше не применять
113+  0000              bios_keyScanOld         = 0C003h ; [OLD] Получить код нажатой клавиши, = bios_keyScan
114+  0000              bios_drawCursorOld      = 0C006h ; [OLD] Нарисовать/стереть курсор
115+  0000              bios_clearScreenOld     = 0C010h ; [OLD] Оистка экрана
116+  0000              bios_printCharOld       = 0C037h ; [OLD] Вывод символа на экран
117+  0000              bios_beep_Old           = 0C170h ; [OLD] Звуковой сигнал
118+  0000              bios_delay_l            = 0C18Fh ; [OLD] Задержка l циклов
119+  0000              bios_delay_b            = 0C190h ; [OLD] Задержка b циклов
120+  0000              bios_getchOld           = 0C337h ; [OLD] Ожидание ввода с клавиатуры
121+  0000              bios_tapeReadOld        = 0C377h ; [OLD] Чтение байта с магнитофона
122+  0000              bios_tapeWriteOld       = 0C3D0h ; [OLD] Запись байта на магнитофон
123+  0000              bios_cmp_hl_de          = 0C427h ; [OLD] Сравнить hl и de
124+  0000              bios_memcpy_bc_hl       = 0C42Dh ; [OLD] Скопировать блок памяти
125+  0000              bios_printStringOld     = 0C438h ; [OLD] Вывод строки на экран
126+  0000
127+  0000              ; Стандартные точки C800h
128+  0000              bios_reboot             = 0C800h ; Запустить NC.COM
129+  0000              bios_getch              = 0C803h ; Ожидание ввода с клавиатуры
130+  0000              bios_tapeRead           = 0C806h ; Чтение байта с магнитофона
131+  0000              bios_printChar          = 0C809h ; Вывод символа на экран
132+  0000              bios_tapeWrite          = 0C80Ch ; Запись байта на магнитофон
133+  0000              bios_input              = 0C80Fh ; Ввод строки с клавиатуры
134+  0000              bios_keyCheck           = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
135+  0000              bios_printHexByte       = 0C815h ; Вывод HEX числа на экран (байт)
136+  0000              bios_printString        = 0C818h ; Вывод строки на экран
137+  0000              bios_keyScan            = 0C81Bh ; Получить код нажатой клавиши
138+  0000              bios_getCursorPos       = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
139+  0000              bios_setCursorPos       = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
140+  0000              bios_tapeLoad           = 0C824h ; Загрузить программу с магнитофона
141+  0000              bios_tapeSave           = 0C827h ; Сохранить программу на магнитофон
142+  0000              bios_calcCS             = 0C82Ah ; Расчет контрольной суммы
143+  0000              bios_printHexWord       = 0C82Dh ; Вывод HEX числа на экран (слово)
144+  0000              bios_getMemTop          = 0C830h ; Получить объем доступной памяти
145+  0000              bios_setMemTop          = 0C833h ; Установить объем доступной памяти
146+  0000              bios_printer            = 0C836h ; Напечатать байт на принтере
147+  0000                  IF RAMFOS_COMPATIBILITY
148+  0000              bios_strToHex           = 0C839h ; [MXOS2] Преобразвоние строки в HEX формате в число
149+  0000                  ELSE
150+  0000 ~            bios_rebootAlt          = 0C839h ; Запустить NC.COM
151+  0000                  ENDIF
152+  0000              bios_rebootAlt2         = 0C83Ch ; Запустить NC.COM
153+  0000              bios_fileList           = 0C83Fh ; Получить список файлов
154+  0000              bios_fileGetSetDrive    = 0C842h ; Получить/установить активное устройство
155+  0000              bios_fileCreate         = 0C845h ; Создать файл
156+  0000              bios_fileLoad           = 0C848h ; Загрузить файл по адресу из заголовка этого файла
157+  0000              bios_fileDelete         = 0C84Bh ; Удалить файл
158+  0000              bios_fileRename         = 0C84Eh ; Переименовать файл
159+  0000              bios_fileLoadInfo       = 0C851h ; Загрузить информацию о файле
160+  0000              bios_fileGetSetAddr     = 0C854h ; Получить/установить адрес загрузки файла
161+  0000              bios_fileGetSetAttr     = 0C857h ; Получить/установить атрибуты файла
162+  0000              bios_fileNamePrepare    = 0C85Ah ; Преобразовать имя файла во внутренний формат
163+  0000              bios_fileExec           = 0C85Dh ; Запустить файл
164+  0000              bios_installDriver      = 0C860h ; Установить драйвер накопителя
165+  0000              bios_diskDriver         = 0C863h ; Драйвер выбранного диска
166+  0000              bios_fileLoad2          = 0C866h ; Загрузить файл по адресу de
167+  0000
168+  0000              ; Новые точки C800h MXOS2
169+  0000              bios_printCharReal      = 0C869h ; [MXOS2] Вывод символа на экран (только реальные символы)
170+  0000              bios_printDecWord       = 0C86Ch ; [MXOS2] Вывод числа экран в десятичной форме
171+  0000              bios_setRAMDDriver      = 0C86Fh ; [MXOS2] Установить драйвр рам-диска
172+  0000              bios_getDriveFreeSpace  = 0C872h ; [MXOS2] Получить оставшийся свободный объем диска
173+  0000              bios_upperCase          = 0C875h ; [MXOS2] Перевод кода символа КОИ-8 в верхний регистр
174+  0000              bios_strcmp             = 0C878h ; [MXOS2] Сравнение строк, чувствительное к регистру
175+  0000              bios_stricmp            = 0C87Bh ; [MXOS2] Сравнение строк, нечувствительное к регистру
176+  0000              bios_sub_hl_de          = 0C87Eh ; [MXOS2] Вычитание hl и de: hl = hl - de
177+  0000              bios_div_hl_2           = 0C881h ; [MXOS2] Деление hl на 2: hl = hl / 2
178+  0000              bios_mul_hl_de          = 0C884h ; [MXOS2] Умножение hl на de: hl = hl * de
179+  0000              bios_div_hl_de          = 0C887h ; [MXOS2] Деление hl на de: hl = hl / de, de = hl % de
180+  0000
181+  0000              ;-----------------------------------------------------------------------
182+  0000              ; Адрес таблицы переходов драйвера магнитофона
183+  0000              ;-----------------------------------------------------------------------
184+  0000
185+  0000              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
186+  0000
187+  0000              ;-----------------------------------------------------------------------
188+  0000              ; Непереключаемое ОЗУ ПК "Специалист-MX" (0FFC0h-0FFDF, 32 байта)
189+  0000              ;-----------------------------------------------------------------------
190+  0000
191+  0000              bios_RAMDRead   = 0FFC0h ; п/п чтения из ДОЗУ
192+  0000              bios_RAMDWrite  = 0FFD0h ; п/п записи в  ДОЗУ
193+  0000
194+  0000              ;-----------------------------------------------------------------------
195+  0000              ; Порты устройств ПК "Специалист-MX2" (0FFE0h-0FFFF, 32 байта)
196+  0000              ;-----------------------------------------------------------------------
197+  0000
198+  0000              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
199+  0000              IO_KEYB_B       =  0FFE1h
200+  0000              IO_KEYB_C       =  0FFE2h
201+  0000              IO_KEYB_MODE    =  0FFE3h
202+  0000              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
203+  0000              IO_PROG_B       =  0FFE5h
204+  0000              IO_PROG_C       =  0FFE6h
205+  0000              IO_PROG_MODE    =  0FFE7h
206+  0000              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
207+  0000              IO_FDD_TRACK    =  0FFE9h
208+  0000              IO_FDD_SECTOR   =  0FFEAh
209+  0000              IO_FDD_DATA     =  0FFEBh
210+  0000              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
211+  0000              IO_TIMER_CH1    =  0FFEDh
212+  0000              IO_TIMER_CH2    =  0FFEEh
213+  0000              IO_TIMER_MODE   =  0FFEFh
214+  0000              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
215+  0000              IO_FDD_MOTOR    =  0FFF1h
216+  0000              IO_FDD_SIDE     =  0FFF2h
217+  0000              IO_FDD_DRIVE    =  0FFF3h
218+  0000              IO_COLOR        =  0FFF8h   ; регистр цвета
219+  0000              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
220+  0000              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
221+  0000              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
222+  0000              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
223+  0000
224+  0000              ;-----------------------------------------------------------------------
225+  0000              ; Структура файловой системы
226+  0000              ;-----------------------------------------------------------------------
227+  0000
228+  0000              ; Структура каталога
229+  0000              DIR_DESCR_SIZE  = 32    ; размер дескриптора файла в каталоге (байт)
230+  0000              DIR_NAME_LENGTH = 8     ; длина имени файла  (байт)
231+  0000              FAT_ITEM_SIZE   = 2     ; размер записи в таблице FAT (байт)
232+  0000
233+  0000              SECTOR_SIZE  = 00100h   ; размер сектора 256 байт
234+  0000              CLUSTER_SIZE = 00100h   ; размер кластера 256 байт
235+  0000
236+  0000              ; Специальные коды кластеров FAT
237+  0000              FAT12_BAD = 00FF7h  ; плохой кластер
238+  0000              FAT16_BAD = 0FFF7h
239+  0000              FAT12_EOC = 00FFFh  ; последний кластер файла
240+  0000              FAT16_EOC = 0FFFFh
241+  0000              FAT12_RES = 00FFFh  ; зарезервированный кластер
242+  0000              FAT16_RES = 0FFFFh
243+  0000
244+  0000              ;-----------------------------------------------------------------------
245+  0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
246+  0000              ;-----------------------------------------------------------------------
247+  0000
248+  0000                  STRUCT FILE_DESCRIPTOR  ; 32 байта
249+  0000 ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 8 байт  - имя файла
250+  0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
251+  0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
252+  0000 ~            ntReserved      BLOCK   1                   ; смещение 0Ch, 1 байт  - используются в Windows NT
253+  0000 ~            createTimeTenth BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
254+  0000 ~            createTime      BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
255+  0000 ~            createDate      BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
256+  0000 ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
257+  0000 ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
258+  0000 ~            writeTime       BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
259+  0000 ~            writeDate       BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
260+  0000 ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
261+  0000 ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
262+  0000                  ENDS
263+  0000
264+  0000              ;-----------------------------------------------------------------------
265+  0000              ; Информация о активном накопителе (диске)
266+  0000              ;-----------------------------------------------------------------------
267+  0000
268+  0000                  STRUCT DISK_INFO
269+  0000 ~            sectorSize          BLOCK   2   ; размер сектора, байт (256, 512, 1024)
270+  0000 ~            sectorsPerCluster   BLOCK   2   ; размер кластера, секторов (1, 2, 4, 8)
271+  0000 ~            resSectors          BLOCK   2   ; сколько секторов занимает зарезервированная область = первый сектор таблицы fat
272+  0000 ~            fatSectors          BLOCK   2   ; сколько секторов занимает таблица fat
273+  0000 ~            dirSectors          BLOCK   2   ; сколько секторов занимает корневой каталог
274+  0000 ~            totalSectors        BLOCK   2   ; сколько всего секторов на диске
275+  0000 ~            rootDirMaxFiles     BLOCK   2   ; максимум файлов в корневом каталоге
276+  0000 ~            descrPerSector      BLOCK   2   ; сколько дескрипторов файлов вмещается в один сектор
277+  0000 ~            fatNumCells         BLOCK   2   ; количество ячеек в таблице fat (= fatSectors * sectorSize / 2)
278+  0000 ~            dirStartSector      BLOCK   2   ; первый сектор корневого каталога
279+  0000 ~            dataStartSector     BLOCK   2   ; первый сектор области данных
280+  0000 ~            volumeLabel         BLOCK  12   ; метка тома и 0 в конце
281+  0000 ~            isValid             BLOCK   1   ; 0 = нет драйвера, 1 = диск не распознан, 2 = диск распознан, корректно отформатирован
282+  0000                  ENDS
283+  0000
284+  0000              DISK_NO_DRIVER = 0
285+  0000              DISK_INVALID   = 1
286+  0000              DISK_VALID     = 2
287+  0000
288+  0000              ;-----------------------------------------------------------------------
289+  0000              ; Буферы в памяти
290+  0000              ;-----------------------------------------------------------------------
291+  0000
292+  0000              ; Дисковый кэш
293+  0000              FAT_CACHE_ADDR = 0FB00h ; адрес кэша секторов fat в памяти
294+  0000              FAT_CACHE_SIZE = 1024   ; размер кэша в байтах
295+  0000              FAT_CACHE_CAPACITY = FAT_CACHE_SIZE / SECTOR_SIZE   ; сколько секторов вмещается в кэш
296+  0000
297+  0000              ; Буфер для загрузки BAT файла
298+  0000                  IF NEW_MEMORY_MAP
299+  0000              BAT_BUFFER = 0E800h
300+  0000                  ELSE
301+  0000 ~            BAT_BUFFER = 0FC00h
302+  0000                  ENDIF
303+  0000
304+  0000              ; Командная строка и стек
305+  0000              CMD_LINE   = 0FF00h  ; 192 байта, но в конце стек
306+  0000              STACK_ADDR = 0FFC0h  ; стек
307+  0000
308+  0000              ;-----------------------------------------------------------------------
309+  0000              ; Всякие полезности
310+  0000              ;-----------------------------------------------------------------------
311+  0000
312+  0000              ; Макрос для заполнения памяти от текущего адреса до указанного
313+  0000                  MACRO ORG_PAD adr
314+  0000 ~                     IF $ > adr
315+  0000 ~                       ; вывод сообщения об ошибке
316+  0000 ~                       ASSERT 0
317+  0000 ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
318+  0000 ~                     ELSE
319+  0000 ~                       ; заполнение памяти
320+  0000 ~                       BLOCK adr-$, 0FFh
321+  0000 ~                     ENDIF
322+  0000 ~                     ORG adr
323+  0000                  ENDM
324+  0000
325+  0000                  MACRO ORG_PAD0 adr
326+  0000 ~                     IF $ > adr
327+  0000 ~                       ; вывод сообщения об ошибке
328+  0000 ~                       ASSERT 0
329+  0000 ~                       DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
330+  0000 ~                     ELSE
331+  0000 ~                       ; заполнение памяти
332+  0000 ~                       BLOCK adr-$, 0
333+  0000 ~                     ENDIF
334+  0000 ~                     ORG adr
335+  0000                  ENDM
336+  0000
337+  0000              ; Макросы для проверки текущего адреса
338+  0000                  MACRO ASSERT_EQUAL adr
339+  0000 ~                     IF $ != adr
340+  0000 ~                       ASSERT 0
341+  0000 ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
342+  0000 ~                     ENDIF
343+  0000                  ENDM
344+  0000
345+  0000                  MACRO ASSERT_DONT_FIT adr
346+  0000 ~                     IF $ > adr
347+  0000 ~                       ASSERT 0
348+  0000 ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
349+  0000 ~                     ENDIF
350+  0000                  ENDM
351+  0000
352+  0000              ;-----------------------------------------------------------------------
353+  0000              ; Конец
354+  0000              ;-----------------------------------------------------------------------
355+  0000
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\../include/mxos.inc
  9   0000
 10   0000                  IF NEW_MEMORY_MAP
 11   0000                      ORG 0E800h
 12   0000                  ELSE
 13   0000 ~                    ORG 0D000h
 14   0000                  ENDIF
 15   E800
 16   E800              ; Конфигурация сборки
 17   E800
 18   E800              FILE_LIST_SIZE   = 36           ; Размер буфера для листинга директории (штук файлов)
 19   E800              FILE_LIST_BUFFER = 8000h        ; Адрес буфера для листинга директории (FILE_LIST_SIZE дескрипторов + 1 = 1153 байт)
 20   E800
 21   E800              ; Цвета
 22   E800
 23   E800              COLOR_CMDLINE    =  070h        ; Цвет командной строки
 24   E800              COLOR_CMDSCREEN  =  COLOR_BIOS  ; Цвет командного экрана (когда панели спрятаны)
 25   E800              COLOR_BORDER     =  0F1h        ; Цвет рамки
 26   E800              COLOR_PANELNAME  =  0A1h        ; Цвет заголовка панели (NAME)
 27   E800              COLOR_FILE       =  0B1h        ; Цвет файлов
 28   E800              COLOR_INFOLINE   =  0B1h        ; Цвет строки информации о текущем файле
 29   E800              COLOR_CURSOR     =  0B0h        ; Цвет курсора (инверсный)
 30   E800              COLOR_DIALOG     =  007h        ; Цвет окон диалогов F1-F9
 31   E800              COLOR_DIALOG_ERR =  047h        ; Цвет окна с сообщением об ошибке
 32   E800              COLOR_INFOHEADER =  0A1h        ; Заголовок информационной панели
 33   E800              COLOR_INFONUMBER =  0E1h        ; Цифры на информационной панели
 34   E800              COLOR_INFOTEXT   =  0F1h        ; Текст на информационной панели
 35   E800              COLOR_HELP_F     =  040h        ; Цвет функциональных клавиш в строке подсказки
 36   E800              COLOR_HELP_TEXT  =  071h        ; Цвет текста в строке подсказки
 37   E800
 38   E800              ;---------------------------------------------------------------------------
 39   E800              ; Макросы
 40   E800              ;---------------------------------------------------------------------------
 41   E800
 42   E800              ; Когда цвет включен, макрос вставляет такой код
 43   E800                  MACRO COLOR x
 44   E800 ~                    IF ENABLE_COLOR
 45   E800 ~                        ld a, x
 46   E800 ~                        ld (IO_COLOR), a
 47   E800 ~                    ENDIF
 48   E800                  ENDM
 49   E800
 50   E800              ; Макрос для нахождения координат строки длиной W, отцентрированной горизонтально
 51   E800                  MACRO CENTER_LINE w, y
 52   E800 ~                    ld  hl, ((60h - w * 3 / 2) << 8) + y
 53   E800 ~                    ld  (bios_vars.cursorY), hl
 54   E800                  ENDM
 55   E800
 56   E800              ;---------------------------------------------------------------------------
 57   E800              ; Код
 58   E800              ;---------------------------------------------------------------------------
 59   E800
 60   E800                  INCLUDE "start.inc"     ; Продолжается в main
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\start.inc
  1+  E800              ;----------------------------------------------------------------------------
  2+  E800              ; MXOS NC.COM
  3+  E800              ; Запуск
  4+  E800              ;
  5+  E800              ; 2013-12-18 Дизассемблировано vinxru
  6+  E800              ;----------------------------------------------------------------------------
  7+  E800
  8+  E800              Start:      ; Отключаем инверсию
  9+  E800 21 00 00                 ld      hl, 0
 10+  E803 22 FA 8F                 ld      (bios_vars.inverse), hl
 11+  E806
 12+  E806                          ; Загружаем состояние. Если ZF, значит, уже запускали NC.COM.
 13+  E806                          ; Иначе сохраняем состояние.
 14+  E806 CD 3E EA                 call    loadState
 15+  E809 CA 0F E8                 jp z,   formatCalled
 16+  E80C
 17+  E80C                          ; Сохраняем состояние
 18+  E80C CD 22 EA                 call    saveState
 19+  E80F
 20+  E80F              ; ---------------------------------------------------------------------------
 21+  E80F
 22+  E80F              formatCalled:
 23+  E80F                          ; Выводим строку с кнопками
 24+  E80F                          COLOR   COLOR_HELP_F
 24+  E80F             >        IF ENABLE_COLOR
 24+  E80F 3E 40       >            ld a, COLOR_HELP_F
 24+  E811 32 F8 FF    >            ld (IO_COLOR), a
 24+  E814             >        ENDIF
 25+  E814 0E 1F                    ld      c, 1Fh  ; очистка экрана
 26+  E816 CD 09 C8                 call    bios_printChar
 27+  E819 21 FF 01                 ld      hl, 1FFh
 28+  E81C 22 FC 8F                 ld      (bios_vars.cursorY), hl
 29+  E81F 21 4E F5                 ld      hl, aF1LeftF2RighF3
 30+  E822 CD 18 C8                 call    bios_printString
 31+  E825
 32+  E825                          ; Раскрашиваем строку с кнопками
 33+  E825                          COLOR   COLOR_HELP_TEXT
 33+  E825             >        IF ENABLE_COLOR
 33+  E825 3E 71       >            ld a, COLOR_HELP_TEXT
 33+  E827 32 F8 FF    >            ld (IO_COLOR), a
 33+  E82A             >        ENDIF
 34+  E82A 21 F7 92                 ld      hl, 92F7h
 35+  E82D 16 08                    ld      d, 8
 36+  E82F              loc_D049:
 37+  E82F 06 04                    ld      b, 4
 38+  E831 CD ED F0                 call    inverseRect     ; hl - адрес, b - ширина, высота 9
 39+  E834 24                       inc     h
 40+  E835 24                       inc     h
 41+  E836 15                       dec     d
 42+  E837 C2 2F E8                 jp nz,  loc_D049
 43+  E83A
 44+  E83A                          ; Очищаем командную строку
 45+  E83A CD 3A F0                 call    clearCmdLine
 46+  E83D
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\start.inc
 61   E83D                  INCLUDE "main.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\main.inc
  1+  E83D              ;----------------------------------------------------------------------------
  2+  E83D              ; MXOS NC.COM
  3+  E83D              ; Основной цикл
  4+  E83D              ;
  5+  E83D              ; 2013-12-18 Дизассемблировано vinxru
  6+  E83D              ;----------------------------------------------------------------------------
  7+  E83D
  8+  E83D              mainReload: ; Перерисовываем обе панели
  9+  E83D 3A B8 F7                 ld      a, (state.activePanel)
 10+  E840 A7                       and     a
 11+  E841 C2 4D E8                 jp      nz, mainReload_0
 12+  E844 CD 2C F1                 call    loadAndPrintA
 13+  E847 CD 1D F1                 call    loadAndPrintB
 14+  E84A C3 53 E8                 jp      mainDriveChanged
 15+  E84D
 16+  E84D              mainReload_0:
 17+  E84D CD 1D F1                 call    loadAndPrintB
 18+  E850 CD 2C F1                 call    loadAndPrintA
 19+  E853
 20+  E853              mainDriveChanged:
 21+  E853                          ; Вывод накопителя в ком строку
 22+  E853                          COLOR   COLOR_CMDLINE
 22+  E853             >        IF ENABLE_COLOR
 22+  E853 3E 70       >            ld a, COLOR_CMDLINE
 22+  E855 32 F8 FF    >            ld (IO_COLOR), a
 22+  E858             >        ENDIF
 23+  E858 21 F3 01                 ld      hl, 1F3h
 24+  E85B 22 FC 8F                 ld      (bios_vars.cursorY), hl
 25+  E85E 21 BB F7                 ld      hl, state.panelA_drive
 26+  E861 CD CA F3                 call    readBytePanel
 27+  E864 CD AE F3                 call    printDrive
 28+  E867
 29+  E867                          ; Вывод информации о файле
 30+  E867 CD 9B F0                 call    printInfoLine
 31+  E86A
 32+  E86A              mainLoop:   ; Рисуем курсор выбранного файла
 33+  E86A                          COLOR   COLOR_CURSOR
 33+  E86A             >        IF ENABLE_COLOR
 33+  E86A 3E B0       >            ld a, COLOR_CURSOR
 33+  E86C 32 F8 FF    >            ld (IO_COLOR), a
 33+  E86F             >        ENDIF
 34+  E86F CD 61 F0                 call    drawCursor
 35+  E872
 36+  E872                          ; Положение курсора в ком строке
 37+  E872 2A C3 F7                 ld      hl, (vars.cmdLinePos)
 38+  E875 22 FC 8F                 ld      (bios_vars.cursorY), hl
 39+  E878
 40+  E878                          ; Ждем нажатия клавиши
 41+  E878                          COLOR   COLOR_CMDLINE
 41+  E878             >        IF ENABLE_COLOR
 41+  E878 3E 70       >            ld a, COLOR_CMDLINE
 41+  E87A 32 F8 FF    >            ld (IO_COLOR), a
 41+  E87D             >        ENDIF
 42+  E87D CD 03 C8                 call    bios_getch
 43+  E880
 44+  E880                          ; Стираем курсор выбранного файла
 45+  E880 F5                       push    af
 46+  E881                          COLOR   COLOR_FILE
 46+  E881             >        IF ENABLE_COLOR
 46+  E881 3E B1       >            ld a, COLOR_FILE
 46+  E883 32 F8 FF    >            ld (IO_COLOR), a
 46+  E886             >        ENDIF
 47+  E886 CD 61 F0                 call    drawCursor
 48+  E889 F1                       pop     af
 49+  E88A
 50+  E88A                          ; Анализ нажатой клавиши
 51+  E88A 4F                       ld      c, a
 52+  E88B DA 26 E9                 jp c,   but_ctrl
 53+  E88E A7                       and     a     ; F1 (00h)
 54+  E88F CA 63 EE                 jp z,   but_F1
 55+  E892 3D                       dec     a     ; F2 (01h)
 56+  E893 CA 31 EE                 jp z,   but_F2
 57+  E896 3D                       dec     a     ; F3 (02h)
 58+  E897 CA 73 EF                 jp z,   but_F3
 59+  E89A 3D                       dec     a     ; F4 (03h)
 60+  E89B CA 76 E9                 jp z,   but_F4
 61+  E89E 3D                       dec     a     ; F5 (04h)
 62+  E89F CA 19 ED                 jp z,   but_F5
 63+  E8A2 3D                       dec     a     ; F6 (05h)
 64+  E8A3 CA AE EC                 jp z,   but_F6
 65+  E8A6 3D                       dec     a     ; F7 (06h)
 66+  E8A7 CA FA EA                 jp z,   but_F7
 67+  E8AA 3D                       dec     a     ; F8 (07h)
 68+  E8AB CA B6 ED                 jp z,   but_F8
 69+  E8AE 3D                       dec     a     ; стрелка влево (08h)
 70+  E8AF CA D6 EF                 jp z,   but_Left
 71+  E8B2 3D                       dec     a     ; Tab/Таб (09h)
 72+  E8B3 CA 50 EF                 jp z,   but_Tab
 73+  E8B6 3D                       dec     a     ; End/ПС (0Ah)
 74+  E8B7 CA EC EF                 jp z,   but_End
 75+  E8BA D6 02                    sub     2     ; Home/стрелка влево-вверх (0Ch)
 76+  E8BC CA E5 EF                 jp z,   but_Home
 77+  E8BF 3D                       dec     a     ; Enter/ВК (0Dh)
 78+  E8C0 CA 86 E9                 jp z,   but_Enter
 79+  E8C3 D6 0B                    sub     0Bh   ; стрелка вправо (18h)
 80+  E8C5 CA BE EF                 jp z,   but_Right
 81+  E8C8 3D                       dec     a     ; стрелка вверх (19h)
 82+  E8C9 CA B0 EF                 jp z,   but_Up
 83+  E8CC 3D                       dec     a     ; стрелка вниз (1Ah)
 84+  E8CD CA 9B EF                 jp z,   but_Down
 85+  E8D0 3D                       dec     a     ; Esc/АР2 (1Bh)
 86+  E8D1 CA 20 E9                 jp z,   but_Esc
 87+  E8D4 C6 1B                    add     1Bh
 88+  E8D6 FE 7F                    cp      7Fh   ; Del/ЗБ (7Fh)
 89+  E8D8 CA 05 E9                 jp z,   but_Bkspc
 90+  E8DB FE 8A                    cp      8Ah   ; F9 (8Ah)
 91+  E8DD CA F6 EB                 jp z,   but_F9
 92+  E8E0 FE 20        mainLoop_e: cp      20h   ; Пробел (20h)
 93+  E8E2 DA 6A E8                 jp c,   mainLoop
 94+  E8E5
 95+  E8E5                          ; Вывод символов в ком строку
 96+  E8E5 2A C5 F7                 ld      hl, (vars.cmdLineEnd)
 97+  E8E8 4F                       ld      c, a
 98+  E8E9 77                       ld      (hl), a
 99+  E8EA
100+  E8EA                          ; Если ком строка переполнена, выходим
101+  E8EA 3E 0B                    ld      a, vars.cmdLineCtrl & 0FFh
102+  E8EC BD                       cp      l
103+  E8ED CA 6A E8                 jp z,   mainLoop
104+  E8F0
105+  E8F0                          ; Увеличиваем длину
106+  E8F0 23                       inc     hl
107+  E8F1 22 C5 F7                 ld      (vars.cmdLineEnd), hl
108+  E8F4
109+  E8F4                          ; Выводим символ на экран
110+  E8F4                          COLOR   COLOR_CMDLINE
110+  E8F4             >        IF ENABLE_COLOR
110+  E8F4 3E 70       >            ld a, COLOR_CMDLINE
110+  E8F6 32 F8 FF    >            ld (IO_COLOR), a
110+  E8F9             >        ENDIF
111+  E8F9 CD 09 C8                 call    bios_printChar
112+  E8FC
113+  E8FC              mainLoop_savePos: ; ?
114+  E8FC 2A FC 8F                 ld      hl, (bios_vars.cursorY)
115+  E8FF 22 C3 F7                 ld      (vars.cmdLinePos), hl
116+  E902
117+  E902 C3 6A E8                 jp      mainLoop
118+  E905
119+  E905              ; ---------------------------------------------------------------------------
120+  E905
121+  E905              but_Bkspc:  ; Если ком строка пустая, выходим
122+  E905 2A C5 F7                 ld      hl, (vars.cmdLineEnd)
123+  E908 3E D0                    ld      a, vars.cmdLine & 0FFh
124+  E90A BD                       cp      l
125+  E90B CA 6A E8                 jp z,   mainLoop
126+  E90E
127+  E90E                          ; Удаляем один символ
128+  E90E 2B                       dec     hl
129+  E90F 22 C5 F7                 ld      (vars.cmdLineEnd), hl
130+  E912
131+  E912                          ; Стираем символ на экране
132+  E912                          COLOR   070h
132+  E912             >        IF ENABLE_COLOR
132+  E912 3E 70       >            ld a, 070h
132+  E914 32 F8 FF    >            ld (IO_COLOR), a
132+  E917             >        ENDIF
133+  E917 21 05 F6                 ld      hl, asc_DC17
134+  E91A CD 18 C8                 call    bios_printString
135+  E91D
136+  E91D C3 FC E8                 jp    mainLoop_savePos
137+  E920
138+  E920              ; ---------------------------------------------------------------------------
139+  E920
140+  E920 CD 3A F0     but_Esc:    call    clearCmdLine
141+  E923 C3 6A E8                 jp      mainLoop
142+  E926
143+  E926              ; ---------------------------------------------------------------------------
144+  E926
145+  E926 FE 0D        but_ctrl:   cp    0Dh
146+  E928 CA 2E E9                 jp z, ctrlEnter
147+  E92B C3 E0 E8                 jp    mainLoop_e
148+  E92E
149+  E92E              ; ---------------------------------------------------------------------------
150+  E92E
151+  E92E              ctrlEnter:  ; Если файл не выбран, выход
152+  E92E CD FF F0                 call    getSelectedFile
153+  E931 7E                       ld      a, (hl)
154+  E932 FE FF                    cp      0FFh
155+  E934 CA 6A E8                 jp z,   mainLoop
156+  E937
157+  E937 CD 5D E9                 call    selFileToCmdLine
158+  E93A C3 6A E8                 jp      mainLoop
159+  E93D
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\main.inc
 62   E93D                  INCLUDE "selFileToCmdLine.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\selFileToCmdLine.inc
  1+  E93D              ;----------------------------------------------------------------------------
  2+  E93D              ; MXOS NC.COM
  3+  E93D              ; Сформировать строку пути выбраного файла
  4+  E93D              ;
  5+  E93D              ; вход:
  6+  E93D              ;   hl - адрес дескриптора файла
  7+  E93D              ;
  8+  E93D              ; 2013-12-18 Дизассемблировано vinxru
  9+  E93D              ;----------------------------------------------------------------------------
 10+  E93D
 11+  E93D              getSelFilePath:
 12+  E93D EB                   ex      de, hl
 13+  E93E
 14+  E93E                      ; Получаем текущий накопитель
 15+  E93E 21 BB F7             ld      hl, state.panelA_drive
 16+  E941 CD CA F3             call    readBytePanel
 17+  E944 C6 41                add     'A'
 18+  E946
 19+  E946                      ; Выводим его в ком строку
 20+  E946 2A C5 F7             ld      hl, (vars.cmdLineEnd)
 21+  E949 77                   ld      (hl), a
 22+  E94A 23                   inc     hl
 23+  E94B
 24+  E94B                      ; Выводим двоеточние
 25+  E94B 36 3A                ld      (hl), ':'
 26+  E94D 23                   inc     hl
 27+  E94E
 28+  E94E                      ; Выводим имя файла
 29+  E94E EB                   ex      de, hl
 30+  E94F CD AB F4             call    compactName
 31+  E952
 32+  E952                      ; Ограничение длины
 33+  E952 1B                   dec     de
 34+  E953 3E 0B                ld      a, vars.cmdLineCtrl & 0FFh
 35+  E955 BB                   cp      e
 36+  E956 D2 5A E9             jp nc,  loc_D146
 37+  E959 5F                   ld      e, a
 38+  E95A              loc_D146:
 39+  E95A                      ; Терминатор
 40+  E95A AF                   xor     a
 41+  E95B 12                   ld      (de), a
 42+  E95C C9                   ret
 43+  E95D
 44+  E95D              ;----------------------------------------------------------------------------
 45+  E95D              ; MXOS NC.COM
 46+  E95D              ; Поместить выбранный файл в ком строку
 47+  E95D              ;
 48+  E95D              ; вход:
 49+  E95D              ;   hl - адрес дескриптора файла
 50+  E95D              ;
 51+  E95D              ; 2013-12-18 Дизассемблировано vinxru
 52+  E95D              ;----------------------------------------------------------------------------
 53+  E95D
 54+  E95D              selFileToCmdLine:
 55+  E95D CD 3D E9             call    getSelFilePath
 56+  E960
 57+  E960                      ; Вывод
 58+  E960                      COLOR   COLOR_CMDLINE
 58+  E960             >        IF ENABLE_COLOR
 58+  E960 3E 70       >            ld a, COLOR_CMDLINE
 58+  E962 32 F8 FF    >            ld (IO_COLOR), a
 58+  E965             >        ENDIF
 59+  E965 2A C5 F7             ld      hl, (vars.cmdLineEnd)
 60+  E968 CD 18 C8             call    bios_printString
 61+  E96B
 62+  E96B                      ; Дописываем имя файла
 63+  E96B EB                   ex      de, hl
 64+  E96C 22 C5 F7             ld      (vars.cmdLineEnd), hl
 65+  E96F
 66+  E96F                      ; Сохраняем новое положение
 67+  E96F 2A FC 8F             ld      hl, (bios_vars.cursorY)
 68+  E972 22 C3 F7             ld      (vars.cmdLinePos), hl
 69+  E975 C9                   ret
 70+  E976
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\selFileToCmdLine.inc
 63   E976                  INCLUDE "butF4.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF4.inc
  1+  E976              ;----------------------------------------------------------------------------
  2+  E976              ; MXOS NC.COM
  3+  E976              ; Клавиша F4 - запуск редактора
  4+  E976              ;
  5+  E976              ; 2013-12-18 Дизассемблировано vinxru
  6+  E976              ;----------------------------------------------------------------------------
  7+  E976
  8+  E976              but_F4: ; Получение кол-ва файлов
  9+  E976 21 BD F7             ld      hl, state.panelA_filesCnt
 10+  E979 CD CA F3             call    readBytePanel
 11+  E97C
 12+  E97C                      ; Если файлов нет, выходим
 13+  E97C A7                   and     a
 14+  E97D CA 6A E8             jp z,   mainLoop
 15+  E980
 16+  E980                      ; Запуск редактора
 17+  E980 11 53 F7             ld      de, aEditor   ; "A:E.COM\r"
 18+  E983 C3 CA E9             jp      Enter_5
 19+  E986
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF4.inc
 64   E986                  INCLUDE "butEnter.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butEnter.inc
  1+  E986              ;----------------------------------------------------------------------------
  2+  E986              ; MXOS NC.COM
  3+  E986              ; Клавиша ENTER
  4+  E986              ;
  5+  E986              ; 2013-12-18 Дизассемблировано vinxru
  6+  E986              ;----------------------------------------------------------------------------
  7+  E986
  8+  E986              but_Enter:  ; Если ком строка не пустая
  9+  E986 2A C5 F7                 ld      hl, (vars.cmdLineEnd)
 10+  E989 3E D0                    ld      a, vars.cmdLine & 0FFh
 11+  E98B BD                       cp      l
 12+  E98C C2 FB E9                 jp nz,  EnterCmdLine
 13+  E98F
 14+  E98F                          ; Запомнить текущий диск в регистре b
 15+  E98F 1E 00                    ld      e, 0
 16+  E991 CD 42 C8                 call    bios_fileGetSetDrive
 17+  E994 47                       ld      b, a
 18+  E995
 19+  E995                          ; Подготовить имя файла A:NC.EXT
 20+  E995 21 4A F7                 ld      hl, aNcExt
 21+  E998 11 39 F8                 ld      de, vars.tempFileDescr; vars.tempFileDescr используется как буфер
 22+  E99B CD 5A C8                 call    bios_fileNamePrepare
 23+  E99E EB                       ex      de, hl
 24+  E99F
 25+  E99F                          ; Загрузить файл A:NC.EXT по адресу 0
 26+  E99F 21 39 F8                 ld      hl, vars.tempFileDescr
 27+  E9A2 11 00 00                 ld      de, 0
 28+  E9A5 0E 01                    ld      c, 1
 29+  E9A7 CD 54 C8                 call    bios_fileGetSetAddr ; изменить адрес загрузки файла на de = 0
 30+  E9AA CD 48 C8                 call    bios_fileLoad
 31+  E9AD DA F0 E9                 jp c,   Enter_stdExec
 32+  E9B0
 33+  E9B0                          ; Переключить диск обратно
 34+  E9B0                          ;mov    a, b
 35+  E9B0                          ;mvi    e, 1
 36+  E9B0                          ;call   bios_fileGetSetDrive
 37+  E9B0
 38+  E9B0                          ; Получить имя выбранного файла
 39+  E9B0 CD FF F0                 call    getSelectedFile
 40+  E9B3 7E                       ld      a, (hl)
 41+  E9B4 3C                       inc     a
 42+  E9B5 CA 6A E8                 jp z,   mainLoop ; Ничего не выбрано
 43+  E9B8
 44+  E9B8                          ; hl = указатель на расширение файла
 45+  E9B8 11 08 00                 ld      de, FILE_DESCRIPTOR.ext
 46+  E9BB 19                       add     hl, de
 47+  E9BC
 48+  E9BC 11 00 00                 ld      de, 0
 49+  E9BF
 50+  E9BF                          ; Сравниваем с расширеним из файла,
 51+  E9BF                          ; нечувствительно к регистру
 52+  E9BF              Enter_extLoop:
 53+  E9BF E5                       push    hl
 54+  E9C0 0E 03                    ld      c, 3
 55+  E9C2 CD 7B C8                 call    bios_stricmp
 56+  E9C5 C2 13 EA                 jp nz,  Enter_nextExt
 57+  E9C8
 58+  E9C8                          ; Найдено расширение
 59+  E9C8 E1                       pop     hl
 60+  E9C9 13                       inc     de
 61+  E9CA
 62+  E9CA                          ; Копирование имени выбранного файла в ком строку
 63+  E9CA              Enter_5:
 64+  E9CA 21 D0 F7                 ld      hl, vars.cmdLine
 65+  E9CD              Enter_4:
 66+  E9CD 1A                       ld      a, (de)
 67+  E9CE 77                       ld      (hl),a
 68+  E9CF FE 0D                    cp      0Dh
 69+  E9D1 CA DD E9                 jp z,   Enter_3
 70+  E9D4 3C                       inc     a
 71+  E9D5 CA DD E9                 jp z,   Enter_3
 72+  E9D8 23                       inc     hl
 73+  E9D9 13                       inc     de
 74+  E9DA C3 CD E9                 jp      Enter_4
 75+  E9DD
 76+  E9DD              ; ---------------------------------------------------------------------------
 77+  E9DD
 78+  E9DD              Enter_3:
 79+  E9DD 36 20                    ld      (hl), ' '
 80+  E9DF 23                       inc     hl
 81+  E9E0 36 00                    ld      (hl), 0
 82+  E9E2 22 C5 F7                 ld      (vars.cmdLineEnd), hl
 83+  E9E5
 84+  E9E5                          ; Вывод командной строки на экран
 85+  E9E5                          COLOR   COLOR_CMDSCREEN
 85+  E9E5             >        IF ENABLE_COLOR
 85+  E9E5 3E F0       >            ld a, COLOR_CMDSCREEN
 85+  E9E7 32 F8 FF    >            ld (IO_COLOR), a
 85+  E9EA             >        ENDIF
 86+  E9EA 21 D0 F7                 ld      hl, vars.cmdLine
 87+  E9ED CD 18 C8                 call    bios_printString
 88+  E9F0
 89+  E9F0              Enter_stdExec:
 90+  E9F0                          ; Получить выбранный файл
 91+  E9F0 CD FF F0                 call     getSelectedFile
 92+  E9F3
 93+  E9F3                          ; Ничего не выбрано
 94+  E9F3 7E                       ld      a, (hl)
 95+  E9F4 3C                       inc     a
 96+  E9F5 CA 6A E8                 jp z,   mainLoop
 97+  E9F8
 98+  E9F8                          ; ?
 99+  E9F8 CD 5D E9                 call    selFileToCmdLine
100+  E9FB
101+  E9FB              EnterCmdLine:
102+  E9FB                          ; Очистка экрана
103+  E9FB                          COLOR   COLOR_CMDSCREEN
103+  E9FB             >        IF ENABLE_COLOR
103+  E9FB 3E F0       >            ld a, COLOR_CMDSCREEN
103+  E9FD 32 F8 FF    >            ld (IO_COLOR), a
103+  EA00             >        ENDIF
104+  EA00 0E 1F                    ld      c, 1Fh
105+  EA02 CD 09 C8                 call    bios_printChar
106+  EA05
107+  EA05                          ; Помещаем в конец ком строки 0Dh
108+  EA05 2A C5 F7                 ld      hl, (vars.cmdLineEnd)
109+  EA08 36 0D                    ld      (hl), 0Dh
110+  EA0A
111+  EA0A                          ; Сохраняем состояние
112+  EA0A CD 22 EA                 call    saveState
113+  EA0D
114+  EA0D                          ; Запускаем файл
115+  EA0D 21 D0 F7                 ld      hl, vars.cmdLine
116+  EA10 C3 5D C8                 jp      bios_fileExec
117+  EA13
118+  EA13              ; ---------------------------------------------------------------------------
119+  EA13
120+  EA13              Enter_nextExt:
121+  EA13 E1                       pop     hl
122+  EA14
123+  EA14              Enter_2:
124+  EA14 1A                       ld      a, (de)
125+  EA15 13                       inc     de
126+  EA16 FE 0D                    cp      0Dh
127+  EA18 CA BF E9                 jp z,   Enter_extLoop
128+  EA1B 3C                       inc     a
129+  EA1C C2 14 EA                 jp      nz, Enter_2
130+  EA1F C3 F0 E9                 jp      Enter_stdExec
131+  EA22
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butEnter.inc
 65   EA22                  INCLUDE "saveLoadState.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\saveLoadState.inc
  1+  EA22              ;----------------------------------------------------------------------------
  2+  EA22              ; MXOS NC.COM
  3+  EA22              ; Cохранение состояния в ДОЗУ
  4+  EA22              ;
  5+  EA22              ; 2013-12-18 Дизассемблировано vinxru
  6+  EA22              ;----------------------------------------------------------------------------
  7+  EA22
  8+  EA22              saveState:
  9+  EA22                          ; Устанавливаем побайтовый драйвер
 10+  EA22 06 01                    ld      b, 1
 11+  EA24 CD 6F C8                 call    bios_setRAMDDriver
 12+  EA27
 13+  EA27 11 B7 F7                 ld      de, state           ; откуда (в ОЗУ)
 14+  EA2A 21 00 FF                 ld      hl, 0FF00h          ; куда (в ДОЗУ)
 15+  EA2D 06 0C                    ld      b,  stateEnd-state  ; сколько байт
 16+  EA2F
 17+  EA2F              saveStateLoop:
 18+  EA2F 1A                       ld      a, (de)
 19+  EA30 4F                       ld      c, a                ; записываемый байт в c
 20+  EA31 AF                       xor     a                   ; 0 страница ДОЗУ
 21+  EA32 CD D0 FF                 call    bios_RAMDWrite
 22+  EA35 23                       inc     hl
 23+  EA36 13                       inc     de
 24+  EA37 05                       dec     b
 25+  EA38 C2 2F EA                 jp nz,  saveStateLoop
 26+  EA3B
 27+  EA3B                          ; Восстанавливаем блочный драйвер
 28+  EA3B                          ; b уже 0 здесь
 29+  EA3B C3 6F C8                 jp      bios_setRAMDDriver
 30+  EA3E
 31+  EA3E
 32+  EA3E              ;----------------------------------------------------------------------------
 33+  EA3E              ; MXOS NC.COM
 34+  EA3E              ; Загрузка состояния из ДОЗУ
 35+  EA3E              ;
 36+  EA3E              ; выход:
 37+  EA3E              ;   флаг  z, если в ДОЗУ есть метка "запускалось"
 38+  EA3E              ;   флаг nz, если в ДОЗУ нет  метки "запускалось"
 39+  EA3E              ;   Дравер не восстанавливается!
 40+  EA3E              ;
 41+  EA3E              ; 2022-02-02 SpaceEngineer
 42+  EA3E              ;----------------------------------------------------------------------------
 43+  EA3E
 44+  EA3E              loadState:
 45+  EA3E                          ; Устанавливаем побайтовый драйвер
 46+  EA3E 06 01                    ld      b, 1
 47+  EA40 CD 6F C8                 call    bios_setRAMDDriver
 48+  EA43
 49+  EA43                          ; Если в рам-диске по адресу 0FF00h (последний неполный сектор)
 50+  EA43                          ; нет специальной метки, значит, не запускали форматирование.
 51+  EA43 21 00 FF                 ld      hl, 0FF00h          ; адрес в странице
 52+  EA46 AF                       xor     a                   ; 0 страница ДОЗУ
 53+  EA47 CD C0 FF                 call    bios_RAMDRead
 54+  EA4A 79                       ld      a, c                ; считанный байт в c
 55+  EA4B FE 5A                    cp      5Ah
 56+  EA4D C0                       ret nz                      ; метки нет - выходим с флагом nz
 57+  EA4E
 58+  EA4E                          ; Иначе загружаем состояние
 59+  EA4E 11 B7 F7                 ld      de, state           ; куда (в ОЗУ)
 60+  EA51 21 00 FF                 ld      hl, 0FF00h          ; откуда (в ДОЗУ)
 61+  EA54 06 0C                    ld      b,  stateEnd-state  ; сколько байт байт
 62+  EA56
 63+  EA56              loadStateLoop:
 64+  EA56 AF                       xor     a                   ; 0 страница ДОЗУ
 65+  EA57 CD C0 FF                 call    bios_RAMDRead
 66+  EA5A 79                       ld      a, c                ; считанный байт в c
 67+  EA5B 12                       ld      (de), a
 68+  EA5C 23                       inc     hl
 69+  EA5D 13                       inc     de
 70+  EA5E 05                       dec     b
 71+  EA5F C2 56 EA                 jp nz,  loadStateLoop
 72+  EA62
 73+  EA62                          ; Восстанавливаем блочный драйвер
 74+  EA62                          ; b уже 0 здесь
 75+  EA62 CD 6F C8                 call    bios_setRAMDDriver
 76+  EA65
 77+  EA65 AF                       xor     a   ; для выхода с флагом z
 78+  EA66 C9                       ret
 79+  EA67
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\saveLoadState.inc
 66   EA67                  INCLUDE "drawWindow.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawWindow.inc
  1+  EA67              ;----------------------------------------------------------------------------
  2+  EA67              ; MXOS NC.COM
  3+  EA67              ; Рисование окошек
  4+  EA67              ;
  5+  EA67              ; 2013-12-18 Дизассемблировано vinxru
  6+  EA67              ;----------------------------------------------------------------------------
  7+  EA67
  8+  EA67              drawWindowIfSel:; Получить кол-во файлов
  9+  EA67 21 BD F7             ld      hl, state.panelA_filesCnt
 10+  EA6A CD CA F3             call    readBytePanel
 11+  EA6D
 12+  EA6D                      ; Если файлов нет, выходим
 13+  EA6D A7                   and     a
 14+  EA6E E1                   pop     hl ; Адрес возврата
 15+  EA6F CA 53 E8             jp z,   mainDriveChanged
 16+  EA72 E5                   push    hl
 17+  EA73
 18+  EA73
 19+  EA73              ; ---------------------------------------------------------------------------
 20+  EA73
 21+  EA73              drawWindow1:
 22+  EA73                      COLOR   COLOR_DIALOG
 22+  EA73             >        IF ENABLE_COLOR
 22+  EA73 3E 07       >            ld a, COLOR_DIALOG
 22+  EA75 32 F8 FF    >            ld (IO_COLOR), a
 22+  EA78             >        ENDIF
 23+  EA78
 24+  EA78                      ; Рисуем окно
 25+  EA78 21 9F F7             ld      hl, g_window1
 26+  EA7B CD 15 F4             call    draw
 27+  EA7E
 28+  EA7E                      ; Рисуем прямоугольник
 29+  EA7E 21 66 9F             ld      hl, 9F66h   ; x=120 y=102
 30+  EA81 06 12                ld      b, 18       ; w=144 h=9
 31+  EA83 C3 ED F0             jp      inverseRect
 32+  EA86
 33+  EA86              ; ---------------------------------------------------------------------------
 34+  EA86
 35+  EA86              drawWindow2:
 36+  EA86                      COLOR   COLOR_DIALOG
 36+  EA86             >        IF ENABLE_COLOR
 36+  EA86 3E 07       >            ld a, COLOR_DIALOG
 36+  EA88 32 F8 FF    >            ld (IO_COLOR), a
 36+  EA8B             >        ENDIF
 37+  EA8B
 38+  EA8B                      ; Рисуем окно
 39+  EA8B 21 AB F7             ld      hl, g_window2
 40+  EA8E CD 15 F4             call    draw
 41+  EA91
 42+  EA91                      ; Рисуем прямоугольник
 43+  EA91 21 88 9E             ld      hl, 9E88h   ; x=112 y=136
 44+  EA94 06 14                ld      b, 20       ; w=160 h=9
 45+  EA96 C3 ED F0             jp      inverseRect
 46+  EA99
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawWindow.inc
 67   EA99                  INCLUDE "printStringInv.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printStringInv.inc
  1+  EA99              ;----------------------------------------------------------------------------
  2+  EA99              ; MXOS NC.COM
  3+  EA99              ; Вывод инверсной строки
  4+  EA99              ;
  5+  EA99              ; 2013-12-18 Дизассемблировано vinxru
  6+  EA99              ;----------------------------------------------------------------------------
  7+  EA99
  8+  EA99 3E 01        printStringInv:   ld    a, 1
  9+  EA9B 32 FA 8F                 ld    (bios_vars.inverse),a
 10+  EA9E CD 18 C8                 call  bios_printString
 11+  EAA1 AF                       xor   a
 12+  EAA2 32 FA 8F                 ld    (bios_vars.inverse),a
 13+  EAA5 C9                       ret
 14+  EAA6
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printStringInv.inc
 68   EAA6                  INCLUDE "inputForCopyMove.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inputForCopyMove.inc
  1+  EAA6              ;----------------------------------------------------------------------------
  2+  EAA6              ; MXOS NC.COM
  3+  EAA6              ; Ввод строки в которой изначально содержится имя выбранного файла
  4+  EAA6              ;
  5+  EAA6              ; 2013-12-18 Дизассемблировано vinxru
  6+  EAA6              ;----------------------------------------------------------------------------
  7+  EAA6
  8+  EAA6              inputForCopyMove:
  9+  EAA6                          ; Положение курсора
 10+  EAA6 21 6E 3D                 ld      hl, 3D6Eh
 11+  EAA9 22 FC 8F                 ld      (bios_vars.cursorY), hl
 12+  EAAC
 13+  EAAC                          ; Строка для редактирования
 14+  EAAC 11 19 F8                 ld      de, vars.input
 15+  EAAF
 16+  EAAF                          ; Отображается ли панель?
 17+  EAAF 21 B9 F7                 ld      hl, state.panelA_info
 18+  EAB2 3A B8 F7                 ld      a, (state.activePanel)
 19+  EAB5 A7                       and     a
 20+  EAB6 C2 BA EA                 jp nz,      loc_D255
 21+  EAB9 23                       inc     hl
 22+  EABA 7E           loc_D255:   ld      a, (hl)
 23+  EABB
 24+  EABB                          ; Если не отображается, то накопитель в стркоу не помещать
 25+  EABB A7                       and     a
 26+  EABC C2 CA EA                 jp nz,      loc_D265
 27+  EABF
 28+  EABF                          ; Записываем букву накопителя
 29+  EABF 23                       inc     hl
 30+  EAC0 23                       inc     hl
 31+  EAC1 7E                       ld      a, (hl)
 32+  EAC2 C6 41                    add     'A'
 33+  EAC4 12                       ld      (de),a
 34+  EAC5 13                       inc     de
 35+  EAC6
 36+  EAC6                          ; Записываем ':'
 37+  EAC6 3E 3A                    ld      a, ':'
 38+  EAC8 12                       ld      (de),a
 39+  EAC9 13                       inc     de
 40+  EACA
 41+  EACA              loc_D265:   ; Записать выбранный файл
 42+  EACA CD FF F0                 call    getSelectedFile
 43+  EACD CD AB F4                 call    compactName
 44+  EAD0
 45+  EAD0                          ; Записать терминатор
 46+  EAD0 1B                       dec     de  ; compactName добавляет в конец строки ' ', 0Dh
 47+  EAD1 1B                       dec     de
 48+  EAD2 AF                       xor     a
 49+  EAD3 12                       ld      (de),a
 50+  EAD4
 51+  EAD4                          ; Перейти к редакированию
 52+  EAD4 C3 E8 F4                 jp      input
 53+  EAD7
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inputForCopyMove.inc
 69   EAD7                  INCLUDE "printSelDrive.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSelDrive.inc
  1+  EAD7              ;----------------------------------------------------------------------------
  2+  EAD7              ; MXOS NC.COM
  3+  EAD7              ; Вывод текущего накопителя
  4+  EAD7              ;
  5+  EAD7              ; 2013-12-18 Дизассемблировано vinxru
  6+  EAD7              ;----------------------------------------------------------------------------
  7+  EAD7
  8+  EAD7              ; Печать буквы активного диска
  9+  EAD7
 10+  EAD7 21 BB F7     printSelDrive:    ld    hl, state.panelA_drive
 11+  EADA CD CA F3                 call  readBytePanel
 12+  EADD C3 AE F3                 jp    printDrive
 13+  EAE0
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSelDrive.inc
 70   EAE0                  INCLUDE "butF7.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF7.inc
  1+  EAE0              ;----------------------------------------------------------------------------
  2+  EAE0              ; MXOS NC.COM
  3+  EAE0              ; Клавиша F7. Загрузка файла с ленты на накопитель
  4+  EAE0              ;
  5+  EAE0              ; 2013-12-18 Дизассемблировано vinxru
  6+  EAE0              ;----------------------------------------------------------------------------
  7+  EAE0
  8+  EAE0              ; Сохранение sp   и установка обр   ошибок.
  9+  EAE0
 10+  EAE0              prepareTapeLoad:
 11+  EAE0 21 00 00                 ld          hl, 0
 12+  EAE3 39                       add         hl, sp
 13+  EAE4 23                       inc         hl
 14+  EAE5 23                       inc         hl
 15+  EAE6 22 CA F7                 ld          (vars.savedSP), hl
 16+  EAE9
 17+  EAE9 21 E9 EB                 ld          hl, tapeErrorHandler
 18+  EAEC 22 E1 8F                 ld          (bios_vars.tapeError), hl
 19+  EAEF
 20+  EAEF 3E 0F                    ld          a, 0Fh
 21+  EAF1 32 E2 FF                 ld          (IO_KEYB_C),a
 22+  EAF4 3E FE                    ld          a, 0FEh
 23+  EAF6 32 E0 FF                 ld          (IO_KEYB_A),a
 24+  EAF9 C9                       ret
 25+  EAFA
 26+  EAFA              ; ---------------------------------------------------------------------------
 27+  EAFA
 28+  EAFA              but_F7:     ; Рисуем окно
 29+  EAFA CD 73 EA                 call        drawWindow1
 30+  EAFD
 31+  EAFD                          ; Выводим "LOADING FROM TAPE TO A:"
 32+  EAFD                          CENTER_LINE 23, 5Eh
 32+  EAFD 21 5E 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 5Eh
 32+  EB00 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 33+  EB03 21 1C F7                 ld          hl, aLoadingFromTapeTo
 34+  EB06 CD 18 C8                 call        bios_printString
 35+  EB09 CD D7 EA                 call        printSelDrive
 36+  EB0C
 37+  EB0C                          ; Сохранение sp и установка обработчика ошибок
 38+  EB0C CD E0 EA                 call        prepareTapeLoad
 39+  EB0F
 40+  EB0F              loc_D2AA:
 41+  EB0F                          ; Ждем пилот и D9 D9 D9
 42+  EB0F 3E FF                    ld          a, 0FFh
 43+  EB11 0E 03                    ld          c, 3
 44+  EB13 C3 18 EB                 jp          loc_D2B3
 45+  EB16              loc_D2B1:
 46+  EB16 3E 08                    ld          a, 8
 47+  EB18              loc_D2B3:
 48+  EB18 CD 06 C8                 call        bios_tapeRead
 49+  EB1B FE D9                    cp          0D9h
 50+  EB1D C2 0F EB                 jp nz,      loc_D2AA
 51+  EB20 0D                       dec c
 52+  EB21 C2 16 EB                 jp nz,      loc_D2B1
 53+  EB24
 54+  EB24                          ; Читаем имя
 55+  EB24 21 39 F8                 ld          hl, vars.tempFileDescr
 56+  EB27 54                       ld          d, h
 57+  EB28 5D                       ld          e, l
 58+  EB29 0E 0B                    ld          c, DIR_NAME_LENGTH + 3 ; старый формат файла 9 символов, новый - DIR_NAME_LENGTH + 3 символов
 59+  EB2B              loc_D2C6:
 60+  EB2B 3E 08                    ld          a, 8
 61+  EB2D CD 06 C8                 call        bios_tapeRead
 62+  EB30 FE 20                    cp          ' '
 63+  EB32 DA DF EB                 jp c,       tapeReadAppendName
 64+  EB35 77                       ld          (hl), a
 65+  EB36 23                       inc         hl
 66+  EB37 0D                       dec         c
 67+  EB38 C2 2B EB                 jp nz,      loc_D2C6
 68+  EB3B
 69+  EB3B              loc_D2D6:
 70+  EB3B 36 00                    ld         (hl), 0 ; обнуляем байт атрибута в дескрипторе файла
 71+  EB3D
 72+  EB3D CD A3 ED                 call        printInvFile
 73+  EB40
 74+  EB40                          ; Пропускаем пилот и читаем начальный адрес загрузки
 75+  EB40 3E FF                    ld          a, 0FFh
 76+  EB42 CD D4 EB                 call        tapeReadWord2
 77+  EB45 22 CC F7                 ld          (vars.tapeLoadAddr), hl
 78+  EB48
 79+  EB48                          ; Читаем конечный адрес загрузки
 80+  EB48 EB                       ex          de, hl
 81+  EB49 CD D2 EB                 call        tapeReadWord
 82+  EB4C
 83+  EB4C                          ; Считаем размер файла (hl = hl - de)
 84+  EB4C 7D                       ld          a, l
 85+  EB4D 93                       sub         e
 86+  EB4E 6F                       ld          l, a
 87+  EB4F 7C                       ld          a, h
 88+  EB50 9A                       sbc         d
 89+  EB51 67                       ld          h, a
 90+  EB52 22 55 F8                 ld          (vars.tempFileDescr.size), hl
 91+  EB55
 92+  EB55                          ; Читаем данные по адресу 0000
 93+  EB55 23                       inc         hl
 94+  EB56 EB                       ex          de, hl
 95+  EB57 21 00 00                 ld          hl, 0
 96+  EB5A 22 4B F8                 ld          (vars.tempFileDescr.loadAddress), hl
 97+  EB5D 3E 08        loc_D2F8:   ld          a, 8
 98+  EB5F CD 06 C8                 call        bios_tapeRead
 99+  EB62 77                       ld          (hl), a
100+  EB63 23                       inc         hl
101+  EB64 1B                       dec         de
102+  EB65 7A                       ld          a, d
103+  EB66 B3                       or          e
104+  EB67 C2 5D EB                 jp nz,      loc_D2F8
105+  EB6A
106+  EB6A                          ; Чиаем CRC
107+  EB6A CD D2 EB                 call        tapeReadWord
108+  EB6D 22 C8 F7                 ld          (vars.tapeSaveCRC), hl
109+  EB70
110+  EB70                          ; Считаем CRC
111+  EB70 2A 55 F8                 ld          hl, (vars.tempFileDescr.size)
112+  EB73 EB                       ex          de, hl
113+  EB74 21 00 00                 ld          hl, 0
114+  EB77 19                       add         hl, de
115+  EB78 EB                       ex          de, hl
116+  EB79 21 00 00                 ld          hl, 0
117+  EB7C CD 2A C8                 call        bios_calcCS
118+  EB7F 2A C8 F7                 ld          hl, (vars.tapeSaveCRC)
119+  EB82
120+  EB82                          ; Если расчетный CRC не равен реальному, выходим
121+  EB82 78                       ld          a, b
122+  EB83 BC                       cp          h
123+  EB84 C2 A2 EB                 jp nz,      F7_crcError
124+  EB87 79                       ld          a, c
125+  EB88 BD                       cp          l
126+  EB89 C2 A2 EB                 jp nz,      F7_crcError
127+  EB8C
128+  EB8C                          ; Соханяем файл на текущий диск
129+  EB8C CD 98 EB                 call        F7_saveFile
130+  EB8F
131+  EB8F                          ; Перерисовываем экран и продолжаем загрузку
132+  EB8F CD 2C F1                 call        loadAndPrintA
133+  EB92 CD 1D F1                 call        loadAndPrintB
134+  EB95 C3 FA EA                 jp          but_F7
135+  EB98
136+  EB98              ; ---------------------------------------------------------------------------
137+  EB98
138+  EB98              F7_saveFile:
139+  EB98 2A CC F7                 ld          hl, (vars.tapeLoadAddr)
140+  EB9B E5                       push        hl
141+  EB9C 21 39 F8                 ld          hl, vars.tempFileDescr
142+  EB9F C3 59 ED                 jp          saveFileInt
143+  EBA2
144+  EBA2              ; ---------------------------------------------------------------------------
145+  EBA2
146+  EBA2              F7_crcError:
147+  EBA2 CD 86 EA                 call        drawWindow2
148+  EBA5
149+  EBA5                          ; Вывод "ERROR LOADING FROM TAPE"
150+  EBA5                          COLOR       COLOR_DIALOG_ERR
150+  EBA5             >        IF ENABLE_COLOR
150+  EBA5 3E 47       >            ld a, COLOR_DIALOG_ERR
150+  EBA7 32 F8 FF    >            ld (IO_COLOR), a
150+  EBAA             >        ENDIF
151+  EBAA                          CENTER_LINE 23, 80h
151+  EBAA 21 80 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 80h
151+  EBAD 22 FC 8F    >        ld  (bios_vars.cursorY), hl
152+  EBB0 21 32 F7                 ld          hl, aErrorLoadingTa
153+  EBB3 CD 18 C8                 call        bios_printString
154+  EBB6
155+  EBB6                          ; Вывод строки из vars.input
156+  EBB6                          COLOR       COLOR_DIALOG
156+  EBB6             >        IF ENABLE_COLOR
156+  EBB6 3E 07       >            ld a, COLOR_DIALOG
156+  EBB8 32 F8 FF    >            ld (IO_COLOR), a
156+  EBBB             >        ENDIF
157+  EBBB 21 90 50                 ld          hl, 5090h
158+  EBBE 22 FC 8F                 ld          (bios_vars.cursorY), hl
159+  EBC1 21 19 F8                 ld          hl, vars.input
160+  EBC4 CD 99 EA                 call        printStringInv
161+  EBC7
162+  EBC7              loc_D358:   ; Ждем нажатия ESC
163+  EBC7 CD 1B C8                 call        bios_keyScan
164+  EBCA FE 1B                    cp          1Bh
165+  EBCC C2 C7 EB                 jp nz,      loc_D358
166+  EBCF
167+  EBCF C3 3D E8                 jp          mainReload
168+  EBD2
169+  EBD2              ;----------------------------------------------------------------------------
170+  EBD2              ; Чтение слова с ленты
171+  EBD2              ;----------------------------------------------------------------------------
172+  EBD2
173+  EBD2              tapeReadWord:
174+  EBD2 3E 08                    ld          a, 8
175+  EBD4              tapeReadWord2:
176+  EBD4 CD 06 C8                 call        bios_tapeRead
177+  EBD7 6F                       ld          l, a
178+  EBD8 3E 08                    ld          a, 8
179+  EBDA CD 06 C8                 call        bios_tapeRead
180+  EBDD 67                       ld          h, a
181+  EBDE C9                       ret
182+  EBDF
183+  EBDF
184+  EBDF              ; ---------------------------------------------------------------------------
185+  EBDF
186+  EBDF              ; Если имя файла на ленте было короче, чем DIR_NAME_LENGTH+3, дополняем его пробелами
187+  EBDF              tapeReadAppendName:
188+  EBDF 36 20                    ld          (hl), ' '
189+  EBE1 23                       inc         hl
190+  EBE2 0D                       dec         c
191+  EBE3 C2 DF EB                 jp nz,      tapeReadAppendName
192+  EBE6 C3 3B EB                 jp          loc_D2D6
193+  EBE9
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF7.inc
 71   EBE9                  INCLUDE "tapeErrorHandler.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeErrorHandler.inc
  1+  EBE9              ;----------------------------------------------------------------------------
  2+  EBE9              ; MXOS NC.COM
  3+  EBE9              ; Вызывается при ошибке загрузки с ленты
  4+  EBE9              ;
  5+  EBE9              ; 2013-12-18 Дизассемблировано vinxru
  6+  EBE9              ;----------------------------------------------------------------------------
  7+  EBE9
  8+  EBE9              tapeErrorHandler:
  9+  EBE9                          ; Восстановление обработчика
 10+  EBE9 21 00 C8                 ld    hl, 0C800h
 11+  EBEC 22 E1 8F                 ld    (bios_vars.tapeError), hl
 12+  EBEF
 13+  EBEF                          ; Восстановление стека
 14+  EBEF 2A CA F7                 ld    hl, (vars.savedSP)
 15+  EBF2 F9                       ld    sp, hl
 16+  EBF3
 17+  EBF3                          ; Перезагрузка файлов и продолжение работы
 18+  EBF3 C3 3D E8                 jp    mainReload
 19+  EBF6
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeErrorHandler.inc
 72   EBF6                  INCLUDE "butF9.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF9.inc
  1+  EBF6              ;----------------------------------------------------------------------------
  2+  EBF6              ; MXOS NC.COM
  3+  EBF6              ; Клавиша F9 - Сохранение файла на магнитофон
  4+  EBF6              ;
  5+  EBF6              ; 2013-12-18 Дизассемблировано vinxru
  6+  EBF6              ;----------------------------------------------------------------------------
  7+  EBF6
  8+  EBF6              but_F9:     ; Рисуем окно
  9+  EBF6 CD 67 EA                 call    drawWindowIfSel
 10+  EBF9
 11+  EBF9                          ; Выводим "SAVING FROM A: TO TAPE"
 12+  EBF9                          CENTER_LINE 20, 5Eh
 12+  EBF9 21 5E 42    >        ld  hl, ((60h - 20 * 3 / 2) << 8) + 5Eh
 12+  EBFC 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  EBFF 21 EE F6                 ld      hl, aSaveFromToTape
 14+  EC02 CD 18 C8                 call    bios_printString
 15+  EC05 CD D7 EA                 call    printSelDrive
 16+  EC08
 17+  EC08                          ; ?
 18+  EC08 CD 9F ED                 call    printInvSelFile
 19+  EC0B
 20+  EC0B                          ; Ждем нажатия Enter или ESC.
 21+  EC0B CD 1B C8     loc_D39C:   call    bios_keyScan
 22+  EC0E FE 1B                    cp      1Bh
 23+  EC10 CA 3D E8                 jp z,   mainReload
 24+  EC13 FE 0D                    cp      0Dh
 25+  EC15 C2 0B EC                 jp nz,  loc_D39C
 26+  EC18
 27+  EC18                          ; Сохранение sp   и установка обр   ошибок.
 28+  EC18 CD E0 EA                 call    prepareTapeLoad
 29+  EC1B
 30+  EC1B CD 67 EA                 call    drawWindowIfSel
 31+  EC1E
 32+  EC1E                          ; Выводим "SAVING TO TAPE"
 33+  EC1E                          CENTER_LINE 14, 5Eh
 33+  EC1E 21 5E 4B    >        ld  hl, ((60h - 14 * 3 / 2) << 8) + 5Eh
 33+  EC21 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 34+  EC24 21 0D F7                 ld      hl, aSavingToTape
 35+  EC27 CD 18 C8                 call    bios_printString
 36+  EC2A
 37+  EC2A                          ; Загрузка файла на адрес 0
 38+  EC2A CD 3C ED                 call    loadSelFileAt0  ; на выходе de - оригинальный адрес загрузки
 39+  EC2D
 40+  EC2D                          ; Получение адреса загрузки и размера файла
 41+  EC2D D5                       push    de  ; оригинальный адрес загрузки
 42+  EC2E E5                       push    hl  ; начало дескриптора
 43+  EC2F 11 1C 00                 ld      de, FILE_DESCRIPTOR.size
 44+  EC32 19                       add     hl, de
 45+  EC33 5E                       ld      e, (hl)
 46+  EC34 23                       inc     hl
 47+  EC35 56                       ld      d, (hl) ; de = размер-1
 48+  EC36 E1                       pop     hl  ; начало дескриптора
 49+  EC37 D5                       push    de  ; размер
 50+  EC38 E5                       push    hl  ; начало дескриптора
 51+  EC39 21 00 00                 ld      hl, 0   ; файл загружен на адрес 0
 52+  EC3C 19                       add     hl, de  ; hl = размер-1 + 0
 53+  EC3D EB                       ex      de, hl  ; de = размер-1 + 0
 54+  EC3E 21 00 00                 ld      hl, 0
 55+  EC41
 56+  EC41                          ; Расчет контрольной суммы от hl до de
 57+  EC41 CD 2A C8                 call    bios_calcCS ; bc = crc
 58+  EC44 60                       ld      h, b
 59+  EC45 69                       ld      l, c
 60+  EC46 22 C8 F7                 ld      (vars.tapeSaveCRC), hl
 61+  EC49
 62+  EC49                          ; Пилот-тон
 63+  EC49 CD 91 EC                 call    tapeWritePilot  ; 200h нулей, затем E6h
 64+  EC4C
 65+  EC4C                          ; Начало файла
 66+  EC4C 3E D9                    ld      a, 0D9h
 67+  EC4E CD 0C C8                 call    bios_tapeWrite  ; три раза 0D9h
 68+  EC51 CD 0C C8                 call    bios_tapeWrite
 69+  EC54 CD 0C C8                 call    bios_tapeWrite
 70+  EC57
 71+  EC57                          ; имя файла
 72+  EC57 E1                       pop     hl ; начало дескриптра
 73+  EC58 01 0A 00                 ld      bc, DIR_NAME_LENGTH+2 ; длина (запишется +1); старый формат - 9 символов, новый - DIR_NAME_LENGTH+3
 74+  EC5B CD 81 EC                 call    tapeWriteBlock
 75+  EC5E
 76+  EC5E                          ; Пилот-тон
 77+  EC5E CD 91 EC                 call    tapeWritePilot  ; 200h нулей, затем E6h
 78+  EC61
 79+  EC61 C1                       pop     bc ; размер
 80+  EC62 E1                       pop     hl ; оригинальный адрес загрузки
 81+  EC63 CD 79 EC                 call    tapeWriteWord
 82+  EC66
 83+  EC66 09                       add     hl, bc ; конечный адрес загрузки
 84+  EC67 CD 79 EC                 call    tapeWriteWord
 85+  EC6A
 86+  EC6A                          ; Запись файла
 87+  EC6A 21 00 00                 ld      hl, 0
 88+  EC6D CD 81 EC                 call    tapeWriteBlock    ; hl = адрес, bc = размер-1
 89+  EC70
 90+  EC70                          ; Запись контрольной суммы
 91+  EC70 2A C8 F7                 ld      hl, (vars.tapeSaveCRC)
 92+  EC73 CD 79 EC                 call    tapeWriteWord
 93+  EC76
 94+  EC76 C3 3D E8                 jp      mainReload
 95+  EC79
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF9.inc
 73   EC79                  INCLUDE "tapeWrite.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeWrite.inc
  1+  EC79              ;----------------------------------------------------------------------------
  2+  EC79              ; MXOS NC.COM
  3+  EC79              ; Запись слова на ленту
  4+  EC79              ;
  5+  EC79              ; 2013-12-18 Дизассемблировано vinxru
  6+  EC79              ;----------------------------------------------------------------------------
  7+  EC79
  8+  EC79              tapeWriteWord:
  9+  EC79 7D                       ld    a, l
 10+  EC7A CD 0C C8                 call  bios_tapeWrite
 11+  EC7D 7C                       ld    a, h
 12+  EC7E C3 0C C8                 jp    bios_tapeWrite
 13+  EC81
 14+  EC81              ;----------------------------------------------------------------------------
 15+  EC81              ; Запись блока данных по адресу hl длиной bc+1 на ленту
 16+  EC81              ;----------------------------------------------------------------------------
 17+  EC81
 18+  EC81              tapeWriteBlock:
 19+  EC81 03                       inc    bc
 20+  EC82 CD A6 EC     loc_D410:   call   checkBreak
 21+  EC85 7E                       ld     a, (hl)
 22+  EC86 CD 0C C8                 call   bios_tapeWrite
 23+  EC89 23                       inc    hl
 24+  EC8A 0B                       dec    bc
 25+  EC8B 78                       ld     a, b
 26+  EC8C B1                       or     c
 27+  EC8D C2 82 EC                 jp nz, loc_D410
 28+  EC90 C9                       ret
 29+  EC91
 30+  EC91              ;----------------------------------------------------------------------------
 31+  EC91              ; Запись пилот тона на ленту
 32+  EC91              ; 200h нулей, затем E6h
 33+  EC91              ;----------------------------------------------------------------------------
 34+  EC91
 35+  EC91              tapeWritePilot:
 36+  EC91 01 00 02                 ld     bc, 200h
 37+  EC94 CD A6 EC     loc_D422:   call   checkBreak
 38+  EC97 AF                       xor    a
 39+  EC98 CD 0C C8                 call   bios_tapeWrite
 40+  EC9B 0B                       dec    bc
 41+  EC9C 78                       ld     a, b
 42+  EC9D B1                       or     c
 43+  EC9E C2 94 EC                 jp nz, loc_D422
 44+  ECA1
 45+  ECA1 3E E6                    ld    a, 0E6h
 46+  ECA3 C3 0C C8                 jp    bios_tapeWrite
 47+  ECA6
 48+  ECA6              ; ---------------------------------------------------------------------------
 49+  ECA6
 50+  ECA6 3A E1 FF     checkBreak: ld     a, (IO_KEYB_B)
 51+  ECA9 A7                       and    a
 52+  ECAA F2 E9 EB                 jp p,  tapeErrorHandler
 53+  ECAD C9                       ret
 54+  ECAE
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeWrite.inc
 74   ECAE                  INCLUDE "butF6.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF6.inc
  1+  ECAE              ;----------------------------------------------------------------------------
  2+  ECAE              ; MXOS NC.COM
  3+  ECAE              ; Клавиша F6 - переименование
  4+  ECAE              ;
  5+  ECAE              ; 2013-12-18 Дизассемблировано vinxru
  6+  ECAE              ;----------------------------------------------------------------------------
  7+  ECAE
  8+  ECAE              but_F6:     ; Рисуем окно
  9+  ECAE CD 67 EA                 call        drawWindowIfSel
 10+  ECB1
 11+  ECB1                          ; Выводим "REMOVE FROM A: TO"
 12+  ECB1                          CENTER_LINE 23, 5Eh
 12+  ECB1 21 5E 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 5Eh
 12+  ECB4 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  ECB7 21 31 F6                 ld          hl, aRemoveFromTo
 14+  ECBA CD 18 C8                 call        bios_printString
 15+  ECBD CD D7 EA                 call        printSelDrive
 16+  ECC0
 17+  ECC0 CD A6 EA                 call        inputForCopyMove
 18+  ECC3 FE 1B                    cp          1Bh
 19+  ECC5 CA 3D E8                 jp z,       mainReload
 20+  ECC8
 21+  ECC8 21 19 F8                 ld          hl, vars.input
 22+  ECCB 11 39 F8                 ld          de, vars.tempFileDescr
 23+  ECCE CD 5A C8                 call        bios_fileNamePrepare
 24+  ECD1
 25+  ECD1 1E 02                    ld          e, 2
 26+  ECD3 CD 42 C8                 call        bios_fileGetSetDrive
 27+  ECD6 4F                       ld          c, a
 28+  ECD7 21 BB F7                 ld          hl, state.panelA_drive
 29+  ECDA CD CA F3                 call        readBytePanel
 30+  ECDD B9                       cp          c
 31+  ECDE C2 ED EC                 jp nz,      loc_D47B
 32+  ECE1 CD FF F0                 call        getSelectedFile
 33+  ECE4 11 39 F8                 ld          de, vars.tempFileDescr
 34+  ECE7 CD 4E C8                 call        bios_fileRename
 35+  ECEA C3 3D E8                 jp          mainReload
 36+  ECED              ; ---------------------------------------------------------------------------
 37+  ECED
 38+  ECED 1E 01        loc_D47B:   ld          e, 1
 39+  ECEF CD 42 C8                 call        bios_fileGetSetDrive
 40+  ECF2 CD FF F0                 call        getSelectedFile
 41+  ECF5 11 39 F8                 ld          de, vars.tempFileDescr
 42+  ECF8
 43+  ECF8                          ; копируем имя файла
 44+  ECF8 0E 0B                    ld          c, DIR_NAME_LENGTH + 3
 45+  ECFA              loc_D488:
 46+  ECFA 7E                       ld          a, (hl)
 47+  ECFB 12                       ld          (de),a
 48+  ECFC 23                       inc         hl
 49+  ECFD 13                       inc         de
 50+  ECFE 0D                       dec         c
 51+  ECFF C2 FA EC                 jp nz,      loc_D488
 52+  ED02
 53+  ED02 CD 4D ED                 call        copyFileInt
 54+  ED05 21 BB F7                 ld          hl, state.panelA_drive
 55+  ED08 CD CA F3                 call        readBytePanel
 56+  ED0B 1E 01                    ld          e, 1
 57+  ED0D CD 42 C8                 call        bios_fileGetSetDrive
 58+  ED10 21 39 F8                 ld          hl, vars.tempFileDescr
 59+  ED13 CD 4B C8                 call        bios_fileDelete
 60+  ED16 C3 3D E8                 jp          mainReload
 61+  ED19
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF6.inc
 75   ED19                  INCLUDE "butF5.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF5.inc
  1+  ED19              ;----------------------------------------------------------------------------
  2+  ED19              ; MXOS NC.COM
  3+  ED19              ; Клавиша F5 - копирование
  4+  ED19              ;
  5+  ED19              ; 2013-12-18 Дизассемблировано vinxru
  6+  ED19              ;----------------------------------------------------------------------------
  7+  ED19
  8+  ED19              but_F5: ; Рисуем окно
  9+  ED19 CD 67 EA             call    drawWindowIfSel
 10+  ED1C
 11+  ED1C                      ; Выводм "COPYING FROM A: TO"
 12+  ED1C                      ; центр экрана это x = 60h
 13+  ED1C                      ; половина ширина строки w = 15*3/2 = 22
 14+  ED1C                      ; координата строки x = 60h-22 = 4Ah
 15+  ED1C                      CENTER_LINE 22, 5Eh
 15+  ED1C 21 5E 3F    >        ld  hl, ((60h - 22 * 3 / 2) << 8) + 5Eh
 15+  ED1F 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 16+  ED22 22 FC 8F             ld      (bios_vars.cursorY), hl
 17+  ED25 21 09 F6             ld      hl, aCopyFromTo
 18+  ED28 CD 18 C8             call    bios_printString
 19+  ED2B CD D7 EA             call    printSelDrive
 20+  ED2E
 21+  ED2E CD A6 EA             call    inputForCopyMove
 22+  ED31 FE 1B                cp      1Bh
 23+  ED33 CA 3D E8             jp z,   mainReload
 24+  ED36
 25+  ED36 CD 4D ED             call    copyFileInt
 26+  ED39 C3 3D E8             jp      mainReload
 27+  ED3C
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF5.inc
 76   ED3C                  INCLUDE "loadSelFileAt0.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadSelFileAt0.inc
  1+  ED3C              ;----------------------------------------------------------------------------
  2+  ED3C              ; MXOS NC.COM
  3+  ED3C              ; Загрузить выбранный файл по адресу 0
  4+  ED3C              ;
  5+  ED3C              ; выход:
  6+  ED3C              ;   de = оригинальный адрес загруки
  7+  ED3C              ;
  8+  ED3C              ; 2013-12-18 Дизассемблировано vinxru
  9+  ED3C              ;----------------------------------------------------------------------------
 10+  ED3C
 11+  ED3C              loadSelFileAt0:
 12+  ED3C CD FF F0                 call  getSelectedFile
 13+  ED3F
 14+  ED3F                          ; Получаем адрес загрузки файла
 15+  ED3F 0E 02                    ld    c, 2
 16+  ED41 CD 54 C8                 call  bios_fileGetSetAddr
 17+  ED44 D5                       push  de
 18+  ED45
 19+  ED45                          ; Загружаем файл в начало памяти
 20+  ED45 11 00 00                 ld    de, 0
 21+  ED48 CD 66 C8                 call  bios_fileLoad2
 22+  ED4B
 23+  ED4B D1                       pop   de
 24+  ED4C C9                       ret
 25+  ED4D
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadSelFileAt0.inc
 77   ED4D                  INCLUDE "copyFileInt.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\copyFileInt.inc
  1+  ED4D              ;----------------------------------------------------------------------------
  2+  ED4D              ; MXOS NC.COM
  3+  ED4D              ; Общая функция для копирования и переноса файла
  4+  ED4D              ;
  5+  ED4D              ; 2013-12-18 Дизассемблировано vinxru
  6+  ED4D              ;----------------------------------------------------------------------------
  7+  ED4D
  8+  ED4D              copyFileInt:
  9+  ED4D                          ; Загрузка выбранного файла в память
 10+  ED4D CD 3C ED                 call  loadSelFileAt0
 11+  ED50 D5                       push  de    ; Тут реальный адрес
 12+  ED51
 13+  ED51                          ; Подготавливаем имя
 14+  ED51 EB                       ex    de, hl
 15+  ED52 21 19 F8                 ld    hl, vars.input
 16+  ED55 CD 5A C8                 call  bios_fileNamePrepare
 17+  ED58 EB                       ex    de, hl
 18+  ED59
 19+  ED59              saveFileInt:
 20+  ED59                          ; hl = адрес дескриптора файла
 21+  ED59 E5                       push  hl
 22+  ED5A
 23+  ED5A                          ; Устанавливаем адрес сохраняемого файла
 24+  ED5A 11 12 00                 ld    de, FILE_DESCRIPTOR.loadAddress   ; смещение поля адреса относительно начала дескриптора
 25+  ED5D 19                       add   hl, de
 26+  ED5E 11 00 00                 ld    de, 0     ; записываем 0 в поле loadAddress дескриптора
 27+  ED61 73                       ld    (hl), e
 28+  ED62 23                       inc   hl
 29+  ED63 72                       ld    (hl), d
 30+  ED64
 31+  ED64                          ; Сохраняем файл
 32+  ED64 E1                       pop   hl
 33+  ED65 CD 45 C8                 call  bios_fileCreate
 34+  ED68
 35+  ED68                          ; Изменяем адрес загрузки файла
 36+  ED68 D1                       pop   de
 37+  ED69 0E 01                    ld    c, 1
 38+  ED6B CD 54 C8                 call  bios_fileGetSetAddr
 39+  ED6E
 40+  ED6E                          ; Выходим, если нет ошибки
 41+  ED6E D0                       ret nc
 42+  ED6F
 43+  ED6F                          ; Рисуем окно
 44+  ED6F CD 86 EA                 call  drawWindow2
 45+  ED72
 46+  ED72                          ; Вывод "CAN'T CREATE FILE"
 47+  ED72                          COLOR   COLOR_DIALOG_ERR
 47+  ED72             >        IF ENABLE_COLOR
 47+  ED72 3E 47       >            ld a, COLOR_DIALOG_ERR
 47+  ED74 32 F8 FF    >            ld (IO_COLOR), a
 47+  ED77             >        ENDIF
 48+  ED77                          CENTER_LINE 18, 80h
 48+  ED77 21 80 45    >        ld  hl, ((60h - 18 * 3 / 2) << 8) + 80h
 48+  ED7A 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 49+  ED7D 21 1E F6                 ld    hl, aCantCreateFile
 50+  ED80 CD 18 C8                 call  bios_printString
 51+  ED83
 52+  ED83                          ; Вывод имени
 53+  ED83                          COLOR COLOR_DIALOG
 53+  ED83             >        IF ENABLE_COLOR
 53+  ED83 3E 07       >            ld a, COLOR_DIALOG
 53+  ED85 32 F8 FF    >            ld (IO_COLOR), a
 53+  ED88             >        ENDIF
 54+  ED88 21 90 50                 ld    hl, 5090h
 55+  ED8B 22 FC 8F                 ld    (bios_vars.cursorY), hl
 56+  ED8E 21 19 F8                 ld    hl, vars.input
 57+  ED91 CD 99 EA                 call  printStringInv
 58+  ED94
 59+  ED94              anyKey:           ; Ждем нажатия любой клавиши
 60+  ED94 CD 1B C8                 call  bios_keyScan
 61+  ED97 3C                       inc   a
 62+  ED98 CA 94 ED                 jp z, anyKey
 63+  ED9B
 64+  ED9B                          ; Выход
 65+  ED9B E1                       pop   hl
 66+  ED9C C3 3D E8                 jp    mainReload
 67+  ED9F
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\copyFileInt.inc
 78   ED9F                  INCLUDE "printInvSelFile.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInvSelFile.inc
  1+  ED9F              ;----------------------------------------------------------------------------
  2+  ED9F              ; MXOS NC.COM
  3+  ED9F              ; Инверсный вывод имени выбранного файла
  4+  ED9F              ;
  5+  ED9F              ; 2013-12-18 Дизассемблировано vinxru
  6+  ED9F              ;----------------------------------------------------------------------------
  7+  ED9F
  8+  ED9F              printInvSelFile:
  9+  ED9F CD FF F0                 call  getSelectedFile
 10+  EDA2 EB                       ex    de, hl
 11+  EDA3 21 6E 50     printInvFile:     ld    hl, 506Eh
 12+  EDA6 22 FC 8F                 ld    (bios_vars.cursorY), hl
 13+  EDA9 EB                       ex    de, hl
 14+  EDAA 11 19 F8                 ld    de, vars.input
 15+  EDAD CD AB F4                 call  compactName
 16+  EDB0 21 19 F8                 ld    hl, vars.input
 17+  EDB3 C3 99 EA                 jp    printStringInv
 18+  EDB6
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInvSelFile.inc
 79   EDB6                  INCLUDE "butF8.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF8.inc
  1+  EDB6              ;----------------------------------------------------------------------------
  2+  EDB6              ; MXOS NC.COM
  3+  EDB6              ; Клавиша F8 - удаление файла
  4+  EDB6              ;
  5+  EDB6              ; 2013-12-18 Дизассемблировано vinxru
  6+  EDB6              ;----------------------------------------------------------------------------
  7+  EDB6
  8+  EDB6              but_F8:     ; Рисуем окно
  9+  EDB6 CD 67 EA                 call    drawWindowIfSel
 10+  EDB9
 11+  EDB9                          ; Выводим "DELETE FROM A:"
 12+  EDB9                          CENTER_LINE 14, 5Eh
 12+  EDB9 21 5E 4B    >        ld  hl, ((60h - 14 * 3 / 2) << 8) + 5Eh
 12+  EDBC 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  EDBF 21 F8 F5                 ld          hl, aDeleteFrom
 14+  EDC2 CD 18 C8                 call        bios_printString
 15+  EDC5 CD D7 EA                 call        printSelDrive
 16+  EDC8
 17+  EDC8 CD 9F ED                 call        printInvSelFile
 18+  EDCB
 19+  EDCB              loc_D54C:   ; Ждем нажатия Enter или ESC
 20+  EDCB CD 1B C8                 call        bios_keyScan
 21+  EDCE FE 1B                    cp          1Bh
 22+  EDD0 CA 3D E8                 jp z,       mainReload
 23+  EDD3 FE 0D                    cp          0Dh
 24+  EDD5 C2 CB ED                 jp nz,      loc_D54C
 25+  EDD8
 26+  EDD8                          ; Если файл только для чтения
 27+  EDD8 CD FF F0                 call        getSelectedFile
 28+  EDDB 11 0B 00                 ld          de, FILE_DESCRIPTOR.attrib
 29+  EDDE 19                       add         hl, de
 30+  EDDF 7E                       ld          a, (hl)
 31+  EDE0 E6 01                    and         1
 32+  EDE2 CA 1E EE                 jp z,       loc_D595
 33+  EDE5
 34+  EDE5 CD 86 EA                 call        drawWindow2
 35+  EDE8
 36+  EDE8                          ; Выводим текст "FILE IS READ-ONLY"
 37+  EDE8                          COLOR       COLOR_DIALOG_ERR
 37+  EDE8             >        IF ENABLE_COLOR
 37+  EDE8 3E 47       >            ld a, COLOR_DIALOG_ERR
 37+  EDEA 32 F8 FF    >            ld (IO_COLOR), a
 37+  EDED             >        ENDIF
 38+  EDED                          CENTER_LINE 18, 80h
 38+  EDED 21 80 45    >        ld  hl, ((60h - 18 * 3 / 2) << 8) + 80h
 38+  EDF0 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 39+  EDF3 21 BB F5                 ld          hl, aFileIsReanOnly
 40+  EDF6 CD 18 C8                 call        bios_printString
 41+  EDF9
 42+  EDF9                          ; Выводим vars.input
 43+  EDF9                          COLOR       COLOR_DIALOG
 43+  EDF9             >        IF ENABLE_COLOR
 43+  EDF9 3E 07       >            ld a, COLOR_DIALOG
 43+  EDFB 32 F8 FF    >            ld (IO_COLOR), a
 43+  EDFE             >        ENDIF
 44+  EDFE 21 90 50                 ld          hl, 5090h
 45+  EE01 22 FC 8F                 ld          (bios_vars.cursorY), hl
 46+  EE04 21 19 F8                 ld          hl, vars.input
 47+  EE07 CD 99 EA                 call        printStringInv
 48+  EE0A
 49+  EE0A              loc_D581:   ; Цикл ожидания нажатия любой клавиши
 50+  EE0A CD 1B C8                 call        bios_keyScan
 51+  EE0D 3C                       inc         a
 52+  EE0E C2 0A EE                 jp nz,      loc_D581
 53+  EE11
 54+  EE11              loc_D588:   ; Цикл ожидания нажатия Esc или Enter
 55+  EE11 CD 1B C8                 call        bios_keyScan
 56+  EE14 FE 1B                    cp          1Bh             ; Esc
 57+  EE16 CA 3D E8                 jp z,       mainReload      ; Если Esc - выход
 58+  EE19 FE 0D                    cp          0Dh             ; Enter
 59+  EE1B C2 11 EE                 jp nz,      loc_D588        ; Если Enter - всё равно удалить
 60+  EE1E
 61+  EE1E              loc_D595:   ; Удаляем текущий файл
 62+  EE1E CD FF F0                 call        getSelectedFile
 63+  EE21 CD 4B C8                 call        bios_fileDelete
 64+  EE24
 65+  EE24                          ; Уменьшаем счетчик файлов
 66+  EE24 21 BD F7                 ld          hl, state.panelA_filesCnt
 67+  EE27 CD CA F3                 call        readBytePanel
 68+  EE2A 3D                       dec         a
 69+  EE2B CD B9 F3                 call        writeBytePanel
 70+  EE2E
 71+  EE2E C3 3D E8                 jp          mainReload
 72+  EE31
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF8.inc
 80   EE31                  INCLUDE "butF2.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF2.inc
  1+  EE31              ;----------------------------------------------------------------------------
  2+  EE31              ; MXOS NC.COM
  3+  EE31              ; Клавиши F1, F2. Выбор накопителя для панели
  4+  EE31              ;
  5+  EE31              ; 2013-12-18 Дизассемблировано vinxru
  6+  EE31              ;----------------------------------------------------------------------------
  7+  EE31
  8+  EE31              but_F2:     ; Временно устанавливаем state.activePanel=1
  9+  EE31 3A B8 F7                 ld    a, (state.activePanel)
 10+  EE34 F5                       push  af
 11+  EE35 3E 01                    ld    a, 1
 12+  EE37 32 B8 F7                 ld    (state.activePanel), a
 13+  EE3A
 14+  EE3A                          ; Диалог
 15+  EE3A CD 98 EE                 call  chooseDrive
 16+  EE3D
 17+  EE3D                          ; Если выбрали устройство, то сохраняем его
 18+  EE3D FE FF                    cp    0FFh
 19+  EE3F CA 4F EE                 jp z, loc_D5C3
 20+  EE42 32 BC F7                 ld    (state.panelB_drive), a
 21+  EE45
 22+  EE45                          ; А также делаем панель видимой и перемещаем курсор в начало
 23+  EE45 AF                       xor   a
 24+  EE46 32 BA F7                 ld    (state.panelB_info), a
 25+  EE49 32 C2 F7                 ld    (state.panelB_curFile), a
 26+  EE4C 32 C0 F7                 ld    (state.panelB_firstFile), a
 27+  EE4F
 28+  EE4F              loc_D5C3:   ; Восстанавливаем state.activePanel
 29+  EE4F F1                       pop   af
 30+  EE50 32 B8 F7                 ld    (state.activePanel), a
 31+  EE53
 32+  EE53                          ; Перезагружаем и перерисовываем вторую панель
 33+  EE53 CD 1D F1                 call  loadAndPrintB
 34+  EE56
 35+  EE56                          ; Перезагружаем и перерисовываем первую панель, только если она в режиме информации
 36+  EE56 3A B9 F7                 ld    a, (state.panelA_info)
 37+  EE59 A7                       and   a
 38+  EE5A CA 92 EE                 jp z, saveStateAndReload
 39+  EE5D CD 2C F1                 call  loadAndPrintA
 40+  EE60
 41+  EE60                          ; Сохраняем состояние и выходим
 42+  EE60 C3 92 EE                 jp    saveStateAndReload
 43+  EE63
 44+  EE63              ; ---------------------------------------------------------------------------
 45+  EE63
 46+  EE63              but_F1:     ; Временно устанавливаем state.activePanel=2
 47+  EE63 3A B8 F7                 ld    a, (state.activePanel)
 48+  EE66 F5                       push  af
 49+  EE67 3E 00                    ld    a, 0
 50+  EE69 32 B8 F7                 ld    (state.activePanel), a
 51+  EE6C
 52+  EE6C                          ; Диалог
 53+  EE6C CD 98 EE                 call  chooseDrive
 54+  EE6F
 55+  EE6F                          ; Если выбрали устройство, то сохраняем его
 56+  EE6F FE FF                    cp    0FFh
 57+  EE71 CA 81 EE                 jp z, loc_D5F2
 58+  EE74 32 BB F7                 ld    (state.panelA_drive), a
 59+  EE77
 60+  EE77                          ; А также делаем панель видимой и перемещаем курсор в начало
 61+  EE77 AF                       xor   a
 62+  EE78 32 B9 F7                 ld    (state.panelA_info), a
 63+  EE7B 32 C1 F7                 ld    (state.panelA_curFile), a
 64+  EE7E 32 BF F7                 ld    (state.panelA_firstFile), a
 65+  EE81
 66+  EE81              loc_D5F2:   ; Восстанавливаем state.activePanel
 67+  EE81 F1                       pop   af
 68+  EE82 32 B8 F7                 ld    (state.activePanel), a
 69+  EE85
 70+  EE85                          ; Перезагружаем и перерисовываем первую панель
 71+  EE85 CD 2C F1                 call  loadAndPrintA
 72+  EE88
 73+  EE88                          ; Перезагружаем и перерисовываем вторую панель, только если она в режиме информации
 74+  EE88 3A BA F7                 ld    a, (state.panelB_info)
 75+  EE8B A7                       and   a
 76+  EE8C CA 92 EE                 jp z, saveStateAndReload
 77+  EE8F CD 1D F1                 call  loadAndPrintB
 78+  EE92
 79+  EE92              saveStateAndReload:
 80+  EE92                          ; Сохраняем состояние и выходим
 81+  EE92 CD 22 EA                 call  saveState
 82+  EE95 C3 53 E8                 jp    mainDriveChanged
 83+  EE98
 84+  EE98              ; ---------------------------------------------------------------------------
 85+  EE98
 86+  EE98              chooseDrive:
 87+  EE98                          COLOR   COLOR_DIALOG
 87+  EE98             >        IF ENABLE_COLOR
 87+  EE98 3E 07       >            ld a, COLOR_DIALOG
 87+  EE9A 32 F8 FF    >            ld (IO_COLOR), a
 87+  EE9D             >        ENDIF
 88+  EE9D
 89+  EE9D 21 93 F7                 ld    hl, g_chooseDrive
 90+  EEA0 CD 15 F4                 call  draw
 91+  EEA3
 92+  EEA3                          ; Выводим текст "CHOOSE DRIVE:"
 93+  EEA3 21 63 1E                 ld    hl, 1E63h
 94+  EEA6 CD 02 F4                 call  setCursorPosPanel
 95+  EEA9 21 EA F5                 ld    hl, aChooseDrive
 96+  EEAC CD 18 C8                 call  bios_printString
 97+  EEAF
 98+  EEAF                          ; Выводим текст "A   B   C   D"
 99+  EEAF 21 74 1C                 ld    hl, 1C74h
100+  EEB2 CD 02 F4                 call  setCursorPosPanel
101+  EEB5 21 CE F5                 ld    hl, aABCD
102+  EEB8 CD 18 C8                 call  bios_printString
103+  EEBB
104+  EEBB                          ; Выводим текст "E   F   G   H"
105+  EEBB 21 7F 1C                 ld    hl, 1C7Fh
106+  EEBE CD 02 F4                 call  setCursorPosPanel
107+  EEC1 21 DC F5                 ld    hl, aEFGH
108+  EEC4 CD 18 C8                 call  bios_printString
109+  EEC7
110+  EEC7                          ; Меняем вид курсора
111+  EEC7 3A E9 8F                 ld    a, (bios_vars.cursorCfg)
112+  EECA F5                       push  af
113+  EECB AF                       xor   a
114+  EECC 32 E9 8F                 ld    (bios_vars.cursorCfg), a
115+  EECF
116+  EECF                          ; Сохраняем текущее устройство
117+  EECF 21 BB F7                 ld    hl, state.panelA_drive
118+  EED2 CD CA F3                 call  readBytePanel
119+  EED5 32 C7 F7                 ld    (vars.chooseDrive), a
120+  EED8
121+  EED8              cd_Loop:    ; Рисуем курсор
122+  EED8 CD 30 EF                 call  chooseDrive_draw
123+  EEDB
124+  EEDB                          ; Ждем нажатия клавиши
125+  EEDB CD 03 C8                 call  bios_getch
126+  EEDE
127+  EEDE                          ; Стираем курсор
128+  EEDE F5                       push  af
129+  EEDF CD 30 EF                 call  chooseDrive_draw
130+  EEE2 F1                       pop   af
131+  EEE3
132+  EEE3                          ; Выбор диска клавишами крсора
133+  EEE3 0E 01                    ld    c, 1
134+  EEE5 FE 18                    cp    18h       ; вправо
135+  EEE7 CA 24 EF                 jp z, cd_Arrows
136+  EEEA 0E 07                    ld    c, 7
137+  EEEC FE 08                    cp    8         ; влево
138+  EEEE CA 24 EF                 jp z, cd_Arrows
139+  EEF1 0E 04                    ld    c, 4
140+  EEF3 FE 1A                    cp    1Ah       ; вниз
141+  EEF5 CA 24 EF                 jp z, cd_Arrows
142+  EEF8 FE 19                    cp    19h       ; вверх
143+  EEFA CA 24 EF                 jp z, cd_Arrows
144+  EEFD FE 0D                    cp    0Dh       ; Enter
145+  EEFF CA 1C EF                 jp z, cd_Enter
146+  EF02 FE 1B                    cp    1Bh       ; Esc
147+  EF04 CA 15 EF                 jp z, cd_Esc
148+  EF07
149+  EF07                          ; Выбор диска клавишами a-h
150+  EF07 D6 41                    sub   41h
151+  EF09 FE 08                    cp    8
152+  EF0B D2 D8 EE                 jp nc, cd_Loop
153+  EF0E 4F                       ld    c, a
154+  EF0F
155+  EF0F                          ; Восстанавливаем вид курсора
156+  EF0F F1                       pop   af
157+  EF10 32 E9 8F                 ld    (bios_vars.cursorCfg),a
158+  EF13 79                       ld    a, c
159+  EF14 C9                       ret
160+  EF15
161+  EF15              ; ---------------------------------------------------------------------------
162+  EF15
163+  EF15              cd_Esc:     ; Восстанавливаем вид курсора
164+  EF15 F1                       pop   af
165+  EF16 32 E9 8F                 ld    (bios_vars.cursorCfg),a
166+  EF19
167+  EF19                          ; Ничего не выбрано
168+  EF19 3E FF                    ld    a, 0FFh
169+  EF1B C9                       ret
170+  EF1C
171+  EF1C              ; ---------------------------------------------------------------------------
172+  EF1C
173+  EF1C              cd_Enter:   ; Восстанавливаем вид курсора
174+  EF1C F1                       pop   af
175+  EF1D 32 E9 8F                 ld    (bios_vars.cursorCfg),a
176+  EF20                          ; Выбрали
177+  EF20 3A C7 F7                 ld    a, (vars.chooseDrive)
178+  EF23 C9                       ret
179+  EF24
180+  EF24              ; ---------------------------------------------------------------------------
181+  EF24
182+  EF24 3A C7 F7     cd_Arrows:  ld    a, (vars.chooseDrive)
183+  EF27 81                       add   a, c
184+  EF28 E6 07                    and   7
185+  EF2A 32 C7 F7                 ld    (vars.chooseDrive),a
186+  EF2D C3 D8 EE                 jp    cd_Loop
187+  EF30
188+  EF30              ; ---------------------------------------------------------------------------
189+  EF30
190+  EF30              chooseDrive_draw:
191+  EF30                          ; Выбранное устройство
192+  EF30 3A C7 F7                 ld    a, (vars.chooseDrive)
193+  EF33
194+  EF33                          ; Координаты курсора
195+  EF33 21 6C 97                 ld    hl, 976Ch
196+  EF36
197+  EF36                          ; Вторая строка
198+  EF36 FE 04                    cp    4
199+  EF38 DA 43 EF                 jp c, chooseDrive_draw2
200+  EF3B D6 04                    sub  4
201+  EF3D 4F                       ld   c, a
202+  EF3E 7D                       ld   a, l
203+  EF3F C6 0B                    add  a, 0Bh
204+  EF41 6F                       ld   l, a
205+  EF42 79                       ld   a, c
206+  EF43              chooseDrive_draw2:
207+  EF43                          ; Рисуем
208+  EF43 4F                       ld    c, a
209+  EF44 87                       add   a, a
210+  EF45 81                       add   a, c
211+  EF46 84                       add   a, h
212+  EF47 67                       ld    h, a
213+  EF48 CD 54 F4                 call  activePanelPos
214+  EF4B 06 01                    ld    b, 1        ; ширина 8 пикселей
215+  EF4D C3 ED F0                 jp    inverseRect ; hl - адрес
216+  EF50
217+  EF50
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF2.inc
 81   EF50                  INCLUDE "butTab.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butTab.inc
  1+  EF50              ;----------------------------------------------------------------------------
  2+  EF50              ; MXOS NC.COM
  3+  EF50              ; Клавиша TAB - Смена активной панели
  4+  EF50              ;
  5+  EF50              ; 2013-12-18 Дизассемблировано vinxru
  6+  EF50              ;----------------------------------------------------------------------------
  7+  EF50
  8+  EF50              but_Tab:    ; Получаем видимость панели
  9+  EF50 21 B9 F7                 ld      hl, state.panelA_info
 10+  EF53 3A B8 F7                 ld      a, (state.activePanel)
 11+  EF56 A7                       and     a
 12+  EF57 C2 5B EF                 jp nz,  loc_D6C7
 13+  EF5A 23                       inc     hl
 14+  EF5B 4F           loc_D6C7:   ld      c, a
 15+  EF5C 7E                       ld      a, (hl)
 16+  EF5D
 17+  EF5D                          ; Панель не видима, выходим
 18+  EF5D A7                       and     a
 19+  EF5E C2 53 E8                 jp nz,  mainDriveChanged
 20+  EF61
 21+  EF61                          ; Меняем активную панель на противоположную
 22+  EF61 79                       ld      a, c
 23+  EF62 EE 01                    xor     1
 24+  EF64 32 B8 F7                 ld      (state.activePanel),a
 25+  EF67
 26+  EF67                          ; Перезагружаем список файлов
 27+  EF67 21 BB F7                 ld      hl, state.panelA_drive
 28+  EF6A CD CA F3                 call    readBytePanel
 29+  EF6D CD 53 F1                 call    loadFiles   ; На входе нужен a=накопитель
 30+  EF70
 31+  EF70 C3 92 EE                 jp      saveStateAndReload
 32+  EF73
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butTab.inc
 82   EF73                  INCLUDE "butF3.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF3.inc
  1+  EF73              ;----------------------------------------------------------------------------
  2+  EF73              ; MXOS NC.COM
  3+  EF73              ; Клавиша F3 - отобразить информацию о накопителе
  4+  EF73              ;
  5+  EF73              ; 2013-12-18 Дизассемблировано vinxru
  6+  EF73              ;----------------------------------------------------------------------------
  7+  EF73
  8+  EF73              but_F3:     ; Временный выбор противоположной панели
  9+  EF73 3A B8 F7                 ld    a, (state.activePanel)
 10+  EF76 F5                       push  af
 11+  EF77 EE 01                    xor   1
 12+  EF79 32 B8 F7                 ld    (state.activePanel),a
 13+  EF7C
 14+  EF7C                          ; Меняем видимость панели
 15+  EF7C 21 B9 F7                 ld    hl, state.panelA_info
 16+  EF7F CD CA F3                 call  readBytePanel
 17+  EF82 EE 01                    xor   1
 18+  EF84 CD B9 F3                 call  writeBytePanel
 19+  EF87
 20+  EF87                          ; Восстанавлаием активную панель
 21+  EF87 F1                       pop   af
 22+  EF88 32 B8 F7                 ld    (state.activePanel),a
 23+  EF8B A7                       and   a
 24+  EF8C CA 95 EF                 jp z, loc_D701
 25+  EF8F
 26+  EF8F                          ; Перерисовываем панель
 27+  EF8F CD 2C F1                 call  loadAndPrintA
 28+  EF92
 29+  EF92 C3 92 EE                 jp    saveStateAndReload
 30+  EF95
 31+  EF95              ; ---------------------------------------------------------------------------
 32+  EF95
 33+  EF95 CD 1D F1     loc_D701:   call  loadAndPrintB
 34+  EF98 C3 92 EE                 jp    saveStateAndReload
 35+  EF9B
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butF3.inc
 83   EF9B                  INCLUDE "butArrows.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butArrows.inc
  1+  EF9B              ;----------------------------------------------------------------------------
  2+  EF9B              ; MXOS NC.COM
  3+  EF9B              ; Клавиши перемещения курсора
  4+  EF9B              ;
  5+  EF9B              ; 2013-12-18 Дизассемблировано vinxru
  6+  EF9B              ; 2022-02-16 Доработано SpaceEngineer
  7+  EF9B              ;----------------------------------------------------------------------------
  8+  EF9B
  9+  EF9B              ; ---------------------------------------------------------------------------
 10+  EF9B              ; На один файл вперед
 11+  EF9B
 12+  EF9B              but_Down:   ; c = количество файлов
 13+  EF9B 21 BD F7                 ld      hl, state.panelA_filesCnt
 14+  EF9E CD CA F3                 call    readBytePanel
 15+  EFA1 4F                       ld      c, a
 16+  EFA2
 17+  EFA2                          ; a = файл, на котором курсор
 18+  EFA2 21 C1 F7                 ld      hl, state.panelA_curFile
 19+  EFA5 CD CA F3                 call    readBytePanel
 20+  EFA8
 21+  EFA8                          ; курсор на следующий файл
 22+  EFA8 3C                       inc     a
 23+  EFA9
 24+  EFA9                          ; если курсор на последнем файле + 1, выходим
 25+  EFA9 B9                       cp      c
 26+  EFAA CA 53 E8                 jp z,   mainDriveChanged
 27+  EFAD
 28+  EFAD                          ; иначе сохраняем новое положение курсора
 29+  EFAD                          ; и скроллим панель, если надо
 30+  EFAD C3 F9 EF                 jp      scrollPanel
 31+  EFB0
 32+  EFB0              ; ---------------------------------------------------------------------------
 33+  EFB0              ; На один файл назад
 34+  EFB0
 35+  EFB0              but_Up:     ; a = файл, на котором курсор
 36+  EFB0 21 C1 F7                 ld      hl, state.panelA_curFile
 37+  EFB3 CD CA F3                 call    readBytePanel
 38+  EFB6
 39+  EFB6                          ; если курсор на нулевом файле, выходим
 40+  EFB6 B7                       or      a
 41+  EFB7 CA 53 E8                 jp z,   mainDriveChanged
 42+  EFBA
 43+  EFBA                          ; курсор на предыдущий файл
 44+  EFBA 3D                       dec     a
 45+  EFBB
 46+  EFBB                          ; иначе сохраняем новое положение курсора
 47+  EFBB                          ; и скроллим панель, если надо
 48+  EFBB C3 F9 EF                 jp      scrollPanel
 49+  EFBE
 50+  EFBE              ; ---------------------------------------------------------------------------
 51+  EFBE              ; На 18 файлов вперед
 52+  EFBE
 53+  EFBE              but_Right:  ; c = количество файлов
 54+  EFBE 21 BD F7                 ld      hl, state.panelA_filesCnt
 55+  EFC1 CD CA F3                 call    readBytePanel
 56+  EFC4 4F                       ld      c, a
 57+  EFC5 0D                       dec     c
 58+  EFC6
 59+  EFC6                          ; a = файл, на котором курсор
 60+  EFC6 21 C1 F7                 ld      hl, state.panelA_curFile
 61+  EFC9 CD CA F3                 call    readBytePanel
 62+  EFCC
 63+  EFCC                          ; увеличиваем на 18 файлов, если не дошли до конца списка
 64+  EFCC C6 12                    add     FILE_LIST_SIZE/2
 65+  EFCE B9                       cp      c
 66+  EFCF
 67+  EFCF                          ; иначе устанавливаем курсор на последний файл
 68+  EFCF DA F9 EF                 jp c,   scrollPanel
 69+  EFD2 79                       ld      a, c
 70+  EFD3 C3 F9 EF                 jp      scrollPanel
 71+  EFD6
 72+  EFD6              ; ---------------------------------------------------------------------------
 73+  EFD6              ; На 18 файлов назад
 74+  EFD6
 75+  EFD6              but_Left:   ; a = файл, на котором курсор
 76+  EFD6 21 C1 F7                 ld      hl, state.panelA_curFile
 77+  EFD9 CD CA F3                 call    readBytePanel
 78+  EFDC
 79+  EFDC                          ; уменьшаем на 18, если не дошли до 0
 80+  EFDC D6 12                    sub     FILE_LIST_SIZE/2
 81+  EFDE
 82+  EFDE                          ; иначе устанавливаем курсор на нулевой файл
 83+  EFDE F2 F9 EF                 jp p,   scrollPanel
 84+  EFE1 AF                       xor     a
 85+  EFE2 C3 F9 EF                 jp      scrollPanel
 86+  EFE5
 87+  EFE5              ; ---------------------------------------------------------------------------
 88+  EFE5              ; На первый файл
 89+  EFE5
 90+  EFE5 21 C1 F7     but_Home:   ld      hl, state.panelA_curFile
 91+  EFE8 AF                       xor     a
 92+  EFE9 C3 F9 EF                 jp      scrollPanel
 93+  EFEC
 94+  EFEC              ; ---------------------------------------------------------------------------
 95+  EFEC              ; На последний файл
 96+  EFEC
 97+  EFEC 21 BD F7     but_End:    ld      hl, state.panelA_filesCnt
 98+  EFEF CD CA F3                 call    readBytePanel
 99+  EFF2 3D                       dec     a
100+  EFF3 21 C1 F7                 ld      hl, state.panelA_curFile
101+  EFF6 C3 F9 EF                 jp      scrollPanel
102+  EFF9
103+  EFF9              ; ---------------------------------------------------------------------------
104+  EFF9              ; Расчет нового положения указателей и скроллинг панели, если надо
105+  EFF9
106+  EFF9              scrollPanel:
107+  EFF9                          ; сначала сохраняем panelA_curFile
108+  EFF9 CD B9 F3                 call    writeBytePanel
109+  EFFC
110+  EFFC                          ; c = количество файлов
111+  EFFC 21 BD F7                 ld      hl, state.panelA_filesCnt
112+  EFFF CD CA F3                 call    readBytePanel
113+  F002 4F                       ld      c, a
114+  F003 0D                       dec     c
115+  F004
116+  F004                          ; b = файл, с которого начинается спосок файлов панели
117+  F004 21 BF F7                 ld      hl, state.panelA_firstFile
118+  F007 CD CA F3                 call    readBytePanel
119+  F00A 47                       ld      b, a
120+  F00B
121+  F00B                          ; a = файл, на котором курсор
122+  F00B 21 C1 F7                 ld      hl, state.panelA_curFile
123+  F00E CD CA F3                 call    readBytePanel
124+  F011
125+  F011                          ; a = положение курсора относительно начала списка файлов панели
126+  F011 90                       sub     b
127+  F012
128+  F012                          ; если курсор выше первого файла панели, скроллим вниз
129+  F012 DA 1D F0                 jp c,   scrollDown
130+  F015
131+  F015                          ; если курсор ниже последнего файла панели, скроллим вверх
132+  F015 D6 24                    sub     FILE_LIST_SIZE
133+  F017 D2 26 F0                 jp nc,  scrollUp
134+  F01A
135+  F01A                          ; иначе выходим
136+  F01A C3 53 E8                 jp      mainDriveChanged
137+  F01D
138+  F01D              scrollDown: ; скроллинг списка вниз
139+  F01D 80                       add     a, b
140+  F01E
141+  F01E                          ; если скроллить некуда, выходим
142+  F01E D2 53 E8                 jp nc,  mainDriveChanged
143+  F021
144+  F021                          ; направление перерисовки списока файлов - сверху вниз
145+  F021 06 00                    ld      b, 0
146+  F023 C3 2E F0                 jp      scrollExit
147+  F026
148+  F026              scrollUp:   ; скроллинг списка вверх
149+  F026 04                       inc     b
150+  F027 80                       add     a, b
151+  F028
152+  F028                          ; если скроллить некуда, выходим
153+  F028 B9                       cp      c       ; c = количество файлов
154+  F029 D2 53 E8                 jp nc,  mainDriveChanged
155+  F02C
156+  F02C                          ; направление перерисовки списока файлов - снизу вверх
157+  F02C 06 01                    ld      b, 1
158+  F02E
159+  F02E              scrollExit: ; сохраняем новое значение panelA_firstFile
160+  F02E 21 BF F7                 ld      hl, state.panelA_firstFile
161+  F031 CD B9 F3                 call    writeBytePanel
162+  F034
163+  F034                          ; перерисовываем только список файлов
164+  F034                          ; b = направление
165+  F034 CD 45 F3                 call    printFilePanel
166+  F037
167+  F037                          ; выходим
168+  F037 C3 53 E8                 jp      mainDriveChanged
169+  F03A
170+  F03A              ; ---------------------------------------------------------------------------
171+  F03A
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\butArrows.inc
 84   F03A                  INCLUDE "clearCmdLine.inc"    ; Продолжается в printSpaces
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\clearCmdLine.inc
  1+  F03A              ;----------------------------------------------------------------------------
  2+  F03A              ; MXOS NC.COM
  3+  F03A              ; Очистка ком строки
  4+  F03A              ;
  5+  F03A              ; 2013-12-18 Дизассемблировано vinxru
  6+  F03A              ;----------------------------------------------------------------------------
  7+  F03A
  8+  F03A              clearCmdLine:
  9+  F03A 21 F3 07                 ld    hl, 7F3h
 10+  F03D 22 FC 8F                 ld    (bios_vars.cursorY), hl
 11+  F040
 12+  F040 26 0A                    ld    h, 10
 13+  F042 22 C3 F7                 ld    (vars.cmdLinePos), hl
 14+  F045
 15+  F045                          COLOR   COLOR_CMDLINE
 15+  F045             >        IF ENABLE_COLOR
 15+  F045 3E 70       >            ld a, COLOR_CMDLINE
 15+  F047 32 F8 FF    >            ld (IO_COLOR), a
 15+  F04A             >        ENDIF
 16+  F04A
 17+  F04A 0E 5C                    ld    c, 92 ; '\'
 18+  F04C CD 09 C8                 call  bios_printChar
 19+  F04F
 20+  F04F 21 D0 F7                 ld    hl, vars.cmdLine
 21+  F052 22 C5 F7                 ld    (vars.cmdLineEnd), hl
 22+  F055
 23+  F055 06 3C                    ld    b, 60
 24+  F057
 25+  F057                          ; Продолжение на printSpaces
 26+  F057
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\clearCmdLine.inc
 85   F057                  INCLUDE "printSpaces.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSpaces.inc
  1+  F057              ;----------------------------------------------------------------------------
  2+  F057              ; MXOS NC.COM
  3+  F057              ; Вывод пробелов
  4+  F057              ;
  5+  F057              ; b - кол-во пробелов
  6+  F057              ;
  7+  F057              ; 2013-12-18 Дизассемблировано vinxru
  8+  F057              ;----------------------------------------------------------------------------
  9+  F057
 10+  F057              printSpaces:
 11+  F057 0E 20                    ld    c, ' '
 12+  F059              printSpaces_1:
 13+  F059 CD 09 C8                 call  bios_printChar
 14+  F05C 05                       dec   b
 15+  F05D C2 59 F0                 jp nz,  printSpaces_1
 16+  F060 C9                       ret
 17+  F061
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSpaces.inc
 86   F061                  INCLUDE "drawCursor.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawCursor.inc
  1+  F061              ;----------------------------------------------------------------------------
  2+  F061              ; MXOS NC.COM
  3+  F061              ; Рисование курсора
  4+  F061              ;
  5+  F061              ; 2013-12-18 Дизассемблировано vinxru
  6+  F061              ;----------------------------------------------------------------------------
  7+  F061
  8+  F061              drawCursor: ; Цвет устаналвиается перед выводом
  9+  F061
 10+  F061                          ; Если файлов нет, выходим
 11+  F061 21 BD F7                 ld    hl, state.panelA_filesCnt
 12+  F064 CD CA F3                 call  readBytePanel
 13+  F067 A7                       and   a
 14+  F068                  IF ENABLE_COLOR
 15+  F068 C8                       ret Z
 16+  F069                  ELSE
 17+  F069 ~                        jp z, drawCursor_0
 18+  F069                  ENDIF
 19+  F069                          ; C какого файла начинается список файлов на панели
 20+  F069 21 BF F7                 ld    hl, state.panelA_firstFile
 21+  F06C CD CA F3                 call  readBytePanel
 22+  F06F 4F                       ld    c, a
 23+  F070
 24+  F070                          ; Номер выбранного файла
 25+  F070 21 C1 F7                 ld    hl, state.panelA_curFile
 26+  F073 CD CA F3                 call  readBytePanel
 27+  F076 91                       sub   c
 28+  F077
 29+  F077                          ; Рассчиытваем координату X (h = a < 18 ? 0x91 : 0x9D)
 30+  F077 26 91                    ld    h, 91h
 31+  F079 FE 12                    cp    18
 32+  F07B DA 82 F0                 jp c, drawCursor_1
 33+  F07E D6 12                    sub   18
 34+  F080 26 9D                    ld    h, 9Dh
 35+  F082
 36+  F082              drawCursor_1:
 37+  F082                          ; Рассчиытваем координату Y (l = a * 10 + 18h)
 38+  F082 87                       add   a, a
 39+  F083 4F                       ld    c, a
 40+  F084 87                       add   a, a
 41+  F085 87                       add   a, a
 42+  F086 81                       add   a, c
 43+  F087 C6 18                    add   a,24
 44+  F089 6F                       ld    l, a
 45+  F08A
 46+  F08A                          ; Ширина
 47+  F08A 06 0A                    ld    b, 10
 48+  F08C
 49+  F08C                          ; Если правая панель, сдвигаем курсор на пол экрана
 50+  F08C 3A B8 F7     drawCursor_2:     ld    a, (state.activePanel)
 51+  F08F A7                       and   a
 52+  F090 CA 95 F0                 jp z, drawCursor_3
 53+  F093 3E 18                    ld    a, 18h
 54+  F095 84           drawCursor_3:     add   a, h
 55+  F096 67                       ld    h, a
 56+  F097
 57+  F097                          ; Рисуем курсор (hl - адрес, b - ширина, высота 9)
 58+  F097 CD ED F0                 call  inverseRect
 59+  F09A C9                       ret
 60+  F09B
 61+  F09B              ; ---------------------------------------------------------------------------
 62+  F09B
 63+  F09B                  IF ENABLE_COLOR==0
 64+  F09B ~            drawCursor_0:     ld    hl, 92D6h
 65+  F09B ~                        ld    b, 2
 66+  F09B ~                        jp    drawCursor_2
 67+  F09B                  ENDIF
 68+  F09B
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawCursor.inc
 87   F09B                  INCLUDE "printInfoLine.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoLine.inc
  1+  F09B              ;----------------------------------------------------------------------------
  2+  F09B              ; MXOS NC.COM
  3+  F09B              ; Вывод инфомарции о файле внизу окна
  4+  F09B              ;
  5+  F09B              ; 2013-12-18 Дизассемблировано vinxru
  6+  F09B              ;----------------------------------------------------------------------------
  7+  F09B
  8+  F09B              printInfoLine:
  9+  F09B                      ; Если файлов нет, выходим
 10+  F09B 21 BD F7             ld      hl, state.panelA_filesCnt
 11+  F09E CD CA F3             call    readBytePanel
 12+  F0A1 A7                   and     a
 13+  F0A2 C8                   ret z
 14+  F0A3
 15+  F0A3                      COLOR   COLOR_INFOLINE
 15+  F0A3             >        IF ENABLE_COLOR
 15+  F0A3 3E B1       >            ld a, COLOR_INFOLINE
 15+  F0A5 32 F8 FF    >            ld (IO_COLOR), a
 15+  F0A8             >        ENDIF
 16+  F0A8
 17+  F0A8 21 DE 0F             ld      hl, (P_FILE_NAME_X << 8) + P_FILE_NAME_Y
 18+  F0AB CD 02 F4             call    setCursorPosPanel
 19+  F0AE
 20+  F0AE                      ; ld      c, '\'
 21+  F0AE                      ; call    bios_printChar
 22+  F0AE
 23+  F0AE                      ; Устанавливаем hl на дескриптор файла
 24+  F0AE CD FF F0             call    getSelectedFile
 25+  F0B1 E5                   push    hl
 26+  F0B2
 27+  F0B2                      ; Печатаем имя файла в компактном виде
 28+  F0B2 11 39 F8             ld      de, vars.tempFileDescr  ; буфер
 29+  F0B5 CD AB F4             call    compactName
 30+  F0B8 21 39 F8             ld      hl, vars.tempFileDescr
 31+  F0BB 06 0E                ld      b, DIR_NAME_LENGTH + 6  ; макс длина строки (name.ext + ' ' + терминатор)
 32+  F0BD 0E 14                ld      c, 20                   ; терминатор - пробел или меньше
 33+  F0BF CD EC F3             call    printString2
 34+  F0C2
 35+  F0C2                      ; После имени файла, если оно короткие, надо напечатать
 36+  F0C2                      ; пробелы, чтобы стереть предыдущий текст. После работы
 37+  F0C2                      ; printString2 у нас в b как раз количество символов,
 38+  F0C2                      ; оставшихся до DIR_NAME_LENGTH + 6
 39+  F0C2 CD 57 F0     		call    printSpaces	; b - кол-во пробелов
 40+  F0C5
 41+  F0C5                      ; Смещаем курсор
 42+  F0C5 21 DE 39             ld      hl, (P_FILE_DATA_X << 8) + P_FILE_DATA_Y
 43+  F0C8 CD 02 F4             call    setCursorPosPanel
 44+  F0CB
 45+  F0CB                      ; Устанавливаем hl на поле адреса загрузки
 46+  F0CB E1                   pop     hl
 47+  F0CC E5                   push    hl
 48+  F0CD 01 13 00             ld      bc, FILE_DESCRIPTOR.loadAddress + 1 ; bc = смещение
 49+  F0D0 09                   add     hl, bc
 50+  F0D1
 51+  F0D1                      ; Читаем старший и младший байты адреса загрузки
 52+  F0D1                      ; и тут же печатаем их в HEX форме
 53+  F0D1 7E                   ld      a, (hl)
 54+  F0D2 CD 15 C8             call    bios_printHexByte
 55+  F0D5 2B                   dec     hl
 56+  F0D6 7E                   ld      a, (hl)
 57+  F0D7 CD 15 C8             call    bios_printHexByte
 58+  F0DA
 59+  F0DA                      ; Смещаем курсор
 60+  F0DA 0E 18        		LD 	    c, 18h  ; код символа "вправо"
 61+  F0DC CD 09 C8     		call	bios_printChar
 62+  F0DF
 63+  F0DF                      ; Устанавливаем hl на поле размера файла
 64+  F0DF E1                   pop     hl
 65+  F0E0 01 1C 00             ld      bc, FILE_DESCRIPTOR.size ; bc = смещение
 66+  F0E3 09                   add     hl, bc
 67+  F0E4
 68+  F0E4                      ; Читаем размер файла в de и печатаем в десятичной форме
 69+  F0E4 5E                   ld      e, (hl)
 70+  F0E5 23                   inc     hl
 71+  F0E6 56                   ld      d, (hl)
 72+  F0E7 13                   inc     de          ; в дескрипторе файла хранится размер-1
 73+  F0E8 06 20                ld      b, 20h
 74+  F0EA C3 6C C8             jp      bios_printDecWord
 75+  F0ED
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoLine.inc
 88   F0ED                  INCLUDE "inverseRect.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inverseRect.inc
  1+  F0ED              ;----------------------------------------------------------------------------
  2+  F0ED              ; MXOS NC.COM
  3+  F0ED              ; Инвертирвоание прямоугольной области на экране
  4+  F0ED              ;
  5+  F0ED              ; hl - адрес, b - ширина в байтах, высота всегда 9 пикселей
  6+  F0ED              ;
  7+  F0ED              ; 2013-12-18 Дизассемблировано vinxru
  8+  F0ED              ;----------------------------------------------------------------------------
  9+  F0ED
 10+  F0ED              inverseRect:
 11+  F0ED 0E 09                    ld      c, 9
 12+  F0EF E5                       push    hl
 13+  F0F0 7E           loc_D7F3:   ld      a, (hl)
 14+  F0F1 2F                       cpl
 15+  F0F2 77                       ld      (hl), a
 16+  F0F3 23                       inc     hl
 17+  F0F4 0D                       dec     c
 18+  F0F5 C2 F0 F0                 jp nz,  loc_D7F3
 19+  F0F8 E1                       pop     hl
 20+  F0F9 24                       inc     h
 21+  F0FA 05                       dec     b
 22+  F0FB C2 ED F0                 jp nz,  inverseRect
 23+  F0FE C9                       ret
 24+  F0FF
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inverseRect.inc
 89   F0FF                  INCLUDE "getSelectedFile.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\getSelectedFile.inc
  1+  F0FF              ;----------------------------------------------------------------------------
  2+  F0FF              ; MXOS NC.COM
  3+  F0FF              ; Получить имя выбранного файла
  4+  F0FF              ;
  5+  F0FF              ; выход:
  6+  F0FF              ;   hl - адрес дескриптора файла
  7+  F0FF              ;
  8+  F0FF              ; 2013-12-18 Дизассемблировано vinxru
  9+  F0FF              ;----------------------------------------------------------------------------
 10+  F0FF
 11+  F0FF              getSelectedFile:
 12+  F0FF D5                   push    de
 13+  F100
 14+  F100                      ; С какого файла начинается список файлов панели
 15+  F100 21 BF F7             ld      hl, state.panelA_firstFile
 16+  F103 CD CA F3             call    readBytePanel
 17+  F106 5F                   ld      e, a
 18+  F107
 19+  F107                      ; Номер текущего файла
 20+  F107 21 C1 F7             ld      hl, state.panelA_curFile
 21+  F10A CD CA F3             call    readBytePanel
 22+  F10D 93                   sub     e
 23+  F10E
 24+  F10E                      ; Адрес дескриптора текущего файла в буфере:
 25+  F10E                      ; hl = FILE_LIST_BUFFER + DIR_DESCR_SIZE * curFile[state.activePanel];
 26+  F10E
 27+  F10E 21 20 00             ld      hl, DIR_DESCR_SIZE
 28+  F111 5F                   ld      e, a
 29+  F112 16 00                ld      d, 0
 30+  F114 CD 84 C8             call    bios_mul_hl_de
 31+  F117
 32+  F117 11 00 80             ld      de, FILE_LIST_BUFFER
 33+  F11A 19                   add     hl, de
 34+  F11B
 35+  F11B D1                   pop     de
 36+  F11C C9                   ret
 37+  F11D
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\getSelectedFile.inc
 90   F11D                  INCLUDE "loadAndPrint.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadAndPrint.inc
  1+  F11D              ;----------------------------------------------------------------------------
  2+  F11D              ; MXOS NC.COM
  3+  F11D              ; Загрузить файлы и нарисовать
  4+  F11D              ;
  5+  F11D              ; 2013-12-18 Дизассемблировано vinxru
  6+  F11D              ;----------------------------------------------------------------------------
  7+  F11D
  8+  F11D              loadAndPrintB:
  9+  F11D                          ; Времено меняем активную панель на правую
 10+  F11D 3A B8 F7                 ld      a, (state.activePanel)
 11+  F120 F5                       push    af
 12+  F121 3E 01                    ld      a, 1
 13+  F123 32 B8 F7                 ld      (state.activePanel),a
 14+  F126
 15+  F126                          ; Переходим к общему коду
 16+  F126 3A BA F7                 ld      a, (state.panelB_info)
 17+  F129 C3 38 F1                 jp      loadAndPrint
 18+  F12C
 19+  F12C              ; ---------------------------------------------------------------------------
 20+  F12C
 21+  F12C              loadAndPrintA:
 22+  F12C                          ; Времено меняем активную панель на левую
 23+  F12C 3A B8 F7                 ld      a, (state.activePanel)
 24+  F12F F5                       push    af
 25+  F130 3E 00                    ld      a, 0
 26+  F132 32 B8 F7                 ld      (state.activePanel),a
 27+  F135
 28+  F135                          ; Панель видима?
 29+  F135 3A B9 F7                 ld      a, (state.panelA_info)
 30+  F138
 31+  F138              loadAndPrint:
 32+  F138 A7                       and     a
 33+  F139 C2 42 F1                 jp nz,  loadAndPrint_2
 34+  F13C
 35+  F13C                          ; Выводим список файлов
 36+  F13C CD 13 F3                 call    redrawFilePanel
 37+  F13F
 38+  F13F C3 45 F1                 jp      loadAndPrint_3
 39+  F142
 40+  F142              ; ---------------------------------------------------------------------------
 41+  F142
 42+  F142              loadAndPrint_2:   ; Рисуем панель информации
 43+  F142 CD 71 F1                 call    printInfoPanel
 44+  F145
 45+  F145              loadAndPrint_3:   ; Восстанавливаем активную панель
 46+  F145 F1                       pop     af
 47+  F146 32 B8 F7                 ld      (state.activePanel),a
 48+  F149
 49+  F149                          ; Загружаем список файлов
 50+  F149 21 BB F7                 ld      hl, state.panelA_drive
 51+  F14C CD CA F3                 call    readBytePanel
 52+  F14F CD 53 F1                 call    loadFiles   ; На входе a должен содержать номер накопителя
 53+  F152 C9                       ret
 54+  F153
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadAndPrint.inc
 91   F153                  INCLUDE "loadFiles.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadFiles.inc
  1+  F153              ;----------------------------------------------------------------------------
  2+  F153              ; MXOS NC.COM
  3+  F153              ; Загрузить список файлов с накопителя
  4+  F153              ;
  5+  F153              ; вход:
  6+  F153              ;   a = номер накопителя
  7+  F153              ;
  8+  F153              ; 2013-12-18 Дизассемблировано vinxru
  9+  F153              ; 2022-02-16 Доработано SpaceEngineer
 10+  F153              ;----------------------------------------------------------------------------
 11+  F153
 12+  F153              loadFiles:  ; Получение спика файлов в буфере
 13+  F153
 14+  F153 1E 01                    ld      e, 1
 15+  F155 CD 42 C8                 call    bios_fileGetSetDrive  ; устанавливем активные накопитель
 16+  F158
 17+  F158                          ; bc = файл, с которого начинается спосок файлов панели
 18+  F158 21 BF F7                 ld      hl, state.panelA_firstFile
 19+  F15B CD CA F3                 call    readBytePanel
 20+  F15E 4F                       ld      c, a
 21+  F15F 06 00                    ld      b, 0    ; считаем, что файлов в каталоге меньше 256
 22+  F161
 23+  F161                          ; Получаем список файлов в буфере и общее
 24+  F161                          ; количество файлов в каталоге в de
 25+  F161 21 00 80                 ld      hl, FILE_LIST_BUFFER  ; адрес буфера
 26+  F164 11 24 00                 ld      de, FILE_LIST_SIZE    ; размер буфера
 27+  F167 CD 3F C8                 call    bios_fileList
 28+  F16A
 29+  F16A                          ; Сохранение количествава файлов
 30+  F16A 7B                       ld      a, e                ; считаем, что файлов в каталоге меньше 256
 31+  F16B 21 BD F7                 ld      hl, state.panelA_filesCnt
 32+  F16E C3 B9 F3                 jp      writeBytePanel
 33+  F171
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadFiles.inc
 92   F171                  INCLUDE "printInfoPanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoPanel.inc
  1+  F171              ;----------------------------------------------------------------------------
  2+  F171              ; MXOS NC.COM
  3+  F171              ; Рисование информационной панели
  4+  F171              ;
  5+  F171              ; 2013-12-18 Дизассемблировано vinxru
  6+  F171              ;----------------------------------------------------------------------------
  7+  F171
  8+  F171              printInfoPanel:
  9+  F171                          COLOR   COLOR_BORDER
  9+  F171             >        IF ENABLE_COLOR
  9+  F171 3E F1       >            ld a, COLOR_BORDER
  9+  F173 32 F8 FF    >            ld (IO_COLOR), a
  9+  F176             >        ENDIF
 10+  F176
 11+  F176                          ; Рисуем панель
 12+  F176 21 81 F7                 ld      hl, g_infoPanel
 13+  F179 CD 15 F4                 call    draw
 14+  F17C
 15+  F17C                          COLOR   COLOR_INFOHEADER
 15+  F17C             >        IF ENABLE_COLOR
 15+  F17C 3E A1       >            ld a, COLOR_INFOHEADER
 15+  F17E 32 F8 FF    >            ld (IO_COLOR), a
 15+  F181             >        ENDIF
 16+  F181
 17+  F181                          ; Печать "COMMANDER VERSION XXX"
 18+  F181 21 10 11                 ld      hl, 1110h
 19+  F184 CD 02 F4                 call    setCursorPosPanel
 20+  F187 21 8D F5                 ld      hl, aCommanderVer
 21+  F18A CD 18 C8                 call    bios_printString
 22+  F18D
 23+  F18D                          ; Печать "(C) OMSK 1992"
 24+  F18D                          ;ld      hl, 1D1Ah
 25+  F18D 21 1A 0E                 ld      hl, 0E1Ah
 26+  F190 CD 02 F4                 call    setCursorPosPanel
 27+  F193 21 A3 F5                 ld      hl, aCopyright
 28+  F196 CD 18 C8                 call    bios_printString
 29+  F199
 30+  F199                          ; Положение курсора
 31+  F199 21 30 0B                 ld      hl, 0B30h
 32+  F19C CD 02 F4                 call    setCursorPosPanel
 33+  F19F
 34+  F19F                          ; Общий объем ОЗУ
 35+  F19F 11 E0 FF                 ld      de, 65504   ; Специалист-MX/MX2
 36+  F1A2
 37+  F1A2                          ; Печать "XXXX BYTES MEMORY"
 38+  F1A2                          COLOR   COLOR_INFONUMBER
 38+  F1A2             >        IF ENABLE_COLOR
 38+  F1A2 3E E1       >            ld a, COLOR_INFONUMBER
 38+  F1A4 32 F8 FF    >            ld (IO_COLOR), a
 38+  F1A7             >        ENDIF
 39+  F1A7 06 20                    ld      b, 20h
 40+  F1A9 CD 6C C8                 call    bios_printDecWord
 41+  F1AC                          COLOR   COLOR_INFOTEXT
 41+  F1AC             >        IF ENABLE_COLOR
 41+  F1AC 3E F1       >            ld a, COLOR_INFOTEXT
 41+  F1AE 32 F8 FF    >            ld (IO_COLOR), a
 41+  F1B1             >        ENDIF
 42+  F1B1 21 61 F6                 ld      hl, aKBytesMemory
 43+  F1B4 CD 18 C8                 call    bios_printString
 44+  F1B7
 45+  F1B7                          ; Положение курсора
 46+  F1B7 21 3C 0B                 ld      hl, 0B3Ch
 47+  F1BA CD 02 F4                 call    setCursorPosPanel
 48+  F1BD
 49+  F1BD                          ; Свободный объем ОЗУ
 50+  F1BD CD 30 C8                 call    bios_getMemTop
 51+  F1C0 23                       inc     hl  ; сободно на 1 байт больше, чем memTop
 52+  F1C1 EB                       ex      hl, de
 53+  F1C2
 54+  F1C2                          ; Печать "XXXX BYTES FREE"
 55+  F1C2                          COLOR   COLOR_INFONUMBER
 55+  F1C2             >        IF ENABLE_COLOR
 55+  F1C2 3E E1       >            ld a, COLOR_INFONUMBER
 55+  F1C4 32 F8 FF    >            ld (IO_COLOR), a
 55+  F1C7             >        ENDIF
 56+  F1C7 06 20                    ld      b, 20h
 57+  F1C9 CD 6C C8                 call    bios_printDecWord
 58+  F1CC                          COLOR   COLOR_INFOTEXT
 58+  F1CC             >        IF ENABLE_COLOR
 58+  F1CC 3E F1       >            ld a, COLOR_INFOTEXT
 58+  F1CE 32 F8 FF    >            ld (IO_COLOR), a
 58+  F1D1             >        ENDIF
 59+  F1D1 21 6F F6                 ld      hl, aKBytesFree
 60+  F1D4 CD 18 C8                 call    bios_printString
 61+  F1D7
 62+  F1D7                          ; Положение курсора
 63+  F1D7 21 48 05                 ld      hl, 0548h
 64+  F1DA CD 02 F4                 call    setCursorPosPanel
 65+  F1DD
 66+  F1DD                          ; Общий объем ДОЗУ в кб
 67+  F1DD 3A F8 8F                 ld      a, (bios_vars.ramPageCount)
 68+  F1E0                          ; hl = a * 256
 69+  F1E0 67                       ld      h, a
 70+  F1E1 2E 00                    ld      l, 0
 71+  F1E3                          ; hl = hl / 4
 72+  F1E3 CD 81 C8                 call    bios_div_hl_2
 73+  F1E6 CD 81 C8                 call    bios_div_hl_2
 74+  F1E9 EB                       ex      hl, de
 75+  F1EA
 76+  F1EA                          ; Печать "XXXX KB EXTENDED MEMORY"
 77+  F1EA                          COLOR   COLOR_INFONUMBER
 77+  F1EA             >        IF ENABLE_COLOR
 77+  F1EA 3E E1       >            ld a, COLOR_INFONUMBER
 77+  F1EC 32 F8 FF    >            ld (IO_COLOR), a
 77+  F1EF             >        ENDIF
 78+  F1EF 06 20                    ld      b, 20h
 79+  F1F1 CD 6C C8                 call    bios_printDecWord
 80+  F1F4                          COLOR   COLOR_INFOTEXT
 80+  F1F4             >        IF ENABLE_COLOR
 80+  F1F4 3E F1       >            ld a, COLOR_INFOTEXT
 80+  F1F6 32 F8 FF    >            ld (IO_COLOR), a
 80+  F1F9             >        ENDIF
 81+  F1F9 21 4D F6                 ld      hl, aKBytesExtMemory
 82+  F1FC CD 18 C8                 call    bios_printString
 83+  F1FF
 84+  F1FF                          ; Получить размер диска
 85+  F1FF 06 03                    ld      b, 3    ; режим
 86+  F201 CD 63 C8                 call    bios_diskDriver             ; de = количество кластеров на диске, hl = адрес DISK_INFO
 87+  F204 22 CE F7                 ld      (vars.diskInfoPtr), hl   ; cохраним адрес структуры DISK_INFO
 88+  F207
 89+  F207                          ; Проверяем, распознан ли диск
 90+  F207 01 22 00                 ld      bc, DISK_INFO.isValid
 91+  F20A 09                       add     hl, bc                  ; hl = адрес поля isValid
 92+  F20B 7E                       ld      a, (hl)                 ; a = isValid
 93+  F20C FE 02                    cp      DISK_VALID              ; если значение меньше, чем DISK_VALID (2)
 94+  F20E DA E3 F2                 jp c,   pip_printDiskError      ; то переходим сюда
 95+  F211
 96+  F211                          ;---------------------------------------------------------
 97+  F211
 98+  F211              pip_printDiskInfo:
 99+  F211                          ; Положение курсора
100+  F211 21 5C 05                 ld      hl, 055Ch
101+  F214 CD 02 F4                 call    setCursorPosPanel
102+  F217
103+  F217                          ; Считаем объем в килобайтах
104+  F217                          ; de = de * 256 / 1024 = hl / 4
105+  F217 EB                       ex      hl, de
106+  F218 CD 81 C8                 call    bios_div_hl_2
107+  F21B CD 81 C8                 call    bios_div_hl_2
108+  F21E EB                       ex      hl, de
109+  F21F D5                       push    de  ; в стеке - объем диска в кб
110+  F220
111+  F220                          ; Печать "XXXX KBYTES TOTAL ON DRIVE A:"
112+  F220                          COLOR   COLOR_INFONUMBER
112+  F220             >        IF ENABLE_COLOR
112+  F220 3E E1       >            ld a, COLOR_INFONUMBER
112+  F222 32 F8 FF    >            ld (IO_COLOR), a
112+  F225             >        ENDIF
113+  F225 06 20                    ld      b, 20h
114+  F227 CD 6C C8                 call    bios_printDecWord
115+  F22A                          COLOR   COLOR_INFOTEXT
115+  F22A             >        IF ENABLE_COLOR
115+  F22A 3E F1       >            ld a, COLOR_INFOTEXT
115+  F22C 32 F8 FF    >            ld (IO_COLOR), a
115+  F22F             >        ENDIF
116+  F22F 21 7B F6                 ld      hl, aKBytesTotalOnDrv
117+  F232 CD 18 C8                 call    bios_printString
118+  F235                          COLOR   COLOR_INFONUMBER
118+  F235             >        IF ENABLE_COLOR
118+  F235 3E E1       >            ld a, COLOR_INFONUMBER
118+  F237 32 F8 FF    >            ld (IO_COLOR), a
118+  F23A             >        ENDIF
119+  F23A CD A9 F3                 call    printCurDrive
120+  F23D                          COLOR   COLOR_INFOTEXT
120+  F23D             >        IF ENABLE_COLOR
120+  F23D 3E F1       >            ld a, COLOR_INFOTEXT
120+  F23F 32 F8 FF    >            ld (IO_COLOR), a
120+  F242             >        ENDIF
121+  F242
122+  F242                          ; Положение курсора
123+  F242 21 98 0B                 ld      hl, 0B98h
124+  F245 CD 02 F4                 call    setCursorPosPanel
125+  F248
126+  F248                          ; Печать "Volume label: XXXXXXXXXXX"
127+  F248                          COLOR   COLOR_INFOTEXT
127+  F248             >        IF ENABLE_COLOR
127+  F248 3E F1       >            ld a, COLOR_INFOTEXT
127+  F24A 32 F8 FF    >            ld (IO_COLOR), a
127+  F24D             >        ENDIF
128+  F24D 21 B7 F6                 ld      hl, aVolumeLabel
129+  F250 CD 18 C8                 call    bios_printString
130+  F253                          COLOR   COLOR_INFONUMBER
130+  F253             >        IF ENABLE_COLOR
130+  F253 3E E1       >            ld a, COLOR_INFONUMBER
130+  F255 32 F8 FF    >            ld (IO_COLOR), a
130+  F258             >        ENDIF
131+  F258                          ; hl = адрес поля v_diskInfo.volumeLabel
132+  F258 2A CE F7                 ld      hl, (vars.diskInfoPtr)
133+  F25B 11 16 00                 ld      de, DISK_INFO.volumeLabel
134+  F25E 19                       add     hl, de
135+  F25F CD 18 C8                 call    bios_printString
136+  F262
137+  F262                          ; Положение курсора
138+  F262 21 68 05                 ld      hl, 0568h
139+  F265 CD 02 F4                 call    setCursorPosPanel
140+  F268
141+  F268                          ; Подсчет свободного места на диске.
142+  F268                          ; Эта п/п может работать довольно долго,
143+  F268                          ; в зависимости от размера fat на диске
144+  F268                          ; Результат: de = количество свободных кластеров
145+  F268 CD 72 C8                 call    bios_getDriveFreeSpace
146+  F26B
147+  F26B                          ; Считаем объем в килобайтах
148+  F26B                          ; hl = hl * 256 / 1024 = hl / 4
149+  F26B EB                       ex      hl, de
150+  F26C CD 81 C8                 call    bios_div_hl_2
151+  F26F CD 81 C8                 call    bios_div_hl_2
152+  F272 EB                       ex      hl, de
153+  F273 D5                       push    de  ; в стеке - объем свободного места в кб
154+  F274
155+  F274                          ; Печать "XXXX KBYTES FREE ON DRIVE A:"
156+  F274                          COLOR   COLOR_INFONUMBER
156+  F274             >        IF ENABLE_COLOR
156+  F274 3E E1       >            ld a, COLOR_INFONUMBER
156+  F276 32 F8 FF    >            ld (IO_COLOR), a
156+  F279             >        ENDIF
157+  F279 06 20                    ld      b, 20h
158+  F27B CD 6C C8                 call    bios_printDecWord
159+  F27E                          COLOR   COLOR_INFOTEXT
159+  F27E             >        IF ENABLE_COLOR
159+  F27E 3E F1       >            ld a, COLOR_INFOTEXT
159+  F280 32 F8 FF    >            ld (IO_COLOR), a
159+  F283             >        ENDIF
160+  F283 21 8F F6                 ld      hl, aKBytesFreeOnDrv
161+  F286 CD 18 C8                 call    bios_printString
162+  F289                          COLOR   COLOR_INFONUMBER
162+  F289             >        IF ENABLE_COLOR
162+  F289 3E E1       >            ld a, COLOR_INFONUMBER
162+  F28B 32 F8 FF    >            ld (IO_COLOR), a
162+  F28E             >        ENDIF
163+  F28E CD A9 F3                 call    printCurDrive
164+  F291
165+  F291                          ; Положение курсора
166+  F291 21 74 05                 ld      hl, 0574h
167+  F294 CD 02 F4                 call    setCursorPosPanel
168+  F297
169+  F297                          ; de = кол-во файлов
170+  F297 21 BD F7                 ld      hl, state.panelA_filesCnt
171+  F29A 3A B8 F7                 ld      a, (state.activePanel)
172+  F29D A7                       and     a
173+  F29E C2 A2 F2                 jp nz,  pip_filesPresent
174+  F2A1 23                       inc     hl
175+  F2A2              pip_filesPresent:
176+  F2A2 5E                       ld      e, (hl)
177+  F2A3 16 00                    ld      d, 0
178+  F2A5
179+  F2A5                          ; Печать "XX FILES USE"
180+  F2A5                          COLOR   COLOR_INFONUMBER
180+  F2A5             >        IF ENABLE_COLOR
180+  F2A5 3E E1       >            ld a, COLOR_INFONUMBER
180+  F2A7 32 F8 FF    >            ld (IO_COLOR), a
180+  F2AA             >        ENDIF
181+  F2AA 06 20                    ld      b, 20h
182+  F2AC CD 6C C8                 call    bios_printDecWord
183+  F2AF                          COLOR   COLOR_INFOTEXT
183+  F2AF             >        IF ENABLE_COLOR
183+  F2AF 3E F1       >            ld a, COLOR_INFOTEXT
183+  F2B1 32 F8 FF    >            ld (IO_COLOR), a
183+  F2B4             >        ENDIF
184+  F2B4 21 A3 F6                 ld      hl, aFilesUse
185+  F2B7 CD 18 C8                 call    bios_printString
186+  F2BA
187+  F2BA D1                       pop     de  ; из стека - объем свободного места в кб
188+  F2BB E1                       pop     hl  ; из стека - объем диска в кб
189+  F2BC CD 7E C8                 call    bios_sub_hl_de
190+  F2BF EB                       ex      hl, de
191+  F2C0
192+  F2C0                          ; Печать "XXXX BYTES IN"
193+  F2C0                          COLOR   COLOR_INFONUMBER
193+  F2C0             >        IF ENABLE_COLOR
193+  F2C0 3E E1       >            ld a, COLOR_INFONUMBER
193+  F2C2 32 F8 FF    >            ld (IO_COLOR), a
193+  F2C5             >        ENDIF
194+  F2C5 06 00                    ld      b, 0    ; не дополнять пробелами
195+  F2C7 CD 6C C8                 call    bios_printDecWord
196+  F2CA                          COLOR   COLOR_INFOTEXT
196+  F2CA             >        IF ENABLE_COLOR
196+  F2CA 3E F1       >            ld a, COLOR_INFOTEXT
196+  F2CC 32 F8 FF    >            ld (IO_COLOR), a
196+  F2CF             >        ENDIF
197+  F2CF 21 AF F6                 ld      hl, aKBytesIn
198+  F2D2 CD 18 C8                 call    bios_printString
199+  F2D5
200+  F2D5                          ; Положение курсора
201+  F2D5 21 80 2C                 ld      hl, 2C80h
202+  F2D8 CD 02 F4                 call    setCursorPosPanel
203+  F2DB
204+  F2DB                          ; Печать "A:"
205+  F2DB                          ; Здесь будет печататься путь к текущей папке...
206+  F2DB                          COLOR   COLOR_INFONUMBER
206+  F2DB             >        IF ENABLE_COLOR
206+  F2DB 3E E1       >            ld a, COLOR_INFONUMBER
206+  F2DD 32 F8 FF    >            ld (IO_COLOR), a
206+  F2E0             >        ENDIF
207+  F2E0 C3 A9 F3                 jp      printCurDrive
208+  F2E3
209+  F2E3                          ; ^^^ выход
210+  F2E3
211+  F2E3                          ;---------------------------------------------------------
212+  F2E3
213+  F2E3              pip_printDiskError:
214+  F2E3 F5                       push    af  ; в a - код 0 (нет драйвера) или 1 (диск не отформатирован)
215+  F2E4
216+  F2E4                          ; Положение курсора
217+  F2E4 21 5C 0B                 ld      hl, 0B5Ch
218+  F2E7 CD 02 F4                 call    setCursorPosPanel
219+  F2EA
220+  F2EA                          ; Печать "DRIVE A:"
221+  F2EA                          COLOR   COLOR_INFOTEXT
221+  F2EA             >        IF ENABLE_COLOR
221+  F2EA 3E F1       >            ld a, COLOR_INFOTEXT
221+  F2EC 32 F8 FF    >            ld (IO_COLOR), a
221+  F2EF             >        ENDIF
222+  F2EF 21 C6 F6                 ld      hl, aDrive
223+  F2F2 CD 18 C8                 call    bios_printString
224+  F2F5                          COLOR   COLOR_INFONUMBER
224+  F2F5             >        IF ENABLE_COLOR
224+  F2F5 3E E1       >            ld a, COLOR_INFONUMBER
224+  F2F7 32 F8 FF    >            ld (IO_COLOR), a
224+  F2FA             >        ENDIF
225+  F2FA CD A9 F3                 call    printCurDrive
226+  F2FD                          COLOR   COLOR_INFOTEXT
226+  F2FD             >        IF ENABLE_COLOR
226+  F2FD 3E F1       >            ld a, COLOR_INFOTEXT
226+  F2FF 32 F8 FF    >            ld (IO_COLOR), a
226+  F302             >        ENDIF
227+  F302
228+  F302                          ; Печать " HAS NO DRIVER" или " IS NOT FORMATTED"
229+  F302 F1                       pop     af
230+  F303 B7                       or      a
231+  F304 CA 0D F3                 jp z,   pip_printDiskNoDriver
232+  F307 21 DC F6                 ld      hl, aNotFormatted
233+  F30A C3 18 C8                 jp      bios_printString
234+  F30D
235+  F30D                          ; ^^^ выход
236+  F30D
237+  F30D              pip_printDiskNoDriver:
238+  F30D 21 CD F6                 ld      hl, aHasNoDriver
239+  F310 C3 18 C8                 jp      bios_printString
240+  F313
241+  F313                          ; ^^^ выход
242+  F313
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoPanel.inc
 93   F313                  INCLUDE "printFilePanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFilePanel.inc
  1+  F313              ;----------------------------------------------------------------------------
  2+  F313              ; MXOS NC.COM
  3+  F313              ; Вывод списка файлов на панель
  4+  F313              ;
  5+  F313              ; 2013-12-18 Дизассемблировано vinxru
  6+  F313              ;----------------------------------------------------------------------------
  7+  F313
  8+  F313              ;----------------------------------------------------------------------------
  9+  F313              ; Перерисовка всей панели
 10+  F313
 11+  F313              redrawFilePanel:
 12+  F313                      COLOR   COLOR_BORDER
 12+  F313             >        IF ENABLE_COLOR
 12+  F313 3E F1       >            ld a, COLOR_BORDER
 12+  F315 32 F8 FF    >            ld (IO_COLOR), a
 12+  F318             >        ENDIF
 13+  F318
 14+  F318                      ; Рисование панели
 15+  F318 21 70 F7             ld      hl, g_filePanel
 16+  F31B CD 15 F4             call    draw
 17+  F31E
 18+  F31E                      ; Вывод буквы диска
 19+  F31E                      COLOR   COLOR_INFOLINE
 19+  F31E             >        IF ENABLE_COLOR
 19+  F31E 3E B1       >            ld a, COLOR_INFOLINE
 19+  F320 32 F8 FF    >            ld (IO_COLOR), a
 19+  F323             >        ENDIF
 20+  F323 21 BB F7             ld      hl, state.panelA_drive
 21+  F326 CD CA F3             call    readBytePanel
 22+  F329 21 DE 09             ld      hl, (P_DRIVE_LETTER_X << 8) + P_DRIVE_LETTER_Y
 23+  F32C CD 02 F4             call    setCursorPosPanel
 24+  F32F CD AE F3             call    printDrive
 25+  F332
 26+  F332                      ; Вывод NAME
 27+  F332                      COLOR   COLOR_PANELNAME
 27+  F332             >        IF ENABLE_COLOR
 27+  F332 3E A1       >            ld a, COLOR_PANELNAME
 27+  F334 32 F8 FF    >            ld (IO_COLOR), a
 27+  F337             >        ENDIF
 28+  F337 21 10 11             ld      hl, (P_NAME_X << 8) + P_NAME_Y
 29+  F33A CD 02 F4             call    setCursorPosPanel
 30+  F33D 21 39 F5             ld      hl, aNameName
 31+  F340 CD 18 C8             call    bios_printString
 32+  F343
 33+  F343                      ; Выодим список файлов сверху вниз
 34+  F343 06 00                ld      b, 0
 35+  F345
 36+  F345              ;----------------------------------------------------------------------------
 37+  F345              ; Перерисовка списка файлов
 38+  F345              ; вход:
 39+  F345              ;   b - направление (0 - сверху вниз, 1 - снизу вверх)
 40+  F345
 41+  F345              printFilePanel:
 42+  F345                      ; Рисуем сверху вниз или снизу вверх?
 43+  F345 78                   ld      a, b
 44+  F346 B7                   or      a
 45+  F347 F5                   push    af
 46+  F348
 47+  F348                      ; Загрузка списка файлов
 48+  F348 21 BB F7             ld      hl, state.panelA_drive
 49+  F34B CD CA F3             call    readBytePanel   ; a = номер накопителя
 50+  F34E CD 53 F1             call    loadFiles
 51+  F351
 52+  F351                      ; Цвет для печати списка файлов
 53+  F351                      COLOR   COLOR_FILE
 53+  F351             >        IF ENABLE_COLOR
 53+  F351 3E B1       >            ld a, COLOR_FILE
 53+  F353 32 F8 FF    >            ld (IO_COLOR), a
 53+  F356             >        ENDIF
 54+  F356
 55+  F356 F1                   pop     af
 56+  F357 C2 82 F3             jp nz,  printFilesDownUp
 57+  F35A
 58+  F35A              ;----------------------------------------------------------------------------
 59+  F35A              ; Цикл печати сверху вниз
 60+  F35A
 61+  F35A              printFilesUpDown:
 62+  F35A                      ; Указатель списка файлов - на нулевой файл
 63+  F35A 21 00 80             ld      hl, FILE_LIST_BUFFER
 64+  F35D
 65+  F35D                      ; Положение курсора - на нулевой файл
 66+  F35D 11 20 06             ld      de, (P_FILE_LIST_X1 << 8) + P_FILE_LIST_Y
 67+  F360
 68+  F360              pfud_Loop:
 69+  F360                      ; Прерываем цикл по достижении конца списка файлов
 70+  F360                      ; (первый символ имени = FF)
 71+  F360 7E                   ld      a, (hl)
 72+  F361 3C                   inc     a
 73+  F362 C8                   ret z
 74+  F363
 75+  F363                      ; Установка положения курсора
 76+  F363 EB                   ex      de, hl
 77+  F364 CD 02 F4             call    setCursorPosPanel
 78+  F367 EB                   ex      de, hl
 79+  F368
 80+  F368                      ; Печать имени файла
 81+  F368 CD D6 F3             call    printFileNamOnPanel
 82+  F36B
 83+  F36B                      ; Следующий файл
 84+  F36B 01 20 00             ld      bc, DIR_DESCR_SIZE
 85+  F36E 09                   add     hl, bc
 86+  F36F
 87+  F36F                      ; Курсор на следующую строку
 88+  F36F 7B                   ld      a, e
 89+  F370 C6 0A                add     10
 90+  F372 5F                   ld      e, a
 91+  F373
 92+  F373                      ; Курсор на следующий столбец
 93+  F373 FE D4                cp      P_FILE_LIST_Y_MAX
 94+  F375 DA 60 F3             jp c,   pfud_Loop
 95+  F378 7A                   ld      a, d
 96+  F379 11 20 36             ld      de, (P_FILE_LIST_X2 << 8) + P_FILE_LIST_Y
 97+  F37C FE 14                cp      20
 98+  F37E DA 60 F3             jp c,   pfud_Loop
 99+  F381
100+  F381 C9                   ret
101+  F382
102+  F382              ;----------------------------------------------------------------------------
103+  F382              ; Цикл печати снизу вверх
104+  F382
105+  F382              printFilesDownUp:
106+  F382                      ; Указатель списка файлов - на последний файл
107+  F382 21 60 84             ld      hl, FILE_LIST_BUFFER + (FILE_LIST_SIZE-1) * DIR_DESCR_SIZE
108+  F385
109+  F385                      ; Положение курсора - на последний файл
110+  F385 11 CA 36             ld      de, (P_FILE_LIST_X2 << 8) + P_FILE_LIST_Y_MAX - 10
111+  F388
112+  F388              pfdu_Loop:
113+  F388                      ; Установка положения курсора
114+  F388 EB                   ex      de, hl
115+  F389 CD 02 F4             call    setCursorPosPanel
116+  F38C EB                   ex      de, hl
117+  F38D
118+  F38D                      ; Печать имени файла
119+  F38D CD D6 F3             call    printFileNamOnPanel
120+  F390
121+  F390                      ; Предыдущий файл
122+  F390 C5                   push    bc
123+  F391 01 E0 FF             ld      bc, 10000h - DIR_DESCR_SIZE
124+  F394 09                   add     hl, bc
125+  F395 C1                   pop     bc
126+  F396
127+  F396                      ; Курсор на предыдущую строку
128+  F396 7B                   ld      a, e
129+  F397 D6 0A                sub     10
130+  F399 5F                   ld      e, a
131+  F39A
132+  F39A                      ; Курсор на предыдущий столбец
133+  F39A FE 20                cp      P_FILE_LIST_Y
134+  F39C D2 88 F3             jp nc,  pfdu_Loop
135+  F39F 7A                   ld      a, d
136+  F3A0 11 CA 06             ld      de, (P_FILE_LIST_X1 << 8) + P_FILE_LIST_Y_MAX - 10
137+  F3A3 FE 14                cp      20
138+  F3A5 D2 88 F3             jp nc,  pfdu_Loop
139+  F3A8
140+  F3A8 C9                   ret
141+  F3A9
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFilePanel.inc
 94   F3A9                  INCLUDE "printCurDrive.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printCurDrive.inc
  1+  F3A9              ;----------------------------------------------------------------------------
  2+  F3A9              ; MXOS NC.COM
  3+  F3A9              ; Вывод текущего накопителя
  4+  F3A9              ;
  5+  F3A9              ; 2013-12-18 Дизассемблировано vinxru
  6+  F3A9              ;----------------------------------------------------------------------------
  7+  F3A9
  8+  F3A9              printCurDrive:    ; Узнаем активное устройство
  9+  F3A9 1E 02                    ld    e, 2
 10+  F3AB CD 42 C8                 call  bios_fileGetSetDrive
 11+  F3AE
 12+  F3AE              printDrive: ; Выводим его букву на экран
 13+  F3AE C6 41                    add   a, 'A'
 14+  F3B0 4F                       ld    c, a
 15+  F3B1 CD 09 C8                 call  bios_printChar
 16+  F3B4
 17+  F3B4                          ; Выводим ':'
 18+  F3B4 0E 3A                    ld    c, ':'
 19+  F3B6 C3 09 C8                 jp    bios_printChar
 20+  F3B9
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printCurDrive.inc
 95   F3B9                  INCLUDE "rwBytePanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\rwBytePanel.inc
  1+  F3B9              ;----------------------------------------------------------------------------
  2+  F3B9              ; MXOS NC.COM
  3+  F3B9              ; Запись значения в переменную панели
  4+  F3B9              ; [hl + state.activePanel] = a
  5+  F3B9              ;
  6+  F3B9              ; вход:
  7+  F3B9              ;   hl = адрес переменной панели A (state.panelA_info, state.panelA_drive и т.п.)
  8+  F3B9              ;   a  = значение переменной
  9+  F3B9              ;
 10+  F3B9              ; 2013-12-18 Дизассемблировано vinxru
 11+  F3B9              ;----------------------------------------------------------------------------
 12+  F3B9
 13+  F3B9              writeBytePanel:
 14+  F3B9 C5                       push  bc
 15+  F3BA E5                       push  hl
 16+  F3BB F5                       push  af
 17+  F3BC 4F                       ld    c, a
 18+  F3BD 3A B8 F7                 ld    a, (state.activePanel)
 19+  F3C0 A7                       and   a
 20+  F3C1 CA C5 F3                 jp z, loc_D97E
 21+  F3C4 23                       inc   hl
 22+  F3C5 71           loc_D97E:   ld    (hl), c
 23+  F3C6 F1                       pop   af
 24+  F3C7 E1                       pop   hl
 25+  F3C8 C1                       pop   bc
 26+  F3C9 C9                       ret
 27+  F3CA
 28+  F3CA              ;----------------------------------------------------------------------------
 29+  F3CA              ; MXOS NC.COM
 30+  F3CA              ; Чтение значения из переменной панели
 31+  F3CA              ; a = [hl + state.activePanel]
 32+  F3CA              ;
 33+  F3CA              ; вход:
 34+  F3CA              ;   hl = адрес переменной панели A (state.panelA_info, state.panelA_drive и т.п.)
 35+  F3CA              ;
 36+  F3CA              ; выход:
 37+  F3CA              ;   a = значение переменной
 38+  F3CA              ;
 39+  F3CA              ; 2013-12-18 Дизассемблировано vinxru
 40+  F3CA              ;----------------------------------------------------------------------------
 41+  F3CA
 42+  F3CA              readBytePanel:
 43+  F3CA E5                       push  hl
 44+  F3CB 3A B8 F7                 ld    a, (state.activePanel)
 45+  F3CE A7                       and   a
 46+  F3CF CA D3 F3                 jp z, loc_D98C
 47+  F3D2 23                       inc   hl
 48+  F3D3 7E           loc_D98C:   ld    a, (hl)
 49+  F3D4 E1                       pop   hl
 50+  F3D5 C9                       ret
 51+  F3D6
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\rwBytePanel.inc
 96   F3D6                  INCLUDE "printFileName.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFileName.inc
  1+  F3D6              ;----------------------------------------------------------------------------
  2+  F3D6              ; MXOS NC.COM
  3+  F3D6              ; Вывод имени файла в обычном виде с точкой
  4+  F3D6              ;
  5+  F3D6              ; вход:
  6+  F3D6              ;   hl - адрес дескриптора файла
  7+  F3D6              ;
  8+  F3D6              ; выход:
  9+  F3D6              ;   hl - указывает на следующее за расширением поле в дескрипторе файла
 10+  F3D6              ;
 11+  F3D6              ; 2022-01-31 SpaceEngineer
 12+  F3D6              ;----------------------------------------------------------------------------
 13+  F3D6
 14+  F3D6              ;printFileName:
 15+  F3D6              ;        push  bc
 16+  F3D6              ;        ld    c, ' '               ; прерываем печать имени по пробелу
 17+  F3D6              ;        ld    b, DIR_NAME_LENGTH   ; длина имени
 18+  F3D6              ;        call  printString2
 19+  F3D6              ;        ld    c, '.'
 20+  F3D6              ;        call  bios_printChar       ; печатаем точку
 21+  F3D6              ;        ld    b, 3                 ; длина расширения
 22+  F3D6              ;        call  printString2
 23+  F3D6              ;        pop   bc
 24+  F3D6              ;        ret
 25+  F3D6              ;
 26+  F3D6
 27+  F3D6              ;----------------------------------------------------------------------------
 28+  F3D6              ; MXOS NC.COM
 29+  F3D6              ; Вывод имени файла - 8 символов, путое место, 3 символа.
 30+  F3D6              ; Короткие имена дополняются пробелами, чтобы стереть предыдущий текст.
 31+  F3D6              ; Выводит только реальные символы, чтобы не портить экран при
 32+  F3D6              ; неотформатированном или повреждённом диске.
 33+  F3D6              ;
 34+  F3D6              ; вход:
 35+  F3D6              ;   hl - адрес дескриптора файла
 36+  F3D6              ;
 37+  F3D6              ; 2022-02-16 SpaceEngineer
 38+  F3D6              ;----------------------------------------------------------------------------
 39+  F3D6
 40+  F3D6              printFileNamOnPanel:
 41+  F3D6 E5                   push    hl
 42+  F3D7 C5                   push    bc
 43+  F3D8 01 00 08             ld      bc, DIR_NAME_LENGTH << 8    ; b = длина имени, с = 0 (без терминатора)
 44+  F3DB CD EC F3             call    printString2
 45+  F3DE 0E 18                ld      c, 18h                      ; курсор вправо
 46+  F3E0 CD 09 C8             call    bios_printChar
 47+  F3E3 01 00 03             ld      bc, 3 << 8                  ; b = длина расширения, с = 0 (без терминатора)
 48+  F3E6 CD EC F3             call    printString2
 49+  F3E9 C1                   pop     bc
 50+  F3EA E1                   pop     hl
 51+  F3EB C9                   ret
 52+  F3EC
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFileName.inc
 97   F3EC                  INCLUDE "printString2.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printString2.inc
  1+  F3EC              ;----------------------------------------------------------------------------
  2+  F3EC              ; MXOS NC.COM
  3+  F3EC              ; Вывод строки по адресу hl длиной b или до терминатора.
  4+  F3EC              ; Выводит только реальные символы, чтобы не портить экран при
  5+  F3EC              ; неотформатированном или повреждённом диске.
  6+  F3EC              ;
  7+  F3EC              ; вход:
  8+  F3EC              ;   hl = адрес строки
  9+  F3EC              ;   b  = макс. длина печати
 10+  F3EC              ;   c  = терминатор
 11+  F3EC              ;
 12+  F3EC              ; выход:
 13+  F3EC              ;   hl = адрес конца строки + 1
 14+  F3EC              ;
 15+  F3EC              ; 2022-01-31 SpaceEngineer
 16+  F3EC              ;----------------------------------------------------------------------------
 17+  F3EC
 18+  F3EC              printString2:
 19+  F3EC F5               push    af
 20+  F3ED D5               push    de
 21+  F3EE
 22+  F3EE              printString2loop:
 23+  F3EE 7E               ld      a, (hl)
 24+  F3EF B9               cp      c
 25+  F3F0 DA FF F3         jp c,   printString2exit
 26+  F3F3
 27+  F3F3 C5               push    bc
 28+  F3F4 E5               push    hl
 29+  F3F5
 30+  F3F5 CD 69 C8         call    bios_printCharReal
 31+  F3F8
 32+  F3F8 E1               pop     hl
 33+  F3F9 C1               pop     bc
 34+  F3FA
 35+  F3FA 23               inc     hl
 36+  F3FB 05               dec     b
 37+  F3FC C2 EE F3         jp nz,  printString2loop
 38+  F3FF
 39+  F3FF              printString2exit:
 40+  F3FF D1               pop     de
 41+  F400 F1               pop     af
 42+  F401 C9               ret
 43+  F402
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printString2.inc
 98   F402                  INCLUDE "setCursorPosPanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\setCursorPosPanel.inc
  1+  F402              ;----------------------------------------------------------------------------
  2+  F402              ; MXOS NC.COM
  3+  F402              ; Установка положения курсора с учетом активной панели
  4+  F402              ; вход:
  5+  F402              ;   hl - координаты курсора на панели
  6+  F402              ;
  7+  F402              ; 2013-12-18 Дизассемблировано vinxru
  8+  F402              ;----------------------------------------------------------------------------
  9+  F402
 10+  F402              setCursorPosPanel:
 11+  F402                          ; Сохраняем регистры
 12+  F402 E5                       push  hl
 13+  F403 F5                       push  af
 14+  F404
 15+  F404 3A B8 F7                 ld    a, (state.activePanel)
 16+  F407 A7                       and   a
 17+  F408 CA 0D F4                 jp z, loc_D9BA
 18+  F40B 3E 60                    ld    a, 96       ; Половина экрана
 19+  F40D 84           loc_D9BA:   add   a, h
 20+  F40E 67                       ld    h, a
 21+  F40F 22 FC 8F                 ld    (bios_vars.cursorY), hl
 22+  F412
 23+  F412                          ; Восстанавливаем регистры
 24+  F412 F1                       pop   af
 25+  F413 E1                       pop   hl
 26+  F414 C9                       ret
 27+  F415
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\setCursorPosPanel.inc
 99   F415                  INCLUDE "draw.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\draw.inc
  1+  F415              ;----------------------------------------------------------------------------
  2+  F415              ; MXOS NC.COM
  3+  F415              ; Рисование окошек
  4+  F415              ;
  5+  F415              ; 2013-12-18 Дизассемблировано vinxru
  6+  F415              ;----------------------------------------------------------------------------
  7+  F415
  8+  F415              draw:       ; Читаем 5 байт из hl в a, hl, c, b.
  9+  F415                          ; При этом de = hl+5
 10+  F415 7E                       ld  a, (hl)
 11+  F416 23                       inc   hl
 12+  F417 5E                       ld  e, (hl)
 13+  F418 23                       inc   hl
 14+  F419 56                       ld  d, (hl)
 15+  F41A 23                       inc   hl
 16+  F41B 4E                       ld  c, (hl)
 17+  F41C 23                       inc   hl
 18+  F41D 46                       ld  b, (hl)
 19+  F41E 23                       inc   hl
 20+  F41F EB                       ex    de, hl
 21+  F420
 22+  F420                          ; Если a=0 (первый байт), то выйти
 23+  F420 A7                       and   a
 24+  F421 C8                       ret Z
 25+  F422
 26+  F422                          ; Если не установлен 7-ой бит и активная панель правая, то X += 192
 27+  F422 FA 28 F4                 jp M, draw_0
 28+  F425 CD 54 F4                 call  activePanelPos
 29+  F428              draw_0:
 30+  F428
 31+  F428                          ; Если a&0xF==3, то заполнить c байт памяти байтом b
 32+  F428 E6 0F                    and   0Fh
 33+  F42A FE 03                    cp    3
 34+  F42C CA 3B F4                 jp z, draw3
 35+  F42F
 36+  F42F                          ; Если a&0xF==1, то нарисовать веритикальную линию
 37+  F42F                          ; b-первый байт, c-средняя длина, *de++ - последний байт
 38+  F42F FE 01                    cp    1
 39+  F431 CA 42 F4                 jp z, draw1
 40+  F434
 41+  F434                          ; Нарисовать окно
 42+  F434 CD 62 F4                 call  draw_window
 43+  F437
 44+  F437              draw_next:  ; hl=de и следующий цикл
 45+  F437 EB                       ex    de, hl
 46+  F438 C3 15 F4                 jp    draw
 47+  F43B
 48+  F43B              ; ---------------------------------------------------------------------------
 49+  F43B              ; Заполнить c байт памяти байтом b
 50+  F43B
 51+  F43B 78           draw3:            ld    a, b
 52+  F43C CD A4 F4                 call  memset_hl_a_c
 53+  F43F C3 37 F4                 jp    draw_next
 54+  F442
 55+  F442              ; ---------------------------------------------------------------------------
 56+  F442              ; Линия hl-адрес, b-первый байт, c-средняя длина, *de++ - последний байт
 57+  F442
 58+  F442              draw1:            ; *hl++ |= b
 59+  F442 78                       ld    a, b
 60+  F443 B6                       or    (hl)
 61+  F444 77                       ld  (hl), a
 62+  F445 24                       inc   h
 63+  F446
 64+  F446              loc_D9F3:
 65+  F446 36 FF                ld  (hl), 0FFh
 66+  F448 24                       inc   h
 67+  F449 0D                       dec   c
 68+  F44A C2 46 F4                 jp nz,      loc_D9F3
 69+  F44D
 70+  F44D                          ; hl |= *de++
 71+  F44D 1A                       ld    a, (de)
 72+  F44E 13                       inc   de
 73+  F44F B6                       or    (hl)
 74+  F450 77                       ld  (hl), a
 75+  F451
 76+  F451 C3 37 F4                 jp    draw_next
 77+  F454
 78+  F454              ; ---------------------------------------------------------------------------
 79+  F454              ; Если активная правая панель, сдвинуть адрес на пол экрана
 80+  F454
 81+  F454              activePanelPos:
 82+  F454 F5                   push      af
 83+  F455 3A B8 F7                 ld    a, (state.activePanel)
 84+  F458 A7                       and   a
 85+  F459 CA 5E F4                 jp z, loc_DA0B
 86+  F45C 3E 18                    ld    a, 24
 87+  F45E 84           loc_DA0B:   add   a, h
 88+  F45F 67                       ld    h, a
 89+  F460 F1                       pop   af
 90+  F461 C9                       ret
 91+  F462
 92+  F462              ; ---------------------------------------------------------------------------
 93+  F462              ; Рисуем окно (b=ширина-2, с=высота-6)
 94+  F462
 95+  F462              draw_window:      ; Если h - 90h + b >= 0x2F, то есть X + b + 2 > ширина экрана, то выйти
 96+  F462 7C                       ld    a, h
 97+  F463 D6 90                    sub   90h
 98+  F465 80                       add   a, b
 99+  F466 FE 2F                    cp    2Fh
100+  F468 D0                       ret nc
101+  F469
102+  F469                          ; Сохранить регистры
103+  F469 E5                       push  hl
104+  F46A C5                       push  bc
105+  F46B D5                       push  de
106+  F46C
107+  F46C                          ; Линия
108+  F46C 11 5B F7                 ld    de, v_window
109+  F46F CD 86 F4                 call  line313
110+  F472
111+  F472                          ; Повтор b раз
112+  F472 D5           draw_window_2:    push  de
113+  F473 CD 86 F4                 call  line313
114+  F476 05                       dec   b
115+  F477 CA 7E F4                 jp z, draw_window_3
116+  F47A D1                       pop   de
117+  F47B C3 72 F4                 jp    draw_window_2
118+  F47E
119+  F47E              ; ---------------------------------------------------------------------------
120+  F47E
121+  F47E              draw_window_3:
122+  F47E F1                   pop af
123+  F47F
124+  F47F                          ; Линия
125+  F47F CD 86 F4                 call  line313
126+  F482
127+  F482                          ; Восстановить регистры и выйти
128+  F482 D1                       pop   de
129+  F483 C1                       pop   bc
130+  F484 E1                       pop   hl
131+  F485 C9                       ret
132+  F486
133+  F486              ; ---------------------------------------------------------------------------
134+  F486              ; Вертикальная линия. Задается три верхних байта, заполнитель и три нижних
135+  F486
136+  F486              line313:    ; Сохраняем регистры
137+  F486 C5                       push  bc
138+  F487 E5                       push  hl
139+  F488
140+  F488                          ; Копируем 3 байта (сверху-вниз)
141+  F488 CD 97 F4                 call  memcpy_hl_de_3
142+  F48B
143+  F48B                          ; 4 ый байт повторяем С-раз (сверху-вниз)
144+  F48B 1A                       ld    a, (de)
145+  F48C CD A4 F4                 call  memset_hl_a_c
146+  F48F 13                       inc   de
147+  F490
148+  F490                          ; Копируем 3 байта (сверху-вниз)
149+  F490 CD 97 F4                 call  memcpy_hl_de_3
150+  F493
151+  F493                          ; Восстаналиваем регистры
152+  F493 E1                       pop   hl
153+  F494 C1                       pop   bc
154+  F495
155+  F495                          ; Вправо
156+  F495 24                       inc   h
157+  F496 C9                       ret
158+  F497
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\draw.inc
100   F497                  INCLUDE "tools.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tools.inc
  1+  F497              ;----------------------------------------------------------------------------
  2+  F497              ; MXOS NC.COM
  3+  F497              ; Копирвоание 3-х байт из адреса de в адрес hl
  4+  F497              ;
  5+  F497              ; 2013-12-18 Дизассемблировано vinxru
  6+  F497              ;----------------------------------------------------------------------------
  7+  F497
  8+  F497              memcpy_hl_de_3:
  9+  F497 1A                   ld    a, (de)
 10+  F498 77                   ld    (hl), a
 11+  F499 23                   inc   hl
 12+  F49A 13                   inc   de
 13+  F49B
 14+  F49B 1A                   ld    a, (de)
 15+  F49C 77                   ld    (hl), a
 16+  F49D 23                   inc   hl
 17+  F49E 13                   inc   de
 18+  F49F
 19+  F49F 1A                   ld    a, (de)
 20+  F4A0 77                   ld    (hl), a
 21+  F4A1 23                   inc   hl
 22+  F4A2 13                   inc   de
 23+  F4A3
 24+  F4A3 C9                   ret
 25+  F4A4
 26+  F4A4              ;----------------------------------------------------------------------------
 27+  F4A4              ; MXOS NC.COM
 28+  F4A4              ; Заполнение памяти по адресу hl байтом a длинной c
 29+  F4A4              ;
 30+  F4A4              ; 2013-12-18 Дизассемблировано vinxru
 31+  F4A4              ;----------------------------------------------------------------------------
 32+  F4A4
 33+  F4A4              memset_hl_a_c:
 34+  F4A4 77                   ld      (hl), a
 35+  F4A5 23                   inc     hl
 36+  F4A6 0D                   dec     c
 37+  F4A7 C2 A4 F4             jp nz,  memset_hl_a_c
 38+  F4AA C9                   ret
 39+  F4AB
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tools.inc
101   F4AB                  INCLUDE "compactName.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\compactName.inc
  1+  F4AB              ;----------------------------------------------------------------------------
  2+  F4AB              ; MXOS NC.COM
  3+  F4AB              ; Убрать из имени пробелы
  4+  F4AB              ;
  5+  F4AB              ; вход:
  6+  F4AB              ;   hl - откуда
  7+  F4AB              ;   de - куда
  8+  F4AB              ;
  9+  F4AB              ; сохраняемые регистры:
 10+  F4AB              ;   hl, bc
 11+  F4AB              ;
 12+  F4AB              ; 2013-12-18 Дизассемблировано vinxru
 13+  F4AB              ;----------------------------------------------------------------------------
 14+  F4AB
 15+  F4AB              compactName:
 16+  F4AB                          ; Сохраняем регистры
 17+  F4AB E5                       push    hl
 18+  F4AC C5                       push    bc
 19+  F4AD
 20+  F4AD                          ; Копируем до пробела, но не более DIR_NAME_LENGTH букв
 21+  F4AD 01 08 00                 ld      bc, DIR_NAME_LENGTH
 22+  F4B0 7E           compactName_1:      ld  a, (hl)
 23+  F4B1 FE 20                    cp      ' '
 24+  F4B3 CA BD F4                 jp z,   compactName_2
 25+  F4B6 12                       ld      (de),a
 26+  F4B7 23                       inc     hl
 27+  F4B8 13                       inc     de
 28+  F4B9 0D                       dec     c
 29+  F4BA C2 B0 F4                 jp nz,  compactName_1
 30+  F4BD
 31+  F4BD              compactName_2:
 32+  F4BD                          ; Пропущенные символы исходной строки
 33+  F4BD 09                       add     hl, bc
 34+  F4BE
 35+  F4BE                          ; Точка
 36+  F4BE 3E 2E                    ld      a, '.'
 37+  F4C0 12                       ld      (de),a
 38+  F4C1 13                       inc     de
 39+  F4C2
 40+  F4C2                          ; Копируем до пробела, но не более 3 букв
 41+  F4C2 0E 03                    ld      c, 3
 42+  F4C4              compactName_3:
 43+  F4C4 7E                       ld      a, (hl)
 44+  F4C5 FE 20                    cp      ' '
 45+  F4C7 CA D1 F4                 jp z,   compactName_4
 46+  F4CA 12                       ld      (de),a
 47+  F4CB 23                       inc     hl
 48+  F4CC 13                       inc     de
 49+  F4CD 0D                       dec     c
 50+  F4CE C2 C4 F4                 jp nz,  compactName_3
 51+  F4D1
 52+  F4D1              compactName_4:
 53+  F4D1 EB                       ex      de, hl
 54+  F4D2 F5                       push    af
 55+  F4D3
 56+  F4D3                          ; Если последний символ '.', то удаляем его
 57+  F4D3 2B                       dec     hl
 58+  F4D4 7E                       ld      a, (hl)
 59+  F4D5 FE 2E                    cp      '.'
 60+  F4D7 CA DB F4                 jp z,   compactName_5
 61+  F4DA 23                       inc     hl
 62+  F4DB
 63+  F4DB              compactName_5:
 64+  F4DB                          ; Добавляем пробел и конец строки
 65+  F4DB 36 20                    ld      (hl), ' '
 66+  F4DD 23                       inc     hl
 67+  F4DE 36 0D                    ld      (hl), 0Dh
 68+  F4E0 23                       inc     hl
 69+  F4E1 36 00                    ld      (hl), 0
 70+  F4E3
 71+  F4E3                          ; Результат в de
 72+  F4E3 EB                       ex    de, hl
 73+  F4E4
 74+  F4E4                          ; Восстаналиваем регистры и выходим
 75+  F4E4 F1                       pop   af
 76+  F4E5 C1                       pop   bc
 77+  F4E6 E1                       pop   hl
 78+  F4E7 C9                       ret
 79+  F4E8
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\compactName.inc
102   F4E8                  INCLUDE "input.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\input.inc
  1+  F4E8              ;----------------------------------------------------------------------------
  2+  F4E8              ; MXOS NC.COM
  3+  F4E8              ; Ввод строки
  4+  F4E8              ;
  5+  F4E8              ; 2013-12-18 Дизассемблировано vinxru
  6+  F4E8              ;----------------------------------------------------------------------------
  7+  F4E8
  8+  F4E8              input:      ; Вывод строки
  9+  F4E8 E5                       push    hl
 10+  F4E9 21 19 F8                 ld      hl, vars.input
 11+  F4EC CD 99 EA                 call    printStringInv
 12+  F4EF E1                       pop     hl
 13+  F4F0
 14+  F4F0                          ; Включаем инверсию
 15+  F4F0 3E 01                    ld      a, 1
 16+  F4F2 32 FA 8F                 ld      (bios_vars.inverse),a
 17+  F4F5
 18+  F4F5              input_loop: ; Ввод символа
 19+  F4F5 CD 03 C8                 call  bios_getch
 20+  F4F8
 21+  F4F8                          ; Enter или ESC
 22+  F4F8 FE 0D                    cp      0Dh
 23+  F4FA CA 2D F5                 jp z,   input_exit
 24+  F4FD FE 1B                    cp      1Bh
 25+  F4FF CA 2D F5                 jp z,   input_exit
 26+  F502
 27+  F502                          ; Если служебная клавиша или пробел, то пропускаем
 28+  F502 FE 21                    cp      21h
 29+  F504 DA F5 F4                 jp c,   input_loop
 30+  F507
 31+  F507                          ; Сохраняем для вывода
 32+  F507 4F                       ld      c, a
 33+  F508
 34+  F508                          ; Помещаем символ в буфер
 35+  F508 12                       ld      (de),a
 36+  F509
 37+  F509                          ; Удаление
 38+  F509 FE 7F                    cp      7Fh
 39+  F50B CA 1B F5                 jp z,   input_bkspc
 40+  F50E
 41+  F50E                          ; Если переполнение
 42+  F50E 3E 30                    ld      a, (vars.input + P_INPUT_WIDTH) & 0FFh  ; a = младший байт адреса пследнего байта буфера
 43+  F510 BB                       cp      e
 44+  F511 CA F5 F4                 jp z,   input_loop
 45+  F514
 46+  F514                          ; Вывод символа на экран
 47+  F514 CD 09 C8                 call    bios_printChar
 48+  F517
 49+  F517                          ; Увеличение длины строки
 50+  F517 13                       inc     de
 51+  F518
 52+  F518 C3 F5 F4                 jp      input_loop
 53+  F51B
 54+  F51B              ; ---------------------------------------------------------------------------
 55+  F51B
 56+  F51B              input_bkspc:
 57+  F51B                          ; Если это начало строки, выходим
 58+  F51B 3E 19                    ld      a, vars.input & 0FFh
 59+  F51D BB                       cp      e
 60+  F51E CA F5 F4                 jp z,   input_loop
 61+  F521
 62+  F521                          ; Уменьшаем длину строки
 63+  F521 1D                       dec     e
 64+  F522
 65+  F522                          ; Стираем символ с экрана
 66+  F522 E5                       push    hl
 67+  F523 21 05 F6                 ld      hl, asc_DC17
 68+  F526 CD 18 C8                 call    bios_printString
 69+  F529 E1                       pop     hl
 70+  F52A
 71+  F52A C3 F5 F4                 jp      input_loop
 72+  F52D
 73+  F52D              ; ---------------------------------------------------------------------------
 74+  F52D
 75+  F52D              input_exit:
 76+  F52D                          ; Сохраняем ESC или Enter для выхода
 77+  F52D 4F                       ld      c, a
 78+  F52E
 79+  F52E                          ; Записываем в конец строки 0Dh, 0
 80+  F52E EB                       ex      de, hl
 81+  F52F 36 0D                    ld      (hl), 0Dh
 82+  F531 23                       inc     hl
 83+  F532 AF                       xor     a
 84+  F533 77                       ld      (hl), a
 85+  F534
 86+  F534                          ; Восстанавливаем инверсию
 87+  F534 32 FA 8F                 ld      (bios_vars.inverse),a
 88+  F537
 89+  F537                          ; Выход
 90+  F537 79                       ld      a, c
 91+  F538 C9                       ret
 92+  F539
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\input.inc
103   F539
104   F539              ;---------------------------------------------------------------------------
105   F539              ; Константы и переменные
106   F539              ;---------------------------------------------------------------------------
107   F539
108   F539 4E 61 6D 65  aNameName:          DB "Name",18h,18h,18h,18h,18h,18h,18h,18h,18h,18h,18h,18h,"Name",0
108   F53D 18 18 18 18
108   F541 18 18 18 18
108   F545 18 18 18 18
108   F549 4E 61 6D 65
108   F54D 00
109   F54E 46 31 20 4C  aF1LeftF2RighF3:    DB "F1 Left F2 Rght F3 Info F4 Edit F5 Copy F6 RMov F7 Load F8 Del",0
109   F552 65 66 74 20
109   F556 46 32 20 52
109   F55A 67 68 74 20
109   F55E 46 33 20 49
109   F562 6E 66 6F 20
109   F566 46 34 20 45
109   F56A 64 69 74 20
109   F56E 46 35 20 43
109   F572 6F 70 79 20
109   F576 46 36 20 52
109   F57A 4D 6F 76 20
109   F57E 46 37 20 4C
109   F582 6F 61 64 20
109   F586 46 38 20 44
109   F58A 65 6C 00
110   F58D 43 6F 6D 6D  aCommanderVer:      DB "Commander version 2.0",0
110   F591 61 6E 64 65
110   F595 72 20 76 65
110   F599 72 73 69 6F
110   F59D 6E 20 32 2E
110   F5A1 30 00
111   F5A3 28 43 29 20  aCopyright:         DB "(C) Omsk 1992, SPb 2022",0
111   F5A7 4F 6D 73 6B
111   F5AB 20 31 39 39
111   F5AF 32 2C 20 53
111   F5B3 50 62 20 32
111   F5B7 30 32 32 00
112   F5BB 46 69 6C 65  aFileIsReanOnly:    DB "File is read-only!",0
112   F5BF 20 69 73 20
112   F5C3 72 65 61 64
112   F5C7 2D 6F 6E 6C
112   F5CB 79 21 00
113   F5CE 41 20 20 20  aABCD:              DB "A   B   C   D",0
113   F5D2 42 20 20 20
113   F5D6 43 20 20 20
113   F5DA 44 00
114   F5DC 45 20 20 20  aEFGH:              DB "E   F   G   H",0
114   F5E0 46 20 20 20
114   F5E4 47 20 20 20
114   F5E8 48 00
115   F5EA 43 68 6F 6F  aChooseDrive:       DB "Choose drive:",0
115   F5EE 73 65 20 64
115   F5F2 72 69 76 65
115   F5F6 3A 00
116   F5F8 44 65 6C 65  aDeleteFrom:        DB "Delete from ",0
116   F5FC 74 65 20 66
116   F600 72 6F 6D 20
116   F604 00
117   F605 08 20 08 00  asc_DC17:           DB 8, ' ',8, 0
118   F609 43 6F 70 79  aCopyFromTo:        DB "Copy from    to",8,8,8,8,8, 0
118   F60D 20 66 72 6F
118   F611 6D 20 20 20
118   F615 20 74 6F 08
118   F619 08 08 08 08
118   F61D 00
119   F61E 43 61 6E 27  aCantCreateFile:    DB "Can",39,"t create file!",0
119   F622 74 20 63 72
119   F626 65 61 74 65
119   F62A 20 66 69 6C
119   F62E 65 21 00
120   F631 52 65 6E 61  aRemoveFromTo:      DB "Rename/move from    to",8,8,8,8,8, 0
120   F635 6D 65 2F 6D
120   F639 6F 76 65 20
120   F63D 66 72 6F 6D
120   F641 20 20 20 20
120   F645 74 6F 08 08
120   F649 08 08 08 00
121   F64D 18 4B 42 20  aKBytesExtMemory:   DB 18h,"KB extended memory",0   ; здесь и далее 18h вместо ведущего пробела,
121   F651 65 78 74 65
121   F655 6E 64 65 64
121   F659 20 6D 65 6D
121   F65D 6F 72 79 00
122   F661 18 62 79 74  aKBytesMemory:      DB 18h,"bytes Memory",0         ; чтобы не портить цвет предыдущего символа
122   F665 65 73 20 4D
122   F669 65 6D 6F 72
122   F66D 79 00
123   F66F 18 62 79 74  aKBytesFree:        DB 18h,"bytes Free",0
123   F673 65 73 20 46
123   F677 72 65 65 00
124   F67B 18 4B 42 20  aKBytesTotalOnDrv:  DB 18h,"KB total on drive ",0
124   F67F 74 6F 74 61
124   F683 6C 20 6F 6E
124   F687 20 64 72 69
124   F68B 76 65 20 00
125   F68F 18 4B 42 20  aKBytesFreeOnDrv:   DB 18h,"KB free  on drive ",0
125   F693 66 72 65 65
125   F697 20 20 6F 6E
125   F69B 20 64 72 69
125   F69F 76 65 20 00
126   F6A3 18 66 69 6C  aFilesUse:          DB 18h,"files use ",0
126   F6A7 65 73 20 75
126   F6AB 73 65 20 00
127   F6AF 18 4B 42 20  aKBytesIn:          DB 18h,"KB in ",0
127   F6B3 69 6E 20 00
128   F6B7 56 6F 6C 75  aVolumeLabel:       DB "Volume label: ",0
128   F6BB 6D 65 20 6C
128   F6BF 61 62 65 6C
128   F6C3 3A 20 00
129   F6C6 44 72 69 76  aDrive:             DB "Drive ",0
129   F6CA 65 20 00
130   F6CD 18 68 61 73  aHasNoDriver:       DB 18h,"has no driver",0
130   F6D1 20 6E 6F 20
130   F6D5 64 72 69 76
130   F6D9 65 72 00
131   F6DC 18 69 73 20  aNotFormatted:      DB 18h,"is not formatted",0
131   F6E0 6E 6F 74 20
131   F6E4 66 6F 72 6D
131   F6E8 61 74 74 65
131   F6EC 64 00
132   F6EE 53 61 76 65  aSaveFromToTape:    DB "Save from    to tape",8,8,8,8,8,8,8,8,8,8, 0
132   F6F2 20 66 72 6F
132   F6F6 6D 20 20 20
132   F6FA 20 74 6F 20
132   F6FE 74 61 70 65
132   F702 08 08 08 08
132   F706 08 08 08 08
132   F70A 08 08 00
133   F70D 53 61 76 69  aSavingToTape:      DB "Saving to tape",0
133   F711 6E 67 20 74
133   F715 6F 20 74 61
133   F719 70 65 00
134   F71C 4C 6F 61 64  aLoadingFromTapeTo: DB "Loading from tape to ",0
134   F720 69 6E 67 20
134   F724 66 72 6F 6D
134   F728 20 74 61 70
134   F72C 65 20 74 6F
134   F730 20 00
135   F732 45 72 72 6F  aErrorLoadingTa:    DB "Error loading from tape",0
135   F736 72 20 6C 6F
135   F73A 61 64 69 6E
135   F73E 67 20 66 72
135   F742 6F 6D 20 74
135   F746 61 70 65 00
136   F74A
137   F74A 41 3A 4E 43  aNcExt:             DB "A:NC.EXT",0
137   F74E 2E 45 58 54
137   F752 00
138   F753 41 3A 45 2E  aEditor:            DB "A:E.COM",0Dh      ; терминатором тут должно быть 0Dh
138   F757 43 4F 4D 0D
139   F75B
140   F75B              ; Описания окон
141   F75B
142   F75B 7F           v_window:   DB 01111111b            ; Верхний левый угол
143   F75C 40                       DB 01000000b
144   F75D 5F                       DB 01011111b
145   F75E 50                       DB 01010000b            ; Левый край
146   F75F 5F                       DB 01011111b            ; Нижний левый угол
147   F760 40                       DB 01000000b
148   F761 7F                       DB 01111111b
149   F762
150   F762 FF                       DB 11111111b            ; Верх окна
151   F763 00                       DB 00000000b
152   F764 FF                       DB 11111111b
153   F765
154   F765 00                       DB 00000000b            ; Содержимое окна
155   F766
156   F766 FF                       DB 11111111b            ; Низ окна
157   F767 00                       DB 00000000b
158   F768 FF                       DB 11111111b
159   F769
160   F769 FE                       DB 11111110b            ; Правый верхний угол
161   F76A 02                       DB 00000010b
162   F76B FA                       DB 11111010b
163   F76C 0A                       DB 00001010b            ; Правая граница
164   F76D FA                       DB 11111010b            ; Правый нижний угол
165   F76E 02                       DB 00000010b
166   F76F FE                       DB 11111110b
167   F770
168   F770                          MACRO G_WINDOW A,X,Y,W,H
169   F770 ~                            DB A|2, Y, 90h+(X>>3), H-6, (W>>3)-2
170   F770                          ENDM
171   F770
172   F770                          MACRO G_LINE A,X,Y,W
173   F770 ~                            DB A|1, Y, 90h+(X>>3), (((X&7)+W+7)>>3)-2, 0FFh>>(X&7), (0FF00h>>((W+X)&7)) & 0FFh
174   F770                          ENDM
175   F770
176   F770                          MACRO G_VLINE A,X,Y,H
177   F770 ~                            DB A|3, Y, 90h+(X>>3), H, 80h>>(X&7)
178   F770                          ENDM
179   F770
180   F770              g_filePanel:
181   F770                          G_WINDOW 0, 0, 0, 192, 230        ; 2, 0, 90h, 0E0h, 16h
181   F770 02 00 90 E0 >                DB 0|2, 0, 90h+(0>>3), 230-6, (192>>3)-2
181   F774 16          >
182   F775                          G_LINE   0, 4, 208, 184           ; 1, 0D0h, 90h, 16h, 0Fh, 0F0h
182   F775 01 D0 90 16 >                DB 0|1, 208, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
182   F779 0F F0       >
183   F77B                          G_VLINE  0, 96, 3, 205            ; 3, ?, 9Ch, 0CDh, 80h
183   F77B 03 03 9C CD >                DB 0|3, 3, 90h+(96>>3), 205, 80h>>(96&7)
183   F77F 80          >
184   F780 00                       DB 0
185   F781
186   F781              g_infoPanel:
187   F781                          G_WINDOW 0, 0, 0, 192, 230        ; 2, 0, 90h, 0E0h, 16h
187   F781 02 00 90 E0 >                DB 0|2, 0, 90h+(0>>3), 230-6, (192>>3)-2
187   F785 16          >
188   F786                          G_LINE   0, 4, 31, 184            ; 1, 1Fh, 90h, 16h, 0Fh, 0F0h
188   F786 01 1F 90 16 >                DB 0|1, 31, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
188   F78A 0F F0       >
189   F78C                          G_LINE   0, 4, 136, 184           ; 1, 70h, 90h, 16h, 0Fh, 0F0h
189   F78C 01 88 90 16 >                DB 0|1, 136, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
189   F790 0F F0       >
190   F792 00                       DB 0
191   F793
192   F793              g_chooseDrive:
193   F793                          G_WINDOW 0, 40, 85, 112, 50       ; 2, 55h, 95h, 02Ch, 0Ch
193   F793 02 55 95 2C >                DB 0|2, 85, 90h+(40>>3), 50-6, (112>>3)-2
193   F797 0C          >
194   F798                          G_LINE   0, 44, 103, 104          ; 1, 67h, 95h, 0Ch, 0Fh, 0F0h
194   F798 01 67 95 0C >                DB 0|1, 103, 90h+(44>>3), (((44&7)+104+7)>>3)-2, 0FFh>>(44&7), (0FF00h>>((104+44)&7)) & 0FFh
194   F79C 0F F0       >
195   F79E 00                       DB 0
196   F79F
197   F79F              g_window1:
198   F79F                          G_WINDOW 80h, 112, 80, 160, 37    ; 82h, 50h, 9Eh, 1Fh, 12h
198   F79F 82 50 9E 1F >                DB 80h|2, 80, 90h+(112>>3), 37-6, (160>>3)-2
198   F7A3 12          >
199   F7A4                          G_LINE   80h, 116, 98, 152        ; 81h, 62h, 9Eh, 12h, 0Fh, 0F0h
199   F7A4 81 62 9E 12 >                DB 80h|1, 98, 90h+(116>>3), (((116&7)+152+7)>>3)-2, 0FFh>>(116&7), (0FF00h>>((152+116)&7)) & 0FFh
199   F7A8 0F F0       >
200   F7AA 00                       DB 0
201   F7AB
202   F7AB              g_window2:
203   F7AB                          G_WINDOW 80h, 104, 114, 176, 37   ; 82h, 72h, 9Dh, 1Fh, 14h
203   F7AB 82 72 9D 1F >                DB 80h|2, 114, 90h+(104>>3), 37-6, (176>>3)-2
203   F7AF 14          >
204   F7B0                          G_LINE   80h, 108, 132, 168       ; 81h, 84h, 9Dh, 14h, 0Fh, 0F0h
204   F7B0 81 84 9D 14 >                DB 80h|1, 132, 90h+(108>>3), (((108&7)+168+7)>>3)-2, 0FFh>>(108&7), (0FF00h>>((168+108)&7)) & 0FFh
204   F7B4 0F F0       >
205   F7B6 00                       DB 0
206   F7B7
207   F7B7              ; Коодинаты элементов панелей
208   F7B7
209   F7B7              P_NAME_X          = 17  ; Заголовок панели "NAME"
210   F7B7              P_NAME_Y          = 16
211   F7B7
212   F7B7              P_FILE_LIST_X1    = 6   ; Файловая таблица (2 колонки)
213   F7B7              P_FILE_LIST_X2    = 54
214   F7B7              P_FILE_LIST_Y     = 32
215   F7B7
216   F7B7              P_FILE_LIST_H     = 18  ; Высота файловой таблицы в строках
217   F7B7              P_FILE_LIST_Y_MAX = P_FILE_LIST_H * 10 + P_FILE_LIST_Y
218   F7B7
219   F7B7              P_DRIVE_LETTER_X  = 9   ; Буква имени диска внизу панели
220   F7B7              P_DRIVE_LETTER_Y  = 222
221   F7B7              P_FILE_NAME_X     = 15  ; Имя файла внизу панели
222   F7B7              P_FILE_NAME_Y     = 222
223   F7B7              P_FILE_DATA_X     = 57  ; Данные о файле (адрес загрузки, размер)
224   F7B7              P_FILE_DATA_Y     = 222
225   F7B7
226   F7B7              P_INPUT_WIDTH     = 23  ; Длина поля ввода имени файла в символах
227   F7B7
228   F7B7              ;-----------------------------------------------------------------------
229   F7B7              ; Переменные
230   F7B7              ;-----------------------------------------------------------------------
231   F7B7
232   F7B7              ; Блок переменных состояния
233   F7B7              ; Сохраняется в неиспользуемом секторе нулевой страницs RAM-диска
234   F7B7
235   F7B7                  STRUCT NC_STATE
236   F7B7 ~            initState           DB    5Ah   ; признак, что NC.COM уже запускался
237   F7B7 ~            activePanel         DB    0     ; номер активной панели
238   F7B7 ~            panelA_info         DB    0     ; 1 = панель A в режиме информации
239   F7B7 ~            panelB_info         DB    0     ; 1 = панель B в режиме информации
240   F7B7 ~            panelA_drive        DB    0     ; номер диска панели A
241   F7B7 ~            panelB_drive        DB    7     ; номер диска панели B
242   F7B7 ~            panelA_filesCnt     DB    0     ; количество файлов на панели A
243   F7B7 ~            panelB_filesCnt     DB    0     ; количество файлов на панели B
244   F7B7 ~            panelA_firstFile    DB    0     ; c какого файла начинается панель A
245   F7B7 ~            panelB_firstFile    DB    0     ; c какого файла начинается панель B
246   F7B7 ~            panelA_curFile      DB    0     ; на каком файле курсор на панели A
247   F7B7 ~            panelB_curFile      DB    0     ; на каком файле курсор на панели B
248   F7B7                  ENDS
249   F7B7
250   F7B7 5A 00 00 00  state   NC_STATE
250   F7BB 00 07 00 00
250   F7BF 00 00 00 00
251   F7C3              stateEnd:           ; адрес конца блока переменных состояния
252   F7C3
253   F7C3              ; Другие переменные - не включены в бинарник
254   F7C3
255   F7C3                  STRUCT NC_VARIABLES
256   F7C3 ~            cmdLinePos      DW    0
257   F7C3 ~            cmdLineEnd      DW    0
258   F7C3 ~            chooseDrive     DB    0
259   F7C3 ~            tapeSaveCRC     DW    0         ; контрольная сумма файла с ленты
260   F7C3 ~            savedSP         DW    0
261   F7C3 ~            tapeLoadAddr    DW    0         ; адрес загрузки файла с ленты
262   F7C3 ~            diskInfoPtr     DW    0         ; адрес структуны DISK_INFO
263   F7C3 ~            cmdLine         BLOCK 59, 0FFh  ; командная строка
264   F7C3 ~            cmdLineCtrl     DB    0FFh      ; контроль переполнения командной строки
265   F7C3 ~                            BLOCK 13, 0FFh
266   F7C3 ~            input           BLOCK 21, 0FFh
267   F7C3 ~                            BLOCK 11
268   F7C3 ~            tempFileDescr   FILE_DESCRIPTOR
269   F7C3                  ENDS
270   F7C3
271   F7C3              ; Установка только значения метки vars (машинный код не генерируется, переменные могут содержать мусор)
272   F7C3              vars    NC_VARIABLES = $
273   F7C3
274   F7C3              ; Максимальный допустимый размер NC.COM - до адреса 0E200h
275   F7C3                  IF NEW_MEMORY_MAP
276   F7C3                      ASSERT_DONT_FIT FAT_CACHE_ADDR
276   F7C3             >         IF $ > FAT_CACHE_ADDR
276   F7C3 ~           >           ASSERT 0
276   F7C3 ~           >           DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
276   F7C3             >         ENDIF
277   F7C3                  ELSE
278   F7C3 ~                    ASSERT_DONT_FIT 0E200h
279   F7C3                  ENDIF
280   F7C3
281   F7C3                  END
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\NC.asm
