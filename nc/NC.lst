# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\NC.asm
  1   0000              ;----------------------------------------------------------------------------
  2   0000              ; MXOS - Файловый менеджер NC.COM
  3   0000              ;
  4   0000              ; 2013-12-18 Дизассемблировано и доработано vinxru
  5   0000              ; 2022-01-31 Доработано SpaceEngineer
  6   0000              ;----------------------------------------------------------------------------
  7   0000
  8   0000                  INCLUDE "../include/mxos.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\../include/mxos.inc
  1+  0000              ;-----------------------------------------------------------------------
  2+  0000              ; MXOS
  3+  0000              ; Точки входа и настройки сборки MXOS
  4+  0000              ;
  5+  0000              ; Новая карта памяти:
  6+  0000              ;   8FDF-8FFF - [  32 B] Переменные
  7+  0000              ;   9000-BFFF - [12  KB] Экран
  8+  0000              ;   C000-D3FF - [5120 B] DOS.SYS
  9+  0000              ;   D400-DBFF - [2048 B] Свободно (2048 байт)
 10+  0000              ;   DC00-EDFF - [ 512 B] Драйвер магнитофона
 11+  0000              ;   DE00-DFFF - [ 512 B] Драйвер флеш-диска
 12+  0000              ;   E000-E7FF - [2048 B] Шрифт
 13+  0000              ;   E800-FAFF - [4864 B] Системные программы (NC.COM, E.COM, DL-RED.COM, FORMAT.COM, MON2.COM, ...)
 14+  0000              ;   FB00-FEFF - [1024 B] Дисковый кэш (fat + каталог)
 15+  0000              ;   FF00-FF81 - [ 130 B] Командная строка
 16+  0000              ;   FF82-FFBF - [  62 B] Стек
 17+  0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
 18+  0000              ;   FFE0-FFFF - [  32 B] Оборудование
 19+  0000              ;
 20+  0000              ; Старая карта памяти:
 21+  0000              ;   8FDF-8FFF - [  32 B] Переменные
 22+  0000              ;   9000-BFFF - [12  KB] Экран
 23+  0000              ;   C000-CFFF - [4096 B] DOS.SYS
 24+  0000              ;   D000-E1FF - [4607 B] Системные программы (NC.COM, E.COM, DL-RED.COM)
 25+  0000              ;   E200-E5FF - [1024 B] Свободно (1024 байт)
 26+  0000              ;   E600-E7FF - [ 512 B] Драйвер магнитофона
 27+  0000              ;   E800-E8FF - [ 256 B] Свободно (256 байт)
 28+  0000              ;   E900-F0FF - [2048 B] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
 29+  0000              ;   F100-F8FF - [2048 B] Системные программы (FORMAT.COM, MON2.COM, ...)
 30+  0000              ;   F900-F9FF - [ 256 B] Свободно (256 байт)
 31+  0000              ;   FA00-FAFF - [ 256 B] Драйвер флеш-диска
 32+  0000              ;   FB00-FEFF - [1024 B] Дисковый буфер (fat + каталог)
 33+  0000              ;   FF00-FF81 - [ 130 B] Командная строка
 34+  0000              ;   FF82-FFBF - [  62 B] Стек
 35+  0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвер обмена с RAM диском
 36+  0000              ;   FFE0-FFFF - [  32 B] Оборудование
 37+  0000              ;-----------------------------------------------------------------------
 38+  0000
 39+  0000
 40+  0000              ;-----------------------------------------------------------------------
 41+  0000              ; Конфигурация сборки
 42+  0000              ;-----------------------------------------------------------------------
 43+  0000
 44+  0000              NEW_MEMORY_MAP       =  1       ; Новая карта памяти
 45+  0000              RAMD_MAX_PAGE        =  16      ; Максимальное количество страниц RAM диска
 46+  0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
 47+  0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
 48+  0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
 49+  0000              EMBED_FONT           =  0       ; Встроить шрифт в программу (при запуске шрифт копируется на FONT_ADDR)
 50+  0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
 51+  0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
 52+  0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
 53+  0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
 54+  0000
 55+  0000                  IF  NEW_MEMORY_MAP
 56+  0000              FONT_ADDR = 0E000h  ; Адрес шрфита
 57+  0000                  ELSE
 58+  0000 ~            FONT_ADDR = 0E900h  ; Адрес шрфита
 59+  0000                  ENDIF
 60+  0000
 61+  0000                  IF  LOAD_FONT
 62+  0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
 63+  0000                  ELSE
 64+  0000 ~            FONT_ADDR_DIV_8 = -1
 65+  0000                  ENDIF
 66+  0000
 67+  0000              ;-----------------------------------------------------------------------
 68+  0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
 69+  0000              ; Доступ к переменным из программ польователя:
 70+  0000              ; ld a, bios_vars.lastKey
 71+  0000              ;-----------------------------------------------------------------------
 72+  0000
 73+  0000                  STRUCT BIOS_VARIABLES
 74+  0000 ~            _reserv_1     DW      -1              ; 8FDFh -
 75+  0000 ~            tapeError     DW      0C800h          ; 8FE1h - Адрес, куда происходит переход при ошибке чтения с ленты
 76+  0000 ~            tapeAddr      DW      -1              ; 8FE3h - Адрес программы загруженной с ленты
 77+  0000 ~            _reserv_2     DW      -1              ; 8FE5h -
 78+  0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; 8FE7h - Адрес альтернативного знакогенератора / 8
 79+  0000 ~            cursorCfg     DB       21h ; 0A9h     ; 8FE9h - Внешний вид курсора (биты: 7 - мигание (если 0), 654 - положение (Y) от низа строки, 3210 - размер по высоте)
 80+  0000 ~            koi7          DB       0   ; 0FFh     ; 8FEAh - 0FFh = включен KOI-7, 0 = включен KOI-8
 81+  0000 ~            escMode       DB      -1              ; 8FEBh - Обработка ESC-последовательности
 82+  0000 ~            keyLocks      DB      0BAh ; 3Ah      ; 8FECh - Caps Lock или Рус/Lat (3A - прописные анг, BA - строчные анг, BB - прописные рус, 3B - строчные рус)
 83+  0000 ~            _reserv_3     DW      -1              ; 8FEDh -
 84+  0000 ~            lastLastKey   DB      -1              ; 8FEFh - Предпоследняя нажатая клавиша
 85+  0000 ~            lastKey       DB      -1              ; 8FF0h - Последняя нажатая клавиша
 86+  0000 ~            beepFreq      DB       5Fh            ; 8FF1h - Частота звукового сигнала (также влияет на длительность)
 87+  0000 ~            beepDuration  DB       20h            ; 8FF2h - Длительность звукового сигнала (сколько раз повторять посылку)
 88+  0000 ~            tapeInverse   DB      0FFh            ; 8FF3h - Признак инверсии данных с ленты
 89+  0000 ~            cursorDelay   DB       20h            ; 8FF4h - Задержка мигания курсора
 90+  0000 ~            antiBsDelay   DB      0E0h            ; 8FF5h - Задержка защиты от дребезга контактов клавиш
 91+  0000 ~            oldSP         DW      -1              ; 8FF6h - Используется для сохранения SP некоторыми функциями
 92+  0000 ~            ramPageCount  DB      RAMD_MAX_PAGE   ; 8FF8h - Количество детектированных 64кб страниц RAM-диска
 93+  0000 ~            _reserv_4     DB       0              ; 8FF9h -
 94+  0000 ~            inverse       DW       0              ; 8FFAh - Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
 95+  0000 ~            cursorY       DB      -1              ; 8FFCh - Положение курсора по вертикали в пикселях
 96+  0000 ~            cursorX       DB      -1              ; 8FFDh - Положение курсора по горизонтали в пикселях / 2
 97+  0000 ~            writeDelay    DB      28h             ; 8FFEh - Скорость при записи на ленту
 98+  0000 ~            readDelay     DB      3Ch             ; 8FFFh - Скорость при чтении с ленты
 99+  0000                  ENDS
100+  0000
101+  0000              ; Блок переменных BIOS начинается с адреса 8FDFh
102+  0000              bios_vars   BIOS_VARIABLES = 8FDFh
103+  0000
104+  0000              ;-----------------------------------------------------------------------
105+  0000              ; Стандартные точки входа ОС
106+  0000              ; Отмеченные [OLD] применять не рекомендуется
107+  0000              ; Отмеченные [MXOS2] - новые в MXOS 2
108+  0000              ;-----------------------------------------------------------------------
109+  0000
110+  0000              bios_init               = 0C000h ; Теплая перезагрузка
111+  0000
112+  0000              ; Устаревшие точки, лечше не применять
113+  0000              bios_keyScanOld         = 0C003h ; [OLD] Получить код нажатой клавиши, = bios_keyScan
114+  0000              bios_drawCursorOld      = 0C006h ; [OLD] Нарисовать/стереть курсор
115+  0000              bios_clearScreenOld     = 0C010h ; [OLD] Оистка экрана
116+  0000              bios_printCharOld       = 0C037h ; [OLD] Вывод символа на экран
117+  0000              bios_beep_Old           = 0C170h ; [OLD] Звуковой сигнал
118+  0000              bios_delay_l            = 0C18Fh ; [OLD] Задержка l циклов
119+  0000              bios_delay_b            = 0C190h ; [OLD] Задержка b циклов
120+  0000              bios_getchOld           = 0C337h ; [OLD] Ожидание ввода с клавиатуры
121+  0000              bios_tapeReadOld        = 0C377h ; [OLD] Чтение байта с магнитофона
122+  0000              bios_tapeWriteOld       = 0C3D0h ; [OLD] Запись байта на магнитофон
123+  0000              bios_cmp_hl_de          = 0C427h ; [OLD] Сравнить hl и de
124+  0000              bios_memcpy_bc_hl       = 0C42Dh ; [OLD] Скопировать блок памяти
125+  0000              bios_printStringOld     = 0C438h ; [OLD] Вывод строки на экран
126+  0000
127+  0000              ; Стандартные точки C800h
128+  0000              bios_reboot             = 0C800h ; Запустить NC.COM
129+  0000              bios_getch              = 0C803h ; Ожидание ввода с клавиатуры
130+  0000              bios_tapeRead           = 0C806h ; Чтение байта с магнитофона
131+  0000              bios_printChar          = 0C809h ; Вывод символа на экран
132+  0000              bios_tapeWrite          = 0C80Ch ; Запись байта на магнитофон
133+  0000              bios_input              = 0C80Fh ; Ввод строки с клавиатуры
134+  0000              bios_keyCheck           = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
135+  0000              bios_printHexByte       = 0C815h ; Вывод HEX числа на экран (байт)
136+  0000              bios_printString        = 0C818h ; Вывод строки на экран
137+  0000              bios_keyScan            = 0C81Bh ; Получить код нажатой клавиши
138+  0000              bios_getCursorPos       = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
139+  0000              bios_setCursorPos       = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
140+  0000              bios_tapeLoad           = 0C824h ; Загрузить программу с магнитофона
141+  0000              bios_tapeSave           = 0C827h ; Сохранить программу на магнитофон
142+  0000              bios_calcCS             = 0C82Ah ; Расчет контрольной суммы
143+  0000              bios_printHexWord       = 0C82Dh ; Вывод HEX числа на экран (слово)
144+  0000              bios_getMemTop          = 0C830h ; Получить объем доступной памяти
145+  0000              bios_setMemTop          = 0C833h ; Установить объем доступной памяти
146+  0000              bios_printer            = 0C836h ; Напечатать байт на принтере
147+  0000                  IF RAMFOS_COMPATIBILITY
148+  0000              bios_strToHex           = 0C839h ; [MXOS2] Преобразвоние строки в HEX формате в число
149+  0000                  ELSE
150+  0000 ~            bios_rebootAlt          = 0C839h ; Запустить NC.COM
151+  0000                  ENDIF
152+  0000              bios_rebootAlt2         = 0C83Ch ; Запустить NC.COM
153+  0000              bios_fileList           = 0C83Fh ; Получить список файлов
154+  0000              bios_fileGetSetDrive    = 0C842h ; Получить/установить активное устройство
155+  0000              bios_fileCreate         = 0C845h ; Создать файл
156+  0000              bios_fileLoad           = 0C848h ; Загрузить файл по адресу из заголовка этого файла
157+  0000              bios_fileDelete         = 0C84Bh ; Удалить файл
158+  0000              bios_fileRename         = 0C84Eh ; Переименовать файл
159+  0000              bios_fileLoadInfo       = 0C851h ; Загрузить информацию о файле
160+  0000              bios_fileGetSetAddr     = 0C854h ; Получить/установить адрес загрузки файла
161+  0000              bios_fileGetSetAttr     = 0C857h ; Получить/установить атрибуты файла
162+  0000              bios_fileNamePrepare    = 0C85Ah ; Преобразовать имя файла во внутренний формат
163+  0000              bios_fileExec           = 0C85Dh ; Запустить файл
164+  0000              bios_installDriver      = 0C860h ; Установить драйвер накопителя
165+  0000              bios_diskDriver         = 0C863h ; Драйвер выбранного диска
166+  0000              bios_fileLoad2          = 0C866h ; Загрузить файл по адресу de
167+  0000
168+  0000              ; Новые точки C800h MXOS2
169+  0000              bios_printCharReal      = 0C869h ; [MXOS2] Вывод символа на экран (только реальные символы)
170+  0000              bios_printDecWord       = 0C86Ch ; [MXOS2] Вывод числа экран в десятичной форме
171+  0000              bios_setRAMDDriver      = 0C86Fh ; [MXOS2] Установить драйвр рам-диска
172+  0000              bios_getDriveFreeSpace  = 0C872h ; [MXOS2] Получить оставшийся свободный объем диска
173+  0000              bios_upperCase          = 0C875h ; [MXOS2] Перевод кода символа КОИ-8 в верхний регистр
174+  0000              bios_strcmp             = 0C878h ; [MXOS2] Сравнение строк, чувствительное к регистру
175+  0000              bios_stricmp            = 0C87Bh ; [MXOS2] Сравнение строк, нечувствительное к регистру
176+  0000              bios_sub_hl_de          = 0C87Eh ; [MXOS2] Вычитание hl и de: hl = hl - de
177+  0000              bios_div_hl_2           = 0C881h ; [MXOS2] Деление hl на 2: hl = hl / 2
178+  0000              bios_mul_hl_de          = 0C884h ; [MXOS2] Умножение hl на de: hl = hl * de
179+  0000              bios_div_hl_de          = 0C887h ; [MXOS2] Деление hl на de: hl = hl / de, de = hl % de
180+  0000
181+  0000              ;-----------------------------------------------------------------------
182+  0000              ; Адрес таблицы переходов драйвера магнитофона
183+  0000              ;-----------------------------------------------------------------------
184+  0000
185+  0000              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
186+  0000
187+  0000              ;-----------------------------------------------------------------------
188+  0000              ; Непереключаемое ОЗУ ПК "Специалист-MX" (0FFC0h-0FFDF, 32 байта)
189+  0000              ;-----------------------------------------------------------------------
190+  0000
191+  0000              bios_RAMDRead   = 0FFC0h ; п/п чтения из ДОЗУ
192+  0000              bios_RAMDWrite  = 0FFD0h ; п/п записи в  ДОЗУ
193+  0000
194+  0000              ;-----------------------------------------------------------------------
195+  0000              ; Порты устройств ПК "Специалист-MX2" (0FFE0h-0FFFF, 32 байта)
196+  0000              ;-----------------------------------------------------------------------
197+  0000
198+  0000              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
199+  0000              IO_KEYB_B       =  0FFE1h
200+  0000              IO_KEYB_C       =  0FFE2h
201+  0000              IO_KEYB_MODE    =  0FFE3h
202+  0000              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
203+  0000              IO_PROG_B       =  0FFE5h
204+  0000              IO_PROG_C       =  0FFE6h
205+  0000              IO_PROG_MODE    =  0FFE7h
206+  0000              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
207+  0000              IO_FDD_TRACK    =  0FFE9h
208+  0000              IO_FDD_SECTOR   =  0FFEAh
209+  0000              IO_FDD_DATA     =  0FFEBh
210+  0000              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
211+  0000              IO_TIMER_CH1    =  0FFEDh
212+  0000              IO_TIMER_CH2    =  0FFEEh
213+  0000              IO_TIMER_MODE   =  0FFEFh
214+  0000              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
215+  0000              IO_FDD_MOTOR    =  0FFF1h
216+  0000              IO_FDD_SIDE     =  0FFF2h
217+  0000              IO_FDD_DRIVE    =  0FFF3h
218+  0000              IO_COLOR        =  0FFF8h   ; регистр цвета
219+  0000              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
220+  0000              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
221+  0000              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
222+  0000              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
223+  0000
224+  0000              ;-----------------------------------------------------------------------
225+  0000              ; Структура файловой системы
226+  0000              ;-----------------------------------------------------------------------
227+  0000
228+  0000              ; Структура каталога
229+  0000              FILE_DESCR_SIZE  = 32   ; размер дескриптора файла в каталоге (байт)
230+  0000              FILE_NAME_LENGTH = 8    ; длина имени файла  (байт)
231+  0000              FAT_ITEM_SIZE    = 2    ; размер записи в таблице FAT (байт)
232+  0000
233+  0000              SECTOR_SIZE  = 00100h   ; размер сектора 256 байт
234+  0000              CLUSTER_SIZE = 00100h   ; размер кластера 256 байт
235+  0000
236+  0000              ; Специальные коды кластеров FAT
237+  0000              FAT12_BAD = 00FF7h  ; плохой кластер
238+  0000              FAT16_BAD = 0FFF7h
239+  0000              FAT12_EOC = 00FFFh  ; последний кластер файла
240+  0000              FAT16_EOC = 0FFFFh
241+  0000              FAT12_RES = 00FFFh  ; зарезервированный кластер
242+  0000              FAT16_RES = 0FFFFh
243+  0000
244+  0000              ;-----------------------------------------------------------------------
245+  0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
246+  0000              ;-----------------------------------------------------------------------
247+  0000
248+  0000                  STRUCT FILE_DESCRIPTOR  ; 32 байта
249+  0000 ~            name            BLOCK   FILE_NAME_LENGTH    ; смещение 00h, 8 байт  - имя файла
250+  0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
251+  0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
252+  0000 ~            ntReserved      BLOCK   1                   ; смещение 0Ch, 1 байт  - используются в Windows NT
253+  0000 ~            createTimeTenth BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
254+  0000 ~            createTime      BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
255+  0000 ~            createDate      BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
256+  0000 ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
257+  0000 ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
258+  0000 ~            writeTime       BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
259+  0000 ~            writeDate       BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
260+  0000 ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
261+  0000 ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
262+  0000                  ENDS
263+  0000
264+  0000              ;-----------------------------------------------------------------------
265+  0000              ; Информация о файле (компактный вариант дескриптора)
266+  0000              ; Почти совместимо с дескриптором оригинального Коммандера
267+  0000              ;-----------------------------------------------------------------------
268+  0000
269+  0000              FILE_INFO_SIZE = 16     ; размер структуры (байт)
270+  0000
271+  0000                  STRUCT FILE_INFO    ; 16 байт
272+  0000 ~            name            BLOCK   FILE_NAME_LENGTH    ; смещение 00h, 8 байт  - имя файла
273+  0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
274+  0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
275+  0000 ~            loadAddress     BLOCK   2                   ; смещение 0Eh, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый
276+  0000 ~            size            BLOCK   2                   ; смещение 0Ch, 2 байта - размер файла в байтах
277+  0000                  ENDS
278+  0000
279+  0000              ;-----------------------------------------------------------------------
280+  0000              ; Информация о активном накопителе (диске)
281+  0000              ;-----------------------------------------------------------------------
282+  0000
283+  0000                  STRUCT DISK_INFO
284+  0000 ~            sectorSize          BLOCK   2   ; размер сектора, байт (256, 512, 1024)
285+  0000 ~            sectorsPerCluster   BLOCK   2   ; размер кластера, секторов (1, 2, 4, 8)
286+  0000 ~            resSectors          BLOCK   2   ; сколько секторов занимает зарезервированная область = первый сектор таблицы fat
287+  0000 ~            fatSectors          BLOCK   2   ; сколько секторов занимает таблица fat
288+  0000 ~            dirSectors          BLOCK   2   ; сколько секторов занимает корневой каталог
289+  0000 ~            totalSectors        BLOCK   2   ; сколько всего секторов на диске
290+  0000 ~            rootDirMaxFiles     BLOCK   2   ; максимум файлов в корневом каталоге
291+  0000 ~            descrPerSector      BLOCK   2   ; сколько дескрипторов файлов вмещается в один сектор
292+  0000 ~            fatNumCells         BLOCK   2   ; количество ячеек в таблице fat (= fatSectors * sectorSize / 2)
293+  0000 ~            dirStartSector      BLOCK   2   ; первый сектор корневого каталога
294+  0000 ~            dataStartSector     BLOCK   2   ; первый сектор области данных
295+  0000 ~            volumeLabel         BLOCK  12   ; метка тома и 0 в конце
296+  0000 ~            isValid             BLOCK   1   ; 0 = нет драйвера, 1 = диск не распознан, 2 = диск распознан, корректно отформатирован
297+  0000                  ENDS
298+  0000
299+  0000              DISK_NO_DRIVER = 0
300+  0000              DISK_INVALID   = 1
301+  0000              DISK_VALID     = 2
302+  0000
303+  0000              ;-----------------------------------------------------------------------
304+  0000              ; Буферы в памяти
305+  0000              ;-----------------------------------------------------------------------
306+  0000
307+  0000              ; Дисковый кэш
308+  0000              FAT_CACHE_ADDR = 0FB00h ; адрес кэша секторов fat в памяти
309+  0000              FAT_CACHE_SIZE = 1024   ; размер кэша в байтах
310+  0000              FAT_CACHE_CAPACITY = FAT_CACHE_SIZE / SECTOR_SIZE   ; сколько секторов вмещается в кэш
311+  0000
312+  0000              ; Буфер для загрузки BAT файла
313+  0000                  IF NEW_MEMORY_MAP
314+  0000              BAT_BUFFER = 0E800h
315+  0000                  ELSE
316+  0000 ~            BAT_BUFFER = 0FC00h
317+  0000                  ENDIF
318+  0000
319+  0000              ; Командная строка и стек
320+  0000              CMD_LINE   = 0FF00h  ; 192 байта, но в конце стек
321+  0000              STACK_ADDR = 0FFC0h  ; стек
322+  0000
323+  0000              ;-----------------------------------------------------------------------
324+  0000              ; Всякие полезности
325+  0000              ;-----------------------------------------------------------------------
326+  0000
327+  0000              ; Макрос для заполнения памяти от текущего адреса до указанного
328+  0000                  MACRO ORG_PAD adr
329+  0000 ~                     IF $ > adr
330+  0000 ~                       ; вывод сообщения об ошибке
331+  0000 ~                       ASSERT 0
332+  0000 ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
333+  0000 ~                     ELSE
334+  0000 ~                       ; заполнение памяти
335+  0000 ~                       BLOCK adr-$, 0FFh
336+  0000 ~                     ENDIF
337+  0000 ~                     ORG adr
338+  0000                  ENDM
339+  0000
340+  0000                  MACRO ORG_PAD0 adr
341+  0000 ~                     IF $ > adr
342+  0000 ~                       ; вывод сообщения об ошибке
343+  0000 ~                       ASSERT 0
344+  0000 ~                       DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
345+  0000 ~                     ELSE
346+  0000 ~                       ; заполнение памяти
347+  0000 ~                       BLOCK adr-$, 0
348+  0000 ~                     ENDIF
349+  0000 ~                     ORG adr
350+  0000                  ENDM
351+  0000
352+  0000              ; Макросы для проверки текущего адреса
353+  0000                  MACRO ASSERT_EQUAL adr
354+  0000 ~                     IF $ != adr
355+  0000 ~                       ASSERT 0
356+  0000 ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
357+  0000 ~                     ENDIF
358+  0000                  ENDM
359+  0000
360+  0000                  MACRO ASSERT_DONT_FIT adr
361+  0000 ~                     IF $ > adr
362+  0000 ~                       ASSERT 0
363+  0000 ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
364+  0000 ~                     ENDIF
365+  0000                  ENDM
366+  0000
367+  0000              ;-----------------------------------------------------------------------
368+  0000              ; Конец
369+  0000              ;-----------------------------------------------------------------------
370+  0000
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\../include/mxos.inc
  9   0000
 10   0000                  IF NEW_MEMORY_MAP
 11   0000                      ORG 0E800h
 12   0000                  ELSE
 13   0000 ~                    ORG 0D000h
 14   0000                  ENDIF
 15   E800
 16   E800              ; Список файлов на всю высоту панелей
 17   E800              FULL_PANELS = 0
 18   E800
 19   E800              ; Предустановки цветов:
 20   E800              ; 0 = vinxru
 21   E800              ; 1 = новый
 22   E800              ; 2 = Norton Commander
 23   E800              COLOR_PRESET = 1
 24   E800
 25   E800              COLOR_CMDLINE    =  070h        ; Цвет командной строки
 26   E800              COLOR_CMDSCREEN  =  COLOR_BIOS  ; Цвет командного экрана (когда панели спрятаны)
 27   E800
 28   E800                  IF COLOR_PRESET == 0
 29   E800 ~
 30   E800 ~            COLOR_BORDER     =  0F1h    ; Цвет рамки
 31   E800 ~            COLOR_PANELNAME  =  0A1h    ; Цвет заголовка панели (NAME)
 32   E800 ~            COLOR_FILE       =  0B1h    ; Цвет файлов
 33   E800 ~            COLOR_INFOLINE   =  0B1h    ; Цвет строки информации о текущем файле
 34   E800 ~            COLOR_CURSOR     =  0B0h    ; Цвет выделенного файла (инверсный)
 35   E800 ~            COLOR_DIALOG     =  007h    ; Цвет окон диалогов F1-F9
 36   E800 ~            COLOR_DIALOG_ERR =  047h    ; Цвет текста на окне с сообщением об ошибке
 37   E800 ~            COLOR_INFOHEADER =  0A1h    ; Заголовок информационной панели
 38   E800 ~            COLOR_INFONUMBER =  0E1h    ; Цифры на информационной панели
 39   E800 ~            COLOR_INFOTEXT   =  0F1h    ; Текст на информационной панели
 40   E800 ~            COLOR_HELP_F     =  040h    ; Цвет функциональных клавиш в строке подсказки
 41   E800 ~            COLOR_HELP_TEXT  =  071h    ; Цвет текста в строке подсказки
 42   E800 ~
 43   E800                  ELSEIF COLOR_PRESET == 1
 44   E800
 45   E800              COLOR_BORDER     =  0F1h    ; Цвет рамки
 46   E800              COLOR_PANELNAME  =  0E1h    ; Цвет заголовка панели (NAME)
 47   E800              COLOR_FILE       =  0B1h    ; Цвет файлов
 48   E800              COLOR_INFOLINE   =  0B1h    ; Цвет строки информации о текущем файле
 49   E800              COLOR_CURSOR     =  030h    ; Цвет выделенного файла (инверсный)
 50   E800              COLOR_DIALOG     =  007h    ; Цвет окон диалогов F1-F9
 51   E800              COLOR_DIALOG_ERR =  047h    ; Цвет текста на окне с сообщением об ошибке
 52   E800              COLOR_INFOHEADER =  0E1h    ; Заголовок информационной панели
 53   E800              COLOR_INFONUMBER =  0E1h    ; Цифры на информационной панели
 54   E800              COLOR_INFOTEXT   =  0F1h    ; Текст на информационной панели
 55   E800              COLOR_HELP_F     =  060h    ; Цвет функциональных клавиш в строке подсказки
 56   E800              COLOR_HELP_TEXT  =  030h    ; Цвет текста в строке подсказки
 57   E800
 58   E800                  ELSE
 59   E800 ~
 60   E800 ~            COLOR_BORDER     =  0B1h    ; Цвет рамки
 61   E800 ~            COLOR_PANELNAME  =  0E1h    ; Цвет заголовка панели (NAME)
 62   E800 ~            COLOR_FILE       =  0B1h    ; Цвет файлов
 63   E800 ~            COLOR_INFOLINE   =  0B1h    ; Цвет строки информации о текущем файле
 64   E800 ~            COLOR_CURSOR     =  030h    ; Цвет выделенного файла (инверсный)
 65   E800 ~            COLOR_DIALOG     =  007h    ; Цвет окон диалогов F1-F9
 66   E800 ~            COLOR_DIALOG_ERR =  047h    ; Цвет текста на окне с сообщением об ошибке
 67   E800 ~            COLOR_INFOHEADER =  0B1h    ; Заголовок информационной панели
 68   E800 ~            COLOR_INFONUMBER =  0E1h    ; Цифры на информационной панели
 69   E800 ~            COLOR_INFOTEXT   =  0B1h    ; Текст на информационной панели
 70   E800 ~            COLOR_HELP_F     =  070h    ; Цвет функциональных клавиш в строке подсказки
 71   E800 ~            COLOR_HELP_TEXT  =  030h    ; Цвет текста в строке подсказки
 72   E800 ~
 73   E800                  ENDIF
 74   E800
 75   E800              ;---------------------------------------------------------------------------
 76   E800              ; Макросы
 77   E800              ;---------------------------------------------------------------------------
 78   E800
 79   E800              ; Когда цвет включен, макрос вставляет такой код
 80   E800                  MACRO COLOR x
 81   E800 ~                    IF ENABLE_COLOR
 82   E800 ~                        ld a, x
 83   E800 ~                        ld (IO_COLOR), a
 84   E800 ~                    ENDIF
 85   E800                  ENDM
 86   E800
 87   E800              ; Макрос для нахождения координат строки длиной W, отцентрированной горизонтально
 88   E800                  MACRO CENTER_LINE w, y
 89   E800 ~                    ld  hl, ((60h - w * 3 / 2) << 8) + y
 90   E800 ~                    ld  (bios_vars.cursorY), hl
 91   E800                  ENDM
 92   E800
 93   E800              ;---------------------------------------------------------------------------
 94   E800              ; Код
 95   E800              ;---------------------------------------------------------------------------
 96   E800
 97   E800                  INCLUDE "start.inc"     ; Продолжается в main
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\start.inc
  1+  E800              ;----------------------------------------------------------------------------
  2+  E800              ; MXOS NC.COM
  3+  E800              ; Запуск
  4+  E800              ;
  5+  E800              ; 2013-12-18 Дизассемблировано vinxru
  6+  E800              ;----------------------------------------------------------------------------
  7+  E800
  8+  E800              Start:      ; Отключаем инверсию
  9+  E800 21 00 00                 ld      hl, 0
 10+  E803 22 FA 8F                 ld      (bios_vars.inverse), hl
 11+  E806
 12+  E806                          ; Загружаем состояние. Если ZF, значит, уже запускали NC.COM.
 13+  E806                          ; Иначе сохраняем состояние.
 14+  E806 CD 3F EA                 call    loadState
 15+  E809 CA 0F E8                 jp z,   formatCalled
 16+  E80C
 17+  E80C                          ; Сохраняем состояние
 18+  E80C CD 23 EA                 call    saveState
 19+  E80F
 20+  E80F              ; ---------------------------------------------------------------------------
 21+  E80F
 22+  E80F              formatCalled:
 23+  E80F                          ; Выводим строку с кнопками
 24+  E80F                          COLOR   COLOR_HELP_F
 24+  E80F             >        IF ENABLE_COLOR
 24+  E80F 3E 60       >            ld a, COLOR_HELP_F
 24+  E811 32 F8 FF    >            ld (IO_COLOR), a
 24+  E814             >        ENDIF
 25+  E814 0E 1F                    ld      c, 1Fh  ; очистка экрана
 26+  E816 CD 09 C8                 call    bios_printChar
 27+  E819 21 FF 01                 ld      hl, 1FFh
 28+  E81C 22 FC 8F                 ld      (bios_vars.cursorY), hl
 29+  E81F 21 4C F5                 ld      hl, aF1LeftF2RighF3
 30+  E822 CD 18 C8                 call    bios_printString
 31+  E825
 32+  E825                          ; Раскрашиваем строку с кнопками
 33+  E825                          COLOR   COLOR_HELP_TEXT
 33+  E825             >        IF ENABLE_COLOR
 33+  E825 3E 30       >            ld a, COLOR_HELP_TEXT
 33+  E827 32 F8 FF    >            ld (IO_COLOR), a
 33+  E82A             >        ENDIF
 34+  E82A 21 F7 92                 ld      hl, 92F7h           ; адрес первого прямоугольника
 35+  E82D 16 08                    ld      d, 8                ; количество прямоугольников
 36+  E82F              colToolbarLoop:
 37+  E82F 01 09 04                 ld      bc, (4 << 8) + 9    ; b = ширина = 4 байта, c = высота 9 пикселей
 38+  E832 CD F2 F0                 call    inverseRect
 39+  E835 24                       inc     h
 40+  E836 24                       inc     h
 41+  E837 15                       dec     d
 42+  E838 C2 2F E8                 jp nz,  colToolbarLoop
 43+  E83B
 44+  E83B                          ; Очищаем командную строку
 45+  E83B CD 3E F0                 call    clearCmdLine
 46+  E83E
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\start.inc
 98   E83E                  INCLUDE "main.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\main.inc
  1+  E83E              ;----------------------------------------------------------------------------
  2+  E83E              ; MXOS NC.COM
  3+  E83E              ; Основной цикл
  4+  E83E              ;
  5+  E83E              ; 2013-12-18 Дизассемблировано vinxru
  6+  E83E              ;----------------------------------------------------------------------------
  7+  E83E
  8+  E83E              mainReload: ; Перерисовываем обе панели
  9+  E83E 3A BB F7                 ld      a, (state.activePanel)
 10+  E841 A7                       and     a
 11+  E842 C2 4E E8                 jp      nz, mainReload_0
 12+  E845 CD 33 F1                 call    loadAndPrintA
 13+  E848 CD 24 F1                 call    loadAndPrintB
 14+  E84B C3 54 E8                 jp      mainDriveChanged
 15+  E84E
 16+  E84E              mainReload_0:
 17+  E84E CD 24 F1                 call    loadAndPrintB
 18+  E851 CD 33 F1                 call    loadAndPrintA
 19+  E854
 20+  E854              mainDriveChanged:
 21+  E854                          ; Вывод накопителя в ком строку
 22+  E854                          COLOR   COLOR_CMDLINE
 22+  E854             >        IF ENABLE_COLOR
 22+  E854 3E 70       >            ld a, COLOR_CMDLINE
 22+  E856 32 F8 FF    >            ld (IO_COLOR), a
 22+  E859             >        ENDIF
 23+  E859 21 F3 01                 ld      hl, 1F3h
 24+  E85C 22 FC 8F                 ld      (bios_vars.cursorY), hl
 25+  E85F 21 BE F7                 ld      hl, state.panelA_drive
 26+  E862 CD DD F3                 call    readBytePanel
 27+  E865 CD C1 F3                 call    printDrive
 28+  E868
 29+  E868                          ; Вывод информации о файле
 30+  E868 CD A0 F0                 call    printInfoLine
 31+  E86B
 32+  E86B              mainLoop:   ; Рисуем курсор выбранного файла
 33+  E86B                          COLOR   COLOR_CURSOR
 33+  E86B             >        IF ENABLE_COLOR
 33+  E86B 3E 30       >            ld a, COLOR_CURSOR
 33+  E86D 32 F8 FF    >            ld (IO_COLOR), a
 33+  E870             >        ENDIF
 34+  E870 CD 65 F0                 call    drawCursor
 35+  E873
 36+  E873                          ; Положение курсора в ком строке
 37+  E873 2A C6 F7                 ld      hl, (vars.cmdLinePos)
 38+  E876 22 FC 8F                 ld      (bios_vars.cursorY), hl
 39+  E879
 40+  E879                          ; Ждем нажатия клавиши
 41+  E879                          COLOR   COLOR_CMDLINE
 41+  E879             >        IF ENABLE_COLOR
 41+  E879 3E 70       >            ld a, COLOR_CMDLINE
 41+  E87B 32 F8 FF    >            ld (IO_COLOR), a
 41+  E87E             >        ENDIF
 42+  E87E CD 03 C8                 call    bios_getch
 43+  E881
 44+  E881                          ; Стираем курсор выбранного файла
 45+  E881 F5                       push    af
 46+  E882                          COLOR   COLOR_FILE
 46+  E882             >        IF ENABLE_COLOR
 46+  E882 3E B1       >            ld a, COLOR_FILE
 46+  E884 32 F8 FF    >            ld (IO_COLOR), a
 46+  E887             >        ENDIF
 47+  E887 CD 65 F0                 call    drawCursor
 48+  E88A F1                       pop     af
 49+  E88B
 50+  E88B                          ; Анализ нажатой клавиши
 51+  E88B 4F                       ld      c, a
 52+  E88C DA 27 E9                 jp c,   but_ctrl
 53+  E88F A7                       and     a     ; F1 (00h)
 54+  E890 CA 66 EE                 jp z,   but_F1
 55+  E893 3D                       dec     a     ; F2 (01h)
 56+  E894 CA 34 EE                 jp z,   but_F2
 57+  E897 3D                       dec     a     ; F3 (02h)
 58+  E898 CA 77 EF                 jp z,   but_F3
 59+  E89B 3D                       dec     a     ; F4 (03h)
 60+  E89C CA 77 E9                 jp z,   but_F4
 61+  E89F 3D                       dec     a     ; F5 (04h)
 62+  E8A0 CA 1C ED                 jp z,   but_F5
 63+  E8A3 3D                       dec     a     ; F6 (05h)
 64+  E8A4 CA B1 EC                 jp z,   but_F6
 65+  E8A7 3D                       dec     a     ; F7 (06h)
 66+  E8A8 CA FD EA                 jp z,   but_F7
 67+  E8AB 3D                       dec     a     ; F8 (07h)
 68+  E8AC CA B9 ED                 jp z,   but_F8
 69+  E8AF 3D                       dec     a     ; стрелка влево (08h)
 70+  E8B0 CA DA EF                 jp z,   but_Left
 71+  E8B3 3D                       dec     a     ; Tab/Таб (09h)
 72+  E8B4 CA 54 EF                 jp z,   but_Tab
 73+  E8B7 3D                       dec     a     ; End/ПС (0Ah)
 74+  E8B8 CA F0 EF                 jp z,   but_End
 75+  E8BB D6 02                    sub     2     ; Home/стрелка влево-вверх (0Ch)
 76+  E8BD CA E9 EF                 jp z,   but_Home
 77+  E8C0 3D                       dec     a     ; Enter/ВК (0Dh)
 78+  E8C1 CA 87 E9                 jp z,   but_Enter
 79+  E8C4 D6 0B                    sub     0Bh   ; стрелка вправо (18h)
 80+  E8C6 CA C2 EF                 jp z,   but_Right
 81+  E8C9 3D                       dec     a     ; стрелка вверх (19h)
 82+  E8CA CA B4 EF                 jp z,   but_Up
 83+  E8CD 3D                       dec     a     ; стрелка вниз (1Ah)
 84+  E8CE CA 9F EF                 jp z,   but_Down
 85+  E8D1 3D                       dec     a     ; Esc/АР2 (1Bh)
 86+  E8D2 CA 21 E9                 jp z,   but_Esc
 87+  E8D5 C6 1B                    add     1Bh
 88+  E8D7 FE 7F                    cp      7Fh   ; Del/ЗБ (7Fh)
 89+  E8D9 CA 06 E9                 jp z,   but_Bkspc
 90+  E8DC FE 8A                    cp      8Ah   ; F9 (8Ah)
 91+  E8DE CA F9 EB                 jp z,   but_F9
 92+  E8E1 FE 20        mainLoop_e: cp      20h   ; Пробел (20h)
 93+  E8E3 DA 6B E8                 jp c,   mainLoop
 94+  E8E6
 95+  E8E6                          ; Вывод символов в ком строку
 96+  E8E6 2A C8 F7                 ld      hl, (vars.cmdLineEnd)
 97+  E8E9 4F                       ld      c, a
 98+  E8EA 77                       ld      (hl), a
 99+  E8EB
100+  E8EB                          ; Если ком строка переполнена, выходим
101+  E8EB 3E 0E                    ld      a, vars.cmdLineCtrl & 0FFh
102+  E8ED BD                       cp      l
103+  E8EE CA 6B E8                 jp z,   mainLoop
104+  E8F1
105+  E8F1                          ; Увеличиваем длину
106+  E8F1 23                       inc     hl
107+  E8F2 22 C8 F7                 ld      (vars.cmdLineEnd), hl
108+  E8F5
109+  E8F5                          ; Выводим символ на экран
110+  E8F5                          COLOR   COLOR_CMDLINE
110+  E8F5             >        IF ENABLE_COLOR
110+  E8F5 3E 70       >            ld a, COLOR_CMDLINE
110+  E8F7 32 F8 FF    >            ld (IO_COLOR), a
110+  E8FA             >        ENDIF
111+  E8FA CD 09 C8                 call    bios_printChar
112+  E8FD
113+  E8FD              mainLoop_savePos: ; ?
114+  E8FD 2A FC 8F                 ld      hl, (bios_vars.cursorY)
115+  E900 22 C6 F7                 ld      (vars.cmdLinePos), hl
116+  E903
117+  E903 C3 6B E8                 jp      mainLoop
118+  E906
119+  E906              ; ---------------------------------------------------------------------------
120+  E906
121+  E906              but_Bkspc:  ; Если ком строка пустая, выходим
122+  E906 2A C8 F7                 ld      hl, (vars.cmdLineEnd)
123+  E909 3E D3                    ld      a, vars.cmdLine & 0FFh
124+  E90B BD                       cp      l
125+  E90C CA 6B E8                 jp z,   mainLoop
126+  E90F
127+  E90F                          ; Удаляем один символ
128+  E90F 2B                       dec     hl
129+  E910 22 C8 F7                 ld      (vars.cmdLineEnd), hl
130+  E913
131+  E913                          ; Стираем символ на экране
132+  E913                          COLOR   070h
132+  E913             >        IF ENABLE_COLOR
132+  E913 3E 70       >            ld a, 070h
132+  E915 32 F8 FF    >            ld (IO_COLOR), a
132+  E918             >        ENDIF
133+  E918 21 03 F6                 ld      hl, asc_DC17
134+  E91B CD 18 C8                 call    bios_printString
135+  E91E
136+  E91E C3 FD E8                 jp    mainLoop_savePos
137+  E921
138+  E921              ; ---------------------------------------------------------------------------
139+  E921
140+  E921 CD 3E F0     but_Esc:    call    clearCmdLine
141+  E924 C3 6B E8                 jp      mainLoop
142+  E927
143+  E927              ; ---------------------------------------------------------------------------
144+  E927
145+  E927 FE 0D        but_ctrl:   cp    0Dh
146+  E929 CA 2F E9                 jp z, ctrlEnter
147+  E92C C3 E1 E8                 jp    mainLoop_e
148+  E92F
149+  E92F              ; ---------------------------------------------------------------------------
150+  E92F
151+  E92F              ctrlEnter:  ; Если файл не выбран, выход
152+  E92F CD 06 F1                 call    getSelectedFile
153+  E932 7E                       ld      a, (hl)
154+  E933 FE FF                    cp      0FFh
155+  E935 CA 6B E8                 jp z,   mainLoop
156+  E938
157+  E938 CD 5E E9                 call    selFileToCmdLine
158+  E93B C3 6B E8                 jp      mainLoop
159+  E93E
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\main.inc
 99   E93E                  INCLUDE "selFileToCmdLine.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\selFileToCmdLine.inc
  1+  E93E              ;----------------------------------------------------------------------------
  2+  E93E              ; MXOS NC.COM
  3+  E93E              ; Сформировать строку пути выбраного файла
  4+  E93E              ;
  5+  E93E              ; вход:
  6+  E93E              ;   hl - адрес дескриптора файла
  7+  E93E              ;
  8+  E93E              ; 2013-12-18 Дизассемблировано vinxru
  9+  E93E              ;----------------------------------------------------------------------------
 10+  E93E
 11+  E93E              getSelFilePath:
 12+  E93E EB                   ex      de, hl
 13+  E93F
 14+  E93F                      ; Получаем текущий накопитель
 15+  E93F 21 BE F7             ld      hl, state.panelA_drive
 16+  E942 CD DD F3             call    readBytePanel
 17+  E945 C6 41                add     'A'
 18+  E947
 19+  E947                      ; Выводим его в ком строку
 20+  E947 2A C8 F7             ld      hl, (vars.cmdLineEnd)
 21+  E94A 77                   ld      (hl), a
 22+  E94B 23                   inc     hl
 23+  E94C
 24+  E94C                      ; Выводим двоеточние
 25+  E94C 36 3A                ld      (hl), ':'
 26+  E94E 23                   inc     hl
 27+  E94F
 28+  E94F                      ; Выводим имя файла
 29+  E94F EB                   ex      de, hl
 30+  E950 CD BE F4             call    compactName
 31+  E953
 32+  E953                      ; Ограничение длины
 33+  E953 1B                   dec     de
 34+  E954 3E 0E                ld      a, vars.cmdLineCtrl & 0FFh
 35+  E956 BB                   cp      e
 36+  E957 D2 5B E9             jp nc,  loc_D146
 37+  E95A 5F                   ld      e, a
 38+  E95B              loc_D146:
 39+  E95B                      ; Терминатор
 40+  E95B AF                   xor     a
 41+  E95C 12                   ld      (de), a
 42+  E95D C9                   ret
 43+  E95E
 44+  E95E              ;----------------------------------------------------------------------------
 45+  E95E              ; MXOS NC.COM
 46+  E95E              ; Поместить выбранный файл в ком строку
 47+  E95E              ;
 48+  E95E              ; вход:
 49+  E95E              ;   hl - адрес дескриптора файла
 50+  E95E              ;
 51+  E95E              ; 2013-12-18 Дизассемблировано vinxru
 52+  E95E              ;----------------------------------------------------------------------------
 53+  E95E
 54+  E95E              selFileToCmdLine:
 55+  E95E CD 3E E9             call    getSelFilePath
 56+  E961
 57+  E961                      ; Вывод
 58+  E961                      COLOR   COLOR_CMDLINE
 58+  E961             >        IF ENABLE_COLOR
 58+  E961 3E 70       >            ld a, COLOR_CMDLINE
 58+  E963 32 F8 FF    >            ld (IO_COLOR), a
 58+  E966             >        ENDIF
 59+  E966 2A C8 F7             ld      hl, (vars.cmdLineEnd)
 60+  E969 CD 18 C8             call    bios_printString
 61+  E96C
 62+  E96C                      ; Дописываем имя файла
 63+  E96C EB                   ex      de, hl
 64+  E96D 22 C8 F7             ld      (vars.cmdLineEnd), hl
 65+  E970
 66+  E970                      ; Сохраняем новое положение
 67+  E970 2A FC 8F             ld      hl, (bios_vars.cursorY)
 68+  E973 22 C6 F7             ld      (vars.cmdLinePos), hl
 69+  E976 C9                   ret
 70+  E977
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\selFileToCmdLine.inc
100   E977                  INCLUDE "butF4.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF4.inc
  1+  E977              ;----------------------------------------------------------------------------
  2+  E977              ; MXOS NC.COM
  3+  E977              ; Клавиша F4 - запуск редактора
  4+  E977              ;
  5+  E977              ; 2013-12-18 Дизассемблировано vinxru
  6+  E977              ;----------------------------------------------------------------------------
  7+  E977
  8+  E977              but_F4: ; Получение кол-ва файлов
  9+  E977 21 C0 F7             ld      hl, state.panelA_filesCnt
 10+  E97A CD DD F3             call    readBytePanel
 11+  E97D
 12+  E97D                      ; Если файлов нет, выходим
 13+  E97D A7                   and     a
 14+  E97E CA 6B E8             jp z,   mainLoop
 15+  E981
 16+  E981                      ; Запуск редактора
 17+  E981 11 56 F7             ld      de, aEditor   ; "A:E.COM\r"
 18+  E984 C3 CB E9             jp      Enter_5
 19+  E987
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF4.inc
101   E987                  INCLUDE "butEnter.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butEnter.inc
  1+  E987              ;----------------------------------------------------------------------------
  2+  E987              ; MXOS NC.COM
  3+  E987              ; Клавиша ENTER
  4+  E987              ;
  5+  E987              ; 2013-12-18 Дизассемблировано vinxru
  6+  E987              ;----------------------------------------------------------------------------
  7+  E987
  8+  E987              but_Enter:  ; Если ком строка не пустая
  9+  E987 2A C8 F7                 ld      hl, (vars.cmdLineEnd)
 10+  E98A 3E D3                    ld      a, vars.cmdLine & 0FFh
 11+  E98C BD                       cp      l
 12+  E98D C2 FC E9                 jp nz,  EnterCmdLine
 13+  E990
 14+  E990                          ; Запомнить текущий диск в регистре b
 15+  E990 1E 00                    ld      e, 0
 16+  E992 CD 42 C8                 call    bios_fileGetSetDrive
 17+  E995 47                       ld      b, a
 18+  E996
 19+  E996                          ; Подготовить имя файла A:NC.EXT
 20+  E996 21 4D F7                 ld      hl, aNcExt
 21+  E999 11 3C F8                 ld      de, vars.tempFileDescr; vars.tempFileDescr используется как буфер
 22+  E99C CD 5A C8                 call    bios_fileNamePrepare
 23+  E99F EB                       ex      de, hl
 24+  E9A0
 25+  E9A0                          ; Загрузить файл A:NC.EXT по адресу 0
 26+  E9A0 21 3C F8                 ld      hl, vars.tempFileDescr
 27+  E9A3 11 00 00                 ld      de, 0
 28+  E9A6 0E 01                    ld      c, 1
 29+  E9A8 CD 54 C8                 call    bios_fileGetSetAddr ; изменить адрес загрузки файла на de = 0
 30+  E9AB CD 48 C8                 call    bios_fileLoad
 31+  E9AE DA F1 E9                 jp c,   Enter_stdExec
 32+  E9B1
 33+  E9B1                          ; Переключить диск обратно
 34+  E9B1                          ;mov    a, b
 35+  E9B1                          ;mvi    e, 1
 36+  E9B1                          ;call   bios_fileGetSetDrive
 37+  E9B1
 38+  E9B1                          ; Получить имя выбранного файла
 39+  E9B1 CD 06 F1                 call    getSelectedFile
 40+  E9B4 7E                       ld      a, (hl)
 41+  E9B5 3C                       inc     a
 42+  E9B6 CA 6B E8                 jp z,   mainLoop ; Ничего не выбрано
 43+  E9B9
 44+  E9B9                          ; hl = указатель на расширение файла
 45+  E9B9 11 08 00                 ld      de, FILE_DESCRIPTOR.ext
 46+  E9BC 19                       add     hl, de
 47+  E9BD
 48+  E9BD 11 00 00                 ld      de, 0
 49+  E9C0
 50+  E9C0                          ; Сравниваем с расширеним из файла,
 51+  E9C0                          ; нечувствительно к регистру
 52+  E9C0              Enter_extLoop:
 53+  E9C0 E5                       push    hl
 54+  E9C1 0E 03                    ld      c, 3
 55+  E9C3 CD 7B C8                 call    bios_stricmp
 56+  E9C6 C2 14 EA                 jp nz,  Enter_nextExt
 57+  E9C9
 58+  E9C9                          ; Найдено расширение
 59+  E9C9 E1                       pop     hl
 60+  E9CA 13                       inc     de
 61+  E9CB
 62+  E9CB                          ; Копирование имени выбранного файла в ком строку
 63+  E9CB              Enter_5:
 64+  E9CB 21 D3 F7                 ld      hl, vars.cmdLine
 65+  E9CE              Enter_4:
 66+  E9CE 1A                       ld      a, (de)
 67+  E9CF 77                       ld      (hl),a
 68+  E9D0 FE 0D                    cp      0Dh
 69+  E9D2 CA DE E9                 jp z,   Enter_3
 70+  E9D5 3C                       inc     a
 71+  E9D6 CA DE E9                 jp z,   Enter_3
 72+  E9D9 23                       inc     hl
 73+  E9DA 13                       inc     de
 74+  E9DB C3 CE E9                 jp      Enter_4
 75+  E9DE
 76+  E9DE              ; ---------------------------------------------------------------------------
 77+  E9DE
 78+  E9DE              Enter_3:
 79+  E9DE 36 20                    ld      (hl), ' '
 80+  E9E0 23                       inc     hl
 81+  E9E1 36 00                    ld      (hl), 0
 82+  E9E3 22 C8 F7                 ld      (vars.cmdLineEnd), hl
 83+  E9E6
 84+  E9E6                          ; Вывод командной строки на экран
 85+  E9E6                          COLOR   COLOR_CMDSCREEN
 85+  E9E6             >        IF ENABLE_COLOR
 85+  E9E6 3E F0       >            ld a, COLOR_CMDSCREEN
 85+  E9E8 32 F8 FF    >            ld (IO_COLOR), a
 85+  E9EB             >        ENDIF
 86+  E9EB 21 D3 F7                 ld      hl, vars.cmdLine
 87+  E9EE CD 18 C8                 call    bios_printString
 88+  E9F1
 89+  E9F1              Enter_stdExec:
 90+  E9F1                          ; Получить выбранный файл
 91+  E9F1 CD 06 F1                 call     getSelectedFile
 92+  E9F4
 93+  E9F4                          ; Ничего не выбрано
 94+  E9F4 7E                       ld      a, (hl)
 95+  E9F5 3C                       inc     a
 96+  E9F6 CA 6B E8                 jp z,   mainLoop
 97+  E9F9
 98+  E9F9                          ; ?
 99+  E9F9 CD 5E E9                 call    selFileToCmdLine
100+  E9FC
101+  E9FC              EnterCmdLine:
102+  E9FC                          ; Очистка экрана
103+  E9FC                          COLOR   COLOR_CMDSCREEN
103+  E9FC             >        IF ENABLE_COLOR
103+  E9FC 3E F0       >            ld a, COLOR_CMDSCREEN
103+  E9FE 32 F8 FF    >            ld (IO_COLOR), a
103+  EA01             >        ENDIF
104+  EA01 0E 1F                    ld      c, 1Fh
105+  EA03 CD 09 C8                 call    bios_printChar
106+  EA06
107+  EA06                          ; Помещаем в конец ком строки 0Dh
108+  EA06 2A C8 F7                 ld      hl, (vars.cmdLineEnd)
109+  EA09 36 0D                    ld      (hl), 0Dh
110+  EA0B
111+  EA0B                          ; Сохраняем состояние
112+  EA0B CD 23 EA                 call    saveState
113+  EA0E
114+  EA0E                          ; Запускаем файл
115+  EA0E 21 D3 F7                 ld      hl, vars.cmdLine
116+  EA11 C3 5D C8                 jp      bios_fileExec
117+  EA14
118+  EA14              ; ---------------------------------------------------------------------------
119+  EA14
120+  EA14              Enter_nextExt:
121+  EA14 E1                       pop     hl
122+  EA15
123+  EA15              Enter_2:
124+  EA15 1A                       ld      a, (de)
125+  EA16 13                       inc     de
126+  EA17 FE 0D                    cp      0Dh
127+  EA19 CA C0 E9                 jp z,   Enter_extLoop
128+  EA1C 3C                       inc     a
129+  EA1D C2 15 EA                 jp      nz, Enter_2
130+  EA20 C3 F1 E9                 jp      Enter_stdExec
131+  EA23
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butEnter.inc
102   EA23                  INCLUDE "saveLoadState.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\saveLoadState.inc
  1+  EA23              ;----------------------------------------------------------------------------
  2+  EA23              ; MXOS NC.COM
  3+  EA23              ; Cохранение состояния в ДОЗУ
  4+  EA23              ;
  5+  EA23              ; 2013-12-18 Дизассемблировано vinxru
  6+  EA23              ;----------------------------------------------------------------------------
  7+  EA23
  8+  EA23              saveState:
  9+  EA23                          ; Устанавливаем побайтовый драйвер
 10+  EA23 06 01                    ld      b, 1
 11+  EA25 CD 6F C8                 call    bios_setRAMDDriver
 12+  EA28
 13+  EA28 11 BA F7                 ld      de, state           ; откуда (в ОЗУ)
 14+  EA2B 21 00 FF                 ld      hl, 0FF00h          ; куда (в ДОЗУ)
 15+  EA2E 06 0C                    ld      b,  stateEnd-state  ; сколько байт
 16+  EA30
 17+  EA30              saveStateLoop:
 18+  EA30 1A                       ld      a, (de)
 19+  EA31 4F                       ld      c, a                ; записываемый байт в c
 20+  EA32 AF                       xor     a                   ; 0 страница ДОЗУ
 21+  EA33 CD D0 FF                 call    bios_RAMDWrite
 22+  EA36 23                       inc     hl
 23+  EA37 13                       inc     de
 24+  EA38 05                       dec     b
 25+  EA39 C2 30 EA                 jp nz,  saveStateLoop
 26+  EA3C
 27+  EA3C                          ; Восстанавливаем блочный драйвер
 28+  EA3C                          ; b уже 0 здесь
 29+  EA3C C3 6F C8                 jp      bios_setRAMDDriver
 30+  EA3F
 31+  EA3F
 32+  EA3F              ;----------------------------------------------------------------------------
 33+  EA3F              ; MXOS NC.COM
 34+  EA3F              ; Загрузка состояния из ДОЗУ
 35+  EA3F              ;
 36+  EA3F              ; выход:
 37+  EA3F              ;   флаг  z, если в ДОЗУ есть метка "запускалось"
 38+  EA3F              ;   флаг nz, если в ДОЗУ нет  метки "запускалось"
 39+  EA3F              ;   Дравер не восстанавливается!
 40+  EA3F              ;
 41+  EA3F              ; 2022-02-02 SpaceEngineer
 42+  EA3F              ;----------------------------------------------------------------------------
 43+  EA3F
 44+  EA3F              loadState:
 45+  EA3F                          ; Устанавливаем побайтовый драйвер
 46+  EA3F 06 01                    ld      b, 1
 47+  EA41 CD 6F C8                 call    bios_setRAMDDriver
 48+  EA44
 49+  EA44                          ; Если в рам-диске по адресу 0FF00h (последний неполный сектор)
 50+  EA44                          ; нет специальной метки, значит, не запускали форматирование.
 51+  EA44 21 00 FF                 ld      hl, 0FF00h          ; адрес в странице
 52+  EA47 AF                       xor     a                   ; 0 страница ДОЗУ
 53+  EA48 CD C0 FF                 call    bios_RAMDRead
 54+  EA4B 79                       ld      a, c                ; считанный байт в c
 55+  EA4C FE 5A                    cp      5Ah
 56+  EA4E C0                       ret nz                      ; метки нет - выходим с флагом nz
 57+  EA4F
 58+  EA4F                          ; Иначе загружаем состояние
 59+  EA4F 11 BA F7                 ld      de, state           ; куда (в ОЗУ)
 60+  EA52 21 00 FF                 ld      hl, 0FF00h          ; откуда (в ДОЗУ)
 61+  EA55 06 0C                    ld      b,  stateEnd-state  ; сколько байт байт
 62+  EA57
 63+  EA57              loadStateLoop:
 64+  EA57 AF                       xor     a                   ; 0 страница ДОЗУ
 65+  EA58 CD C0 FF                 call    bios_RAMDRead
 66+  EA5B 79                       ld      a, c                ; считанный байт в c
 67+  EA5C 12                       ld      (de), a
 68+  EA5D 23                       inc     hl
 69+  EA5E 13                       inc     de
 70+  EA5F 05                       dec     b
 71+  EA60 C2 57 EA                 jp nz,  loadStateLoop
 72+  EA63
 73+  EA63                          ; Восстанавливаем блочный драйвер
 74+  EA63                          ; b уже 0 здесь
 75+  EA63 CD 6F C8                 call    bios_setRAMDDriver
 76+  EA66
 77+  EA66 AF                       xor     a   ; для выхода с флагом z
 78+  EA67 C9                       ret
 79+  EA68
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\saveLoadState.inc
103   EA68                  INCLUDE "drawWindow.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\drawWindow.inc
  1+  EA68              ;----------------------------------------------------------------------------
  2+  EA68              ; MXOS NC.COM
  3+  EA68              ; Рисование окошек
  4+  EA68              ;
  5+  EA68              ; 2013-12-18 Дизассемблировано vinxru
  6+  EA68              ;----------------------------------------------------------------------------
  7+  EA68
  8+  EA68              drawWindowIfSel:
  9+  EA68                      ; Получить кол-во файлов
 10+  EA68 21 C0 F7             ld      hl, state.panelA_filesCnt
 11+  EA6B CD DD F3             call    readBytePanel
 12+  EA6E
 13+  EA6E                      ; Если файлов нет, выходим
 14+  EA6E A7                   and     a
 15+  EA6F E1                   pop     hl ; Адрес возврата
 16+  EA70 CA 54 E8             jp z,   mainDriveChanged
 17+  EA73 E5                   push    hl
 18+  EA74
 19+  EA74
 20+  EA74              ; ---------------------------------------------------------------------------
 21+  EA74
 22+  EA74              drawWindow1:
 23+  EA74                      COLOR   COLOR_DIALOG
 23+  EA74             >        IF ENABLE_COLOR
 23+  EA74 3E 07       >            ld a, COLOR_DIALOG
 23+  EA76 32 F8 FF    >            ld (IO_COLOR), a
 23+  EA79             >        ENDIF
 24+  EA79
 25+  EA79                      ; Рисуем окно
 26+  EA79 21 A2 F7             ld      hl, g_window1
 27+  EA7C CD 28 F4             call    draw
 28+  EA7F
 29+  EA7F                      ; Рисуем прямоугольник
 30+  EA7F 21 65 9F             ld      hl, 9F65h           ; x=120 y=101
 31+  EA82 01 0B 12             ld      bc, (18 << 8) + 11  ; w=144 h=11
 32+  EA85 C3 F2 F0             jp      inverseRect
 33+  EA88
 34+  EA88              ; ---------------------------------------------------------------------------
 35+  EA88
 36+  EA88              drawWindow2:
 37+  EA88                      COLOR   COLOR_DIALOG
 37+  EA88             >        IF ENABLE_COLOR
 37+  EA88 3E 07       >            ld a, COLOR_DIALOG
 37+  EA8A 32 F8 FF    >            ld (IO_COLOR), a
 37+  EA8D             >        ENDIF
 38+  EA8D
 39+  EA8D                      ; Рисуем окно
 40+  EA8D 21 AE F7             ld      hl, g_window2
 41+  EA90 CD 28 F4             call    draw
 42+  EA93
 43+  EA93                      ; Рисуем прямоугольник
 44+  EA93 21 87 9E             ld      hl, 9E87h           ; x=112 y=135
 45+  EA96 01 0B 14             ld      bc, (20 << 8) + 11  ; w=160 h=11
 46+  EA99 C3 F2 F0             jp      inverseRect
 47+  EA9C
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\drawWindow.inc
104   EA9C                  INCLUDE "printStringInv.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printStringInv.inc
  1+  EA9C              ;----------------------------------------------------------------------------
  2+  EA9C              ; MXOS NC.COM
  3+  EA9C              ; Вывод инверсной строки
  4+  EA9C              ;
  5+  EA9C              ; 2013-12-18 Дизассемблировано vinxru
  6+  EA9C              ;----------------------------------------------------------------------------
  7+  EA9C
  8+  EA9C 3E 01        printStringInv:   ld    a, 1
  9+  EA9E 32 FA 8F                 ld    (bios_vars.inverse),a
 10+  EAA1 CD 18 C8                 call  bios_printString
 11+  EAA4 AF                       xor   a
 12+  EAA5 32 FA 8F                 ld    (bios_vars.inverse),a
 13+  EAA8 C9                       ret
 14+  EAA9
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printStringInv.inc
105   EAA9                  INCLUDE "inputForCopyMove.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\inputForCopyMove.inc
  1+  EAA9              ;----------------------------------------------------------------------------
  2+  EAA9              ; MXOS NC.COM
  3+  EAA9              ; Ввод строки в которой изначально содержится имя выбранного файла
  4+  EAA9              ;
  5+  EAA9              ; 2013-12-18 Дизассемблировано vinxru
  6+  EAA9              ;----------------------------------------------------------------------------
  7+  EAA9
  8+  EAA9              inputForCopyMove:
  9+  EAA9                          ; Положение курсора
 10+  EAA9 21 6E 3D                 ld      hl, 3D6Eh
 11+  EAAC 22 FC 8F                 ld      (bios_vars.cursorY), hl
 12+  EAAF
 13+  EAAF                          ; Строка для редактирования
 14+  EAAF 11 1C F8                 ld      de, vars.input
 15+  EAB2
 16+  EAB2                          ; Отображается ли панель?
 17+  EAB2 21 BC F7                 ld      hl, state.panelA_info
 18+  EAB5 3A BB F7                 ld      a, (state.activePanel)
 19+  EAB8 A7                       and     a
 20+  EAB9 C2 BD EA                 jp nz,      loc_D255
 21+  EABC 23                       inc     hl
 22+  EABD 7E           loc_D255:   ld      a, (hl)
 23+  EABE
 24+  EABE                          ; Если не отображается, то накопитель в стркоу не помещать
 25+  EABE A7                       and     a
 26+  EABF C2 CD EA                 jp nz,      loc_D265
 27+  EAC2
 28+  EAC2                          ; Записываем букву накопителя
 29+  EAC2 23                       inc     hl
 30+  EAC3 23                       inc     hl
 31+  EAC4 7E                       ld      a, (hl)
 32+  EAC5 C6 41                    add     'A'
 33+  EAC7 12                       ld      (de),a
 34+  EAC8 13                       inc     de
 35+  EAC9
 36+  EAC9                          ; Записываем ':'
 37+  EAC9 3E 3A                    ld      a, ':'
 38+  EACB 12                       ld      (de),a
 39+  EACC 13                       inc     de
 40+  EACD
 41+  EACD              loc_D265:   ; Записать выбранный файл
 42+  EACD CD 06 F1                 call    getSelectedFile
 43+  EAD0 CD BE F4                 call    compactName
 44+  EAD3
 45+  EAD3                          ; Записать терминатор
 46+  EAD3 1B                       dec     de  ; compactName добавляет в конец строки ' ', 0Dh
 47+  EAD4 1B                       dec     de
 48+  EAD5 AF                       xor     a
 49+  EAD6 12                       ld      (de),a
 50+  EAD7
 51+  EAD7                          ; Перейти к редакированию
 52+  EAD7 C3 FB F4                 jp      input
 53+  EADA
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\inputForCopyMove.inc
106   EADA                  INCLUDE "printSelDrive.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printSelDrive.inc
  1+  EADA              ;----------------------------------------------------------------------------
  2+  EADA              ; MXOS NC.COM
  3+  EADA              ; Вывод текущего накопителя
  4+  EADA              ;
  5+  EADA              ; 2013-12-18 Дизассемблировано vinxru
  6+  EADA              ;----------------------------------------------------------------------------
  7+  EADA
  8+  EADA              ; Печать буквы активного диска
  9+  EADA
 10+  EADA 21 BE F7     printSelDrive:    ld    hl, state.panelA_drive
 11+  EADD CD DD F3                 call  readBytePanel
 12+  EAE0 C3 C1 F3                 jp    printDrive
 13+  EAE3
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printSelDrive.inc
107   EAE3                  INCLUDE "butF7.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF7.inc
  1+  EAE3              ;----------------------------------------------------------------------------
  2+  EAE3              ; MXOS NC.COM
  3+  EAE3              ; Клавиша F7. Загрузка файла с ленты на накопитель
  4+  EAE3              ;
  5+  EAE3              ; 2013-12-18 Дизассемблировано vinxru
  6+  EAE3              ;----------------------------------------------------------------------------
  7+  EAE3
  8+  EAE3              ; Сохранение sp   и установка обр   ошибок.
  9+  EAE3
 10+  EAE3              prepareTapeLoad:
 11+  EAE3 21 00 00                 ld          hl, 0
 12+  EAE6 39                       add         hl, sp
 13+  EAE7 23                       inc         hl
 14+  EAE8 23                       inc         hl
 15+  EAE9 22 CD F7                 ld          (vars.savedSP), hl
 16+  EAEC
 17+  EAEC 21 EC EB                 ld          hl, tapeErrorHandler
 18+  EAEF 22 E1 8F                 ld          (bios_vars.tapeError), hl
 19+  EAF2
 20+  EAF2 3E 0F                    ld          a, 0Fh
 21+  EAF4 32 E2 FF                 ld          (IO_KEYB_C),a
 22+  EAF7 3E FE                    ld          a, 0FEh
 23+  EAF9 32 E0 FF                 ld          (IO_KEYB_A),a
 24+  EAFC C9                       ret
 25+  EAFD
 26+  EAFD              ; ---------------------------------------------------------------------------
 27+  EAFD
 28+  EAFD              but_F7:     ; Рисуем окно
 29+  EAFD CD 74 EA                 call        drawWindow1
 30+  EB00
 31+  EB00                          ; Выводим "LOADING FROM TAPE TO A:"
 32+  EB00                          CENTER_LINE 23, 5Eh
 32+  EB00 21 5E 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 5Eh
 32+  EB03 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 33+  EB06 21 1A F7                 ld          hl, aLoadingFromTapeTo
 34+  EB09 CD 18 C8                 call        bios_printString
 35+  EB0C CD DA EA                 call        printSelDrive
 36+  EB0F
 37+  EB0F                          ; Сохранение sp и установка обработчика ошибок
 38+  EB0F CD E3 EA                 call        prepareTapeLoad
 39+  EB12
 40+  EB12              loc_D2AA:
 41+  EB12                          ; Ждем пилот и D9 D9 D9
 42+  EB12 3E FF                    ld          a, 0FFh
 43+  EB14 0E 03                    ld          c, 3
 44+  EB16 C3 1B EB                 jp          loc_D2B3
 45+  EB19              loc_D2B1:
 46+  EB19 3E 08                    ld          a, 8
 47+  EB1B              loc_D2B3:
 48+  EB1B CD 06 C8                 call        bios_tapeRead
 49+  EB1E FE D9                    cp          0D9h
 50+  EB20 C2 12 EB                 jp nz,      loc_D2AA
 51+  EB23 0D                       dec c
 52+  EB24 C2 19 EB                 jp nz,      loc_D2B1
 53+  EB27
 54+  EB27                          ; Читаем имя
 55+  EB27 21 3C F8                 ld          hl, vars.tempFileDescr
 56+  EB2A 54                       ld          d, h
 57+  EB2B 5D                       ld          e, l
 58+  EB2C 0E 0B                    ld          c, FILE_NAME_LENGTH + 3 ; старый формат файла 9 символов, новый - FILE_NAME_LENGTH + 3 символов
 59+  EB2E              loc_D2C6:
 60+  EB2E 3E 08                    ld          a, 8
 61+  EB30 CD 06 C8                 call        bios_tapeRead
 62+  EB33 FE 20                    cp          ' '
 63+  EB35 DA E2 EB                 jp c,       tapeReadAppendName
 64+  EB38 77                       ld          (hl), a
 65+  EB39 23                       inc         hl
 66+  EB3A 0D                       dec         c
 67+  EB3B C2 2E EB                 jp nz,      loc_D2C6
 68+  EB3E
 69+  EB3E              loc_D2D6:
 70+  EB3E 36 00                    ld         (hl), 0 ; обнуляем байт атрибута в дескрипторе файла
 71+  EB40
 72+  EB40 CD A6 ED                 call        printInvFile
 73+  EB43
 74+  EB43                          ; Пропускаем пилот и читаем начальный адрес загрузки
 75+  EB43 3E FF                    ld          a, 0FFh
 76+  EB45 CD D7 EB                 call        tapeReadWord2
 77+  EB48 22 CF F7                 ld          (vars.tapeLoadAddr), hl
 78+  EB4B
 79+  EB4B                          ; Читаем конечный адрес загрузки
 80+  EB4B EB                       ex          de, hl
 81+  EB4C CD D5 EB                 call        tapeReadWord
 82+  EB4F
 83+  EB4F                          ; Считаем размер файла (hl = hl - de)
 84+  EB4F 7D                       ld          a, l
 85+  EB50 93                       sub         e
 86+  EB51 6F                       ld          l, a
 87+  EB52 7C                       ld          a, h
 88+  EB53 9A                       sbc         d
 89+  EB54 67                       ld          h, a
 90+  EB55 22 58 F8                 ld          (vars.tempFileDescr.size), hl
 91+  EB58
 92+  EB58                          ; Читаем данные по адресу 0000
 93+  EB58 23                       inc         hl
 94+  EB59 EB                       ex          de, hl
 95+  EB5A 21 00 00                 ld          hl, 0
 96+  EB5D 22 4E F8                 ld          (vars.tempFileDescr.loadAddress), hl
 97+  EB60 3E 08        loc_D2F8:   ld          a, 8
 98+  EB62 CD 06 C8                 call        bios_tapeRead
 99+  EB65 77                       ld          (hl), a
100+  EB66 23                       inc         hl
101+  EB67 1B                       dec         de
102+  EB68 7A                       ld          a, d
103+  EB69 B3                       or          e
104+  EB6A C2 60 EB                 jp nz,      loc_D2F8
105+  EB6D
106+  EB6D                          ; Чиаем CRC
107+  EB6D CD D5 EB                 call        tapeReadWord
108+  EB70 22 CB F7                 ld          (vars.tapeSaveCRC), hl
109+  EB73
110+  EB73                          ; Считаем CRC
111+  EB73 2A 58 F8                 ld          hl, (vars.tempFileDescr.size)
112+  EB76 EB                       ex          de, hl
113+  EB77 21 00 00                 ld          hl, 0
114+  EB7A 19                       add         hl, de
115+  EB7B EB                       ex          de, hl
116+  EB7C 21 00 00                 ld          hl, 0
117+  EB7F CD 2A C8                 call        bios_calcCS
118+  EB82 2A CB F7                 ld          hl, (vars.tapeSaveCRC)
119+  EB85
120+  EB85                          ; Если расчетный CRC не равен реальному, выходим
121+  EB85 78                       ld          a, b
122+  EB86 BC                       cp          h
123+  EB87 C2 A5 EB                 jp nz,      F7_crcError
124+  EB8A 79                       ld          a, c
125+  EB8B BD                       cp          l
126+  EB8C C2 A5 EB                 jp nz,      F7_crcError
127+  EB8F
128+  EB8F                          ; Соханяем файл на текущий диск
129+  EB8F CD 9B EB                 call        F7_saveFile
130+  EB92
131+  EB92                          ; Перерисовываем экран и продолжаем загрузку
132+  EB92 CD 33 F1                 call        loadAndPrintA
133+  EB95 CD 24 F1                 call        loadAndPrintB
134+  EB98 C3 FD EA                 jp          but_F7
135+  EB9B
136+  EB9B              ; ---------------------------------------------------------------------------
137+  EB9B
138+  EB9B              F7_saveFile:
139+  EB9B 2A CF F7                 ld          hl, (vars.tapeLoadAddr)
140+  EB9E E5                       push        hl
141+  EB9F 21 3C F8                 ld          hl, vars.tempFileDescr
142+  EBA2 C3 5C ED                 jp          saveFileInt
143+  EBA5
144+  EBA5              ; ---------------------------------------------------------------------------
145+  EBA5
146+  EBA5              F7_crcError:
147+  EBA5 CD 88 EA                 call        drawWindow2
148+  EBA8
149+  EBA8                          ; Вывод "ERROR LOADING FROM TAPE"
150+  EBA8                          COLOR       COLOR_DIALOG_ERR
150+  EBA8             >        IF ENABLE_COLOR
150+  EBA8 3E 47       >            ld a, COLOR_DIALOG_ERR
150+  EBAA 32 F8 FF    >            ld (IO_COLOR), a
150+  EBAD             >        ENDIF
151+  EBAD                          CENTER_LINE 23, 80h
151+  EBAD 21 80 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 80h
151+  EBB0 22 FC 8F    >        ld  (bios_vars.cursorY), hl
152+  EBB3 21 30 F7                 ld          hl, aErrorLoadingTa
153+  EBB6 CD 18 C8                 call        bios_printString
154+  EBB9
155+  EBB9                          ; Вывод строки из vars.input
156+  EBB9                          COLOR       COLOR_DIALOG
156+  EBB9             >        IF ENABLE_COLOR
156+  EBB9 3E 07       >            ld a, COLOR_DIALOG
156+  EBBB 32 F8 FF    >            ld (IO_COLOR), a
156+  EBBE             >        ENDIF
157+  EBBE 21 90 50                 ld          hl, 5090h
158+  EBC1 22 FC 8F                 ld          (bios_vars.cursorY), hl
159+  EBC4 21 1C F8                 ld          hl, vars.input
160+  EBC7 CD 9C EA                 call        printStringInv
161+  EBCA
162+  EBCA              loc_D358:   ; Ждем нажатия ESC
163+  EBCA CD 1B C8                 call        bios_keyScan
164+  EBCD FE 1B                    cp          1Bh
165+  EBCF C2 CA EB                 jp nz,      loc_D358
166+  EBD2
167+  EBD2 C3 3E E8                 jp          mainReload
168+  EBD5
169+  EBD5              ;----------------------------------------------------------------------------
170+  EBD5              ; Чтение слова с ленты
171+  EBD5              ;----------------------------------------------------------------------------
172+  EBD5
173+  EBD5              tapeReadWord:
174+  EBD5 3E 08                    ld          a, 8
175+  EBD7              tapeReadWord2:
176+  EBD7 CD 06 C8                 call        bios_tapeRead
177+  EBDA 6F                       ld          l, a
178+  EBDB 3E 08                    ld          a, 8
179+  EBDD CD 06 C8                 call        bios_tapeRead
180+  EBE0 67                       ld          h, a
181+  EBE1 C9                       ret
182+  EBE2
183+  EBE2
184+  EBE2              ; ---------------------------------------------------------------------------
185+  EBE2
186+  EBE2              ; Если имя файла на ленте было короче, чем FILE_NAME_LENGTH + 3, дополняем его пробелами
187+  EBE2              tapeReadAppendName:
188+  EBE2 36 20                    ld          (hl), ' '
189+  EBE4 23                       inc         hl
190+  EBE5 0D                       dec         c
191+  EBE6 C2 E2 EB                 jp nz,      tapeReadAppendName
192+  EBE9 C3 3E EB                 jp          loc_D2D6
193+  EBEC
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF7.inc
108   EBEC                  INCLUDE "tapeErrorHandler.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\tapeErrorHandler.inc
  1+  EBEC              ;----------------------------------------------------------------------------
  2+  EBEC              ; MXOS NC.COM
  3+  EBEC              ; Вызывается при ошибке загрузки с ленты
  4+  EBEC              ;
  5+  EBEC              ; 2013-12-18 Дизассемблировано vinxru
  6+  EBEC              ;----------------------------------------------------------------------------
  7+  EBEC
  8+  EBEC              tapeErrorHandler:
  9+  EBEC                          ; Восстановление обработчика
 10+  EBEC 21 00 C8                 ld    hl, 0C800h
 11+  EBEF 22 E1 8F                 ld    (bios_vars.tapeError), hl
 12+  EBF2
 13+  EBF2                          ; Восстановление стека
 14+  EBF2 2A CD F7                 ld    hl, (vars.savedSP)
 15+  EBF5 F9                       ld    sp, hl
 16+  EBF6
 17+  EBF6                          ; Перезагрузка файлов и продолжение работы
 18+  EBF6 C3 3E E8                 jp    mainReload
 19+  EBF9
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\tapeErrorHandler.inc
109   EBF9                  INCLUDE "butF9.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF9.inc
  1+  EBF9              ;----------------------------------------------------------------------------
  2+  EBF9              ; MXOS NC.COM
  3+  EBF9              ; Клавиша F9 - Сохранение файла на магнитофон
  4+  EBF9              ;
  5+  EBF9              ; 2013-12-18 Дизассемблировано vinxru
  6+  EBF9              ;----------------------------------------------------------------------------
  7+  EBF9
  8+  EBF9              but_F9:     ; Рисуем окно
  9+  EBF9 CD 68 EA                 call    drawWindowIfSel
 10+  EBFC
 11+  EBFC                          ; Выводим "SAVING FROM A: TO TAPE"
 12+  EBFC                          CENTER_LINE 20, 5Eh
 12+  EBFC 21 5E 42    >        ld  hl, ((60h - 20 * 3 / 2) << 8) + 5Eh
 12+  EBFF 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  EC02 21 EC F6                 ld      hl, aSaveFromToTape
 14+  EC05 CD 18 C8                 call    bios_printString
 15+  EC08 CD DA EA                 call    printSelDrive
 16+  EC0B
 17+  EC0B                          ; ?
 18+  EC0B CD A2 ED                 call    printInvSelFile
 19+  EC0E
 20+  EC0E                          ; Ждем нажатия Enter или ESC.
 21+  EC0E CD 1B C8     loc_D39C:   call    bios_keyScan
 22+  EC11 FE 1B                    cp      1Bh
 23+  EC13 CA 3E E8                 jp z,   mainReload
 24+  EC16 FE 0D                    cp      0Dh
 25+  EC18 C2 0E EC                 jp nz,  loc_D39C
 26+  EC1B
 27+  EC1B                          ; Сохранение sp   и установка обр   ошибок.
 28+  EC1B CD E3 EA                 call    prepareTapeLoad
 29+  EC1E
 30+  EC1E CD 68 EA                 call    drawWindowIfSel
 31+  EC21
 32+  EC21                          ; Выводим "SAVING TO TAPE"
 33+  EC21                          CENTER_LINE 14, 5Eh
 33+  EC21 21 5E 4B    >        ld  hl, ((60h - 14 * 3 / 2) << 8) + 5Eh
 33+  EC24 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 34+  EC27 21 0B F7                 ld      hl, aSavingToTape
 35+  EC2A CD 18 C8                 call    bios_printString
 36+  EC2D
 37+  EC2D                          ; Загрузка файла на адрес 0
 38+  EC2D CD 3F ED                 call    loadSelFileAt0  ; на выходе de - оригинальный адрес загрузки
 39+  EC30
 40+  EC30                          ; Получение адреса загрузки и размера файла
 41+  EC30 D5                       push    de  ; оригинальный адрес загрузки
 42+  EC31 E5                       push    hl  ; начало дескриптора
 43+  EC32 11 1C 00                 ld      de, FILE_DESCRIPTOR.size
 44+  EC35 19                       add     hl, de
 45+  EC36 5E                       ld      e, (hl)
 46+  EC37 23                       inc     hl
 47+  EC38 56                       ld      d, (hl) ; de = размер-1
 48+  EC39 E1                       pop     hl  ; начало дескриптора
 49+  EC3A D5                       push    de  ; размер
 50+  EC3B E5                       push    hl  ; начало дескриптора
 51+  EC3C 21 00 00                 ld      hl, 0   ; файл загружен на адрес 0
 52+  EC3F 19                       add     hl, de  ; hl = размер-1 + 0
 53+  EC40 EB                       ex      de, hl  ; de = размер-1 + 0
 54+  EC41 21 00 00                 ld      hl, 0
 55+  EC44
 56+  EC44                          ; Расчет контрольной суммы от hl до de
 57+  EC44 CD 2A C8                 call    bios_calcCS ; bc = crc
 58+  EC47 60                       ld      h, b
 59+  EC48 69                       ld      l, c
 60+  EC49 22 CB F7                 ld      (vars.tapeSaveCRC), hl
 61+  EC4C
 62+  EC4C                          ; Пилот-тон
 63+  EC4C CD 94 EC                 call    tapeWritePilot  ; 200h нулей, затем E6h
 64+  EC4F
 65+  EC4F                          ; Начало файла
 66+  EC4F 3E D9                    ld      a, 0D9h
 67+  EC51 CD 0C C8                 call    bios_tapeWrite  ; три раза 0D9h
 68+  EC54 CD 0C C8                 call    bios_tapeWrite
 69+  EC57 CD 0C C8                 call    bios_tapeWrite
 70+  EC5A
 71+  EC5A                          ; имя файла
 72+  EC5A E1                       pop     hl ; начало дескриптра
 73+  EC5B 01 0A 00                 ld      bc, FILE_NAME_LENGTH+2 ; длина (запишется +1); старый формат - 9 символов, новый - FILE_NAME_LENGTH+3
 74+  EC5E CD 84 EC                 call    tapeWriteBlock
 75+  EC61
 76+  EC61                          ; Пилот-тон
 77+  EC61 CD 94 EC                 call    tapeWritePilot  ; 200h нулей, затем E6h
 78+  EC64
 79+  EC64 C1                       pop     bc ; размер
 80+  EC65 E1                       pop     hl ; оригинальный адрес загрузки
 81+  EC66 CD 7C EC                 call    tapeWriteWord
 82+  EC69
 83+  EC69 09                       add     hl, bc ; конечный адрес загрузки
 84+  EC6A CD 7C EC                 call    tapeWriteWord
 85+  EC6D
 86+  EC6D                          ; Запись файла
 87+  EC6D 21 00 00                 ld      hl, 0
 88+  EC70 CD 84 EC                 call    tapeWriteBlock    ; hl = адрес, bc = размер-1
 89+  EC73
 90+  EC73                          ; Запись контрольной суммы
 91+  EC73 2A CB F7                 ld      hl, (vars.tapeSaveCRC)
 92+  EC76 CD 7C EC                 call    tapeWriteWord
 93+  EC79
 94+  EC79 C3 3E E8                 jp      mainReload
 95+  EC7C
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF9.inc
110   EC7C                  INCLUDE "tapeWrite.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\tapeWrite.inc
  1+  EC7C              ;----------------------------------------------------------------------------
  2+  EC7C              ; MXOS NC.COM
  3+  EC7C              ; Запись слова на ленту
  4+  EC7C              ;
  5+  EC7C              ; 2013-12-18 Дизассемблировано vinxru
  6+  EC7C              ;----------------------------------------------------------------------------
  7+  EC7C
  8+  EC7C              tapeWriteWord:
  9+  EC7C 7D                       ld    a, l
 10+  EC7D CD 0C C8                 call  bios_tapeWrite
 11+  EC80 7C                       ld    a, h
 12+  EC81 C3 0C C8                 jp    bios_tapeWrite
 13+  EC84
 14+  EC84              ;----------------------------------------------------------------------------
 15+  EC84              ; Запись блока данных по адресу hl длиной bc+1 на ленту
 16+  EC84              ;----------------------------------------------------------------------------
 17+  EC84
 18+  EC84              tapeWriteBlock:
 19+  EC84 03                       inc    bc
 20+  EC85 CD A9 EC     loc_D410:   call   checkBreak
 21+  EC88 7E                       ld     a, (hl)
 22+  EC89 CD 0C C8                 call   bios_tapeWrite
 23+  EC8C 23                       inc    hl
 24+  EC8D 0B                       dec    bc
 25+  EC8E 78                       ld     a, b
 26+  EC8F B1                       or     c
 27+  EC90 C2 85 EC                 jp nz, loc_D410
 28+  EC93 C9                       ret
 29+  EC94
 30+  EC94              ;----------------------------------------------------------------------------
 31+  EC94              ; Запись пилот тона на ленту
 32+  EC94              ; 200h нулей, затем E6h
 33+  EC94              ;----------------------------------------------------------------------------
 34+  EC94
 35+  EC94              tapeWritePilot:
 36+  EC94 01 00 02                 ld     bc, 200h
 37+  EC97 CD A9 EC     loc_D422:   call   checkBreak
 38+  EC9A AF                       xor    a
 39+  EC9B CD 0C C8                 call   bios_tapeWrite
 40+  EC9E 0B                       dec    bc
 41+  EC9F 78                       ld     a, b
 42+  ECA0 B1                       or     c
 43+  ECA1 C2 97 EC                 jp nz, loc_D422
 44+  ECA4
 45+  ECA4 3E E6                    ld    a, 0E6h
 46+  ECA6 C3 0C C8                 jp    bios_tapeWrite
 47+  ECA9
 48+  ECA9              ; ---------------------------------------------------------------------------
 49+  ECA9
 50+  ECA9 3A E1 FF     checkBreak: ld     a, (IO_KEYB_B)
 51+  ECAC A7                       and    a
 52+  ECAD F2 EC EB                 jp p,  tapeErrorHandler
 53+  ECB0 C9                       ret
 54+  ECB1
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\tapeWrite.inc
111   ECB1                  INCLUDE "butF6.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF6.inc
  1+  ECB1              ;----------------------------------------------------------------------------
  2+  ECB1              ; MXOS NC.COM
  3+  ECB1              ; Клавиша F6 - переименование
  4+  ECB1              ;
  5+  ECB1              ; 2013-12-18 Дизассемблировано vinxru
  6+  ECB1              ;----------------------------------------------------------------------------
  7+  ECB1
  8+  ECB1              but_F6:     ; Рисуем окно
  9+  ECB1 CD 68 EA                 call        drawWindowIfSel
 10+  ECB4
 11+  ECB4                          ; Выводим "REMOVE FROM A: TO"
 12+  ECB4                          CENTER_LINE 23, 5Eh
 12+  ECB4 21 5E 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 5Eh
 12+  ECB7 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  ECBA 21 2F F6                 ld          hl, aRemoveFromTo
 14+  ECBD CD 18 C8                 call        bios_printString
 15+  ECC0 CD DA EA                 call        printSelDrive
 16+  ECC3
 17+  ECC3 CD A9 EA                 call        inputForCopyMove
 18+  ECC6 FE 1B                    cp          1Bh
 19+  ECC8 CA 3E E8                 jp z,       mainReload
 20+  ECCB
 21+  ECCB 21 1C F8                 ld          hl, vars.input
 22+  ECCE 11 3C F8                 ld          de, vars.tempFileDescr
 23+  ECD1 CD 5A C8                 call        bios_fileNamePrepare
 24+  ECD4
 25+  ECD4 1E 02                    ld          e, 2
 26+  ECD6 CD 42 C8                 call        bios_fileGetSetDrive
 27+  ECD9 4F                       ld          c, a
 28+  ECDA 21 BE F7                 ld          hl, state.panelA_drive
 29+  ECDD CD DD F3                 call        readBytePanel
 30+  ECE0 B9                       cp          c
 31+  ECE1 C2 F0 EC                 jp nz,      loc_D47B
 32+  ECE4 CD 06 F1                 call        getSelectedFile
 33+  ECE7 11 3C F8                 ld          de, vars.tempFileDescr
 34+  ECEA CD 4E C8                 call        bios_fileRename
 35+  ECED C3 3E E8                 jp          mainReload
 36+  ECF0              ; ---------------------------------------------------------------------------
 37+  ECF0
 38+  ECF0 1E 01        loc_D47B:   ld          e, 1
 39+  ECF2 CD 42 C8                 call        bios_fileGetSetDrive
 40+  ECF5 CD 06 F1                 call        getSelectedFile
 41+  ECF8 11 3C F8                 ld          de, vars.tempFileDescr
 42+  ECFB
 43+  ECFB                          ; копируем имя файла
 44+  ECFB 0E 0B                    ld          c, FILE_NAME_LENGTH + 3
 45+  ECFD              loc_D488:
 46+  ECFD 7E                       ld          a, (hl)
 47+  ECFE 12                       ld          (de),a
 48+  ECFF 23                       inc         hl
 49+  ED00 13                       inc         de
 50+  ED01 0D                       dec         c
 51+  ED02 C2 FD EC                 jp nz,      loc_D488
 52+  ED05
 53+  ED05 CD 50 ED                 call        copyFileInt
 54+  ED08 21 BE F7                 ld          hl, state.panelA_drive
 55+  ED0B CD DD F3                 call        readBytePanel
 56+  ED0E 1E 01                    ld          e, 1
 57+  ED10 CD 42 C8                 call        bios_fileGetSetDrive
 58+  ED13 21 3C F8                 ld          hl, vars.tempFileDescr
 59+  ED16 CD 4B C8                 call        bios_fileDelete
 60+  ED19 C3 3E E8                 jp          mainReload
 61+  ED1C
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF6.inc
112   ED1C                  INCLUDE "butF5.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF5.inc
  1+  ED1C              ;----------------------------------------------------------------------------
  2+  ED1C              ; MXOS NC.COM
  3+  ED1C              ; Клавиша F5 - копирование
  4+  ED1C              ;
  5+  ED1C              ; 2013-12-18 Дизассемблировано vinxru
  6+  ED1C              ;----------------------------------------------------------------------------
  7+  ED1C
  8+  ED1C              but_F5: ; Рисуем окно
  9+  ED1C CD 68 EA             call    drawWindowIfSel
 10+  ED1F
 11+  ED1F                      ; Выводм "COPYING FROM A: TO"
 12+  ED1F                      CENTER_LINE 15, 5Eh
 12+  ED1F 21 5E 4A    >        ld  hl, ((60h - 15 * 3 / 2) << 8) + 5Eh
 12+  ED22 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  ED25 22 FC 8F             ld      (bios_vars.cursorY), hl
 14+  ED28 21 07 F6             ld      hl, aCopyFromTo
 15+  ED2B CD 18 C8             call    bios_printString
 16+  ED2E CD DA EA             call    printSelDrive
 17+  ED31
 18+  ED31 CD A9 EA             call    inputForCopyMove
 19+  ED34 FE 1B                cp      1Bh
 20+  ED36 CA 3E E8             jp z,   mainReload
 21+  ED39
 22+  ED39 CD 50 ED             call    copyFileInt
 23+  ED3C C3 3E E8             jp      mainReload
 24+  ED3F
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF5.inc
113   ED3F                  INCLUDE "loadSelFileAt0.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\loadSelFileAt0.inc
  1+  ED3F              ;----------------------------------------------------------------------------
  2+  ED3F              ; MXOS NC.COM
  3+  ED3F              ; Загрузить выбранный файл по адресу 0
  4+  ED3F              ;
  5+  ED3F              ; выход:
  6+  ED3F              ;   de = оригинальный адрес загруки
  7+  ED3F              ;
  8+  ED3F              ; 2013-12-18 Дизассемблировано vinxru
  9+  ED3F              ;----------------------------------------------------------------------------
 10+  ED3F
 11+  ED3F              loadSelFileAt0:
 12+  ED3F CD 06 F1                 call  getSelectedFile
 13+  ED42
 14+  ED42                          ; Получаем адрес загрузки файла
 15+  ED42 0E 02                    ld    c, 2
 16+  ED44 CD 54 C8                 call  bios_fileGetSetAddr
 17+  ED47 D5                       push  de
 18+  ED48
 19+  ED48                          ; Загружаем файл в начало памяти
 20+  ED48 11 00 00                 ld    de, 0
 21+  ED4B CD 66 C8                 call  bios_fileLoad2
 22+  ED4E
 23+  ED4E D1                       pop   de
 24+  ED4F C9                       ret
 25+  ED50
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\loadSelFileAt0.inc
114   ED50                  INCLUDE "copyFileInt.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\copyFileInt.inc
  1+  ED50              ;----------------------------------------------------------------------------
  2+  ED50              ; MXOS NC.COM
  3+  ED50              ; Общая функция для копирования и переноса файла
  4+  ED50              ;
  5+  ED50              ; 2013-12-18 Дизассемблировано vinxru
  6+  ED50              ;----------------------------------------------------------------------------
  7+  ED50
  8+  ED50              copyFileInt:
  9+  ED50                          ; Загрузка выбранного файла в память
 10+  ED50 CD 3F ED                 call  loadSelFileAt0
 11+  ED53 D5                       push  de    ; Тут реальный адрес
 12+  ED54
 13+  ED54                          ; Подготавливаем имя
 14+  ED54 EB                       ex    de, hl
 15+  ED55 21 1C F8                 ld    hl, vars.input
 16+  ED58 CD 5A C8                 call  bios_fileNamePrepare
 17+  ED5B EB                       ex    de, hl
 18+  ED5C
 19+  ED5C              saveFileInt:
 20+  ED5C                          ; hl = адрес дескриптора файла
 21+  ED5C E5                       push  hl
 22+  ED5D
 23+  ED5D                          ; Устанавливаем адрес сохраняемого файла
 24+  ED5D 11 12 00                 ld    de, FILE_DESCRIPTOR.loadAddress   ; смещение поля адреса относительно начала дескриптора
 25+  ED60 19                       add   hl, de
 26+  ED61 11 00 00                 ld    de, 0     ; записываем 0 в поле loadAddress дескриптора
 27+  ED64 73                       ld    (hl), e
 28+  ED65 23                       inc   hl
 29+  ED66 72                       ld    (hl), d
 30+  ED67
 31+  ED67                          ; Сохраняем файл
 32+  ED67 E1                       pop   hl
 33+  ED68 CD 45 C8                 call  bios_fileCreate
 34+  ED6B
 35+  ED6B                          ; Изменяем адрес загрузки файла
 36+  ED6B D1                       pop   de
 37+  ED6C 0E 01                    ld    c, 1
 38+  ED6E CD 54 C8                 call  bios_fileGetSetAddr
 39+  ED71
 40+  ED71                          ; Выходим, если нет ошибки
 41+  ED71 D0                       ret nc
 42+  ED72
 43+  ED72                          ; Рисуем окно
 44+  ED72 CD 88 EA                 call  drawWindow2
 45+  ED75
 46+  ED75                          ; Вывод "CAN'T CREATE FILE"
 47+  ED75                          COLOR   COLOR_DIALOG_ERR
 47+  ED75             >        IF ENABLE_COLOR
 47+  ED75 3E 47       >            ld a, COLOR_DIALOG_ERR
 47+  ED77 32 F8 FF    >            ld (IO_COLOR), a
 47+  ED7A             >        ENDIF
 48+  ED7A                          CENTER_LINE 18, 80h
 48+  ED7A 21 80 45    >        ld  hl, ((60h - 18 * 3 / 2) << 8) + 80h
 48+  ED7D 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 49+  ED80 21 1C F6                 ld    hl, aCantCreateFile
 50+  ED83 CD 18 C8                 call  bios_printString
 51+  ED86
 52+  ED86                          ; Вывод имени
 53+  ED86                          COLOR COLOR_DIALOG
 53+  ED86             >        IF ENABLE_COLOR
 53+  ED86 3E 07       >            ld a, COLOR_DIALOG
 53+  ED88 32 F8 FF    >            ld (IO_COLOR), a
 53+  ED8B             >        ENDIF
 54+  ED8B 21 90 50                 ld    hl, 5090h
 55+  ED8E 22 FC 8F                 ld    (bios_vars.cursorY), hl
 56+  ED91 21 1C F8                 ld    hl, vars.input
 57+  ED94 CD 9C EA                 call  printStringInv
 58+  ED97
 59+  ED97              anyKey:           ; Ждем нажатия любой клавиши
 60+  ED97 CD 1B C8                 call  bios_keyScan
 61+  ED9A 3C                       inc   a
 62+  ED9B CA 97 ED                 jp z, anyKey
 63+  ED9E
 64+  ED9E                          ; Выход
 65+  ED9E E1                       pop   hl
 66+  ED9F C3 3E E8                 jp    mainReload
 67+  EDA2
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\copyFileInt.inc
115   EDA2                  INCLUDE "printInvSelFile.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printInvSelFile.inc
  1+  EDA2              ;----------------------------------------------------------------------------
  2+  EDA2              ; MXOS NC.COM
  3+  EDA2              ; Инверсный вывод имени выбранного файла
  4+  EDA2              ;
  5+  EDA2              ; 2013-12-18 Дизассемблировано vinxru
  6+  EDA2              ;----------------------------------------------------------------------------
  7+  EDA2
  8+  EDA2              printInvSelFile:
  9+  EDA2 CD 06 F1                 call  getSelectedFile
 10+  EDA5 EB                       ex    de, hl
 11+  EDA6 21 6E 50     printInvFile:     ld    hl, 506Eh
 12+  EDA9 22 FC 8F                 ld    (bios_vars.cursorY), hl
 13+  EDAC EB                       ex    de, hl
 14+  EDAD 11 1C F8                 ld    de, vars.input
 15+  EDB0 CD BE F4                 call  compactName
 16+  EDB3 21 1C F8                 ld    hl, vars.input
 17+  EDB6 C3 9C EA                 jp    printStringInv
 18+  EDB9
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printInvSelFile.inc
116   EDB9                  INCLUDE "butF8.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF8.inc
  1+  EDB9              ;----------------------------------------------------------------------------
  2+  EDB9              ; MXOS NC.COM
  3+  EDB9              ; Клавиша F8 - удаление файла
  4+  EDB9              ;
  5+  EDB9              ; 2013-12-18 Дизассемблировано vinxru
  6+  EDB9              ;----------------------------------------------------------------------------
  7+  EDB9
  8+  EDB9              but_F8:     ; Рисуем окно
  9+  EDB9 CD 68 EA                 call    drawWindowIfSel
 10+  EDBC
 11+  EDBC                          ; Выводим "DELETE FROM A:"
 12+  EDBC                          CENTER_LINE 14, 5Eh
 12+  EDBC 21 5E 4B    >        ld  hl, ((60h - 14 * 3 / 2) << 8) + 5Eh
 12+  EDBF 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  EDC2 21 F6 F5                 ld          hl, aDeleteFrom
 14+  EDC5 CD 18 C8                 call        bios_printString
 15+  EDC8 CD DA EA                 call        printSelDrive
 16+  EDCB
 17+  EDCB CD A2 ED                 call        printInvSelFile
 18+  EDCE
 19+  EDCE              loc_D54C:   ; Ждем нажатия Enter или ESC
 20+  EDCE CD 1B C8                 call        bios_keyScan
 21+  EDD1 FE 1B                    cp          1Bh
 22+  EDD3 CA 3E E8                 jp z,       mainReload
 23+  EDD6 FE 0D                    cp          0Dh
 24+  EDD8 C2 CE ED                 jp nz,      loc_D54C
 25+  EDDB
 26+  EDDB                          ; Если файл только для чтения
 27+  EDDB CD 06 F1                 call        getSelectedFile
 28+  EDDE 11 0B 00                 ld          de, FILE_DESCRIPTOR.attrib
 29+  EDE1 19                       add         hl, de
 30+  EDE2 7E                       ld          a, (hl)
 31+  EDE3 E6 01                    and         1
 32+  EDE5 CA 21 EE                 jp z,       loc_D595
 33+  EDE8
 34+  EDE8 CD 88 EA                 call        drawWindow2
 35+  EDEB
 36+  EDEB                          ; Выводим текст "FILE IS READ-ONLY"
 37+  EDEB                          COLOR       COLOR_DIALOG_ERR
 37+  EDEB             >        IF ENABLE_COLOR
 37+  EDEB 3E 47       >            ld a, COLOR_DIALOG_ERR
 37+  EDED 32 F8 FF    >            ld (IO_COLOR), a
 37+  EDF0             >        ENDIF
 38+  EDF0                          CENTER_LINE 18, 80h
 38+  EDF0 21 80 45    >        ld  hl, ((60h - 18 * 3 / 2) << 8) + 80h
 38+  EDF3 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 39+  EDF6 21 B9 F5                 ld          hl, aFileIsReanOnly
 40+  EDF9 CD 18 C8                 call        bios_printString
 41+  EDFC
 42+  EDFC                          ; Выводим vars.input
 43+  EDFC                          COLOR       COLOR_DIALOG
 43+  EDFC             >        IF ENABLE_COLOR
 43+  EDFC 3E 07       >            ld a, COLOR_DIALOG
 43+  EDFE 32 F8 FF    >            ld (IO_COLOR), a
 43+  EE01             >        ENDIF
 44+  EE01 21 90 50                 ld          hl, 5090h
 45+  EE04 22 FC 8F                 ld          (bios_vars.cursorY), hl
 46+  EE07 21 1C F8                 ld          hl, vars.input
 47+  EE0A CD 9C EA                 call        printStringInv
 48+  EE0D
 49+  EE0D              loc_D581:   ; Цикл ожидания нажатия любой клавиши
 50+  EE0D CD 1B C8                 call        bios_keyScan
 51+  EE10 3C                       inc         a
 52+  EE11 C2 0D EE                 jp nz,      loc_D581
 53+  EE14
 54+  EE14              loc_D588:   ; Цикл ожидания нажатия Esc или Enter
 55+  EE14 CD 1B C8                 call        bios_keyScan
 56+  EE17 FE 1B                    cp          1Bh             ; Esc
 57+  EE19 CA 3E E8                 jp z,       mainReload      ; Если Esc - выход
 58+  EE1C FE 0D                    cp          0Dh             ; Enter
 59+  EE1E C2 14 EE                 jp nz,      loc_D588        ; Если Enter - всё равно удалить
 60+  EE21
 61+  EE21              loc_D595:   ; Удаляем текущий файл
 62+  EE21 CD 06 F1                 call        getSelectedFile
 63+  EE24 CD 4B C8                 call        bios_fileDelete
 64+  EE27
 65+  EE27                          ; Уменьшаем счетчик файлов
 66+  EE27 21 C0 F7                 ld          hl, state.panelA_filesCnt
 67+  EE2A CD DD F3                 call        readBytePanel
 68+  EE2D 3D                       dec         a
 69+  EE2E CD CC F3                 call        writeBytePanel
 70+  EE31
 71+  EE31 C3 3E E8                 jp          mainReload
 72+  EE34
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF8.inc
117   EE34                  INCLUDE "butF2.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF2.inc
  1+  EE34              ;----------------------------------------------------------------------------
  2+  EE34              ; MXOS NC.COM
  3+  EE34              ; Клавиши F1, F2. Выбор накопителя для панели
  4+  EE34              ;
  5+  EE34              ; 2013-12-18 Дизассемблировано vinxru
  6+  EE34              ;----------------------------------------------------------------------------
  7+  EE34
  8+  EE34              but_F2:     ; Временно устанавливаем state.activePanel=1
  9+  EE34 3A BB F7                 ld    a, (state.activePanel)
 10+  EE37 F5                       push  af
 11+  EE38 3E 01                    ld    a, 1
 12+  EE3A 32 BB F7                 ld    (state.activePanel), a
 13+  EE3D
 14+  EE3D                          ; Диалог
 15+  EE3D CD 9B EE                 call  chooseDrive
 16+  EE40
 17+  EE40                          ; Если выбрали устройство, то сохраняем его
 18+  EE40 FE FF                    cp    0FFh
 19+  EE42 CA 52 EE                 jp z, loc_D5C3
 20+  EE45 32 BF F7                 ld    (state.panelB_drive), a
 21+  EE48
 22+  EE48                          ; А также делаем панель видимой и перемещаем курсор в начало
 23+  EE48 AF                       xor   a
 24+  EE49 32 BD F7                 ld    (state.panelB_info), a
 25+  EE4C 32 C5 F7                 ld    (state.panelB_curFile), a
 26+  EE4F 32 C3 F7                 ld    (state.panelB_firstFile), a
 27+  EE52
 28+  EE52              loc_D5C3:   ; Восстанавливаем state.activePanel
 29+  EE52 F1                       pop   af
 30+  EE53 32 BB F7                 ld    (state.activePanel), a
 31+  EE56
 32+  EE56                          ; Перезагружаем и перерисовываем вторую панель
 33+  EE56 CD 24 F1                 call  loadAndPrintB
 34+  EE59
 35+  EE59                          ; Перезагружаем и перерисовываем первую панель, только если она в режиме информации
 36+  EE59 3A BC F7                 ld    a, (state.panelA_info)
 37+  EE5C A7                       and   a
 38+  EE5D CA 95 EE                 jp z, saveStateAndReload
 39+  EE60 CD 33 F1                 call  loadAndPrintA
 40+  EE63
 41+  EE63                          ; Сохраняем состояние и выходим
 42+  EE63 C3 95 EE                 jp    saveStateAndReload
 43+  EE66
 44+  EE66              ; ---------------------------------------------------------------------------
 45+  EE66
 46+  EE66              but_F1:     ; Временно устанавливаем state.activePanel=2
 47+  EE66 3A BB F7                 ld    a, (state.activePanel)
 48+  EE69 F5                       push  af
 49+  EE6A 3E 00                    ld    a, 0
 50+  EE6C 32 BB F7                 ld    (state.activePanel), a
 51+  EE6F
 52+  EE6F                          ; Диалог
 53+  EE6F CD 9B EE                 call  chooseDrive
 54+  EE72
 55+  EE72                          ; Если выбрали устройство, то сохраняем его
 56+  EE72 FE FF                    cp    0FFh
 57+  EE74 CA 84 EE                 jp z, loc_D5F2
 58+  EE77 32 BE F7                 ld    (state.panelA_drive), a
 59+  EE7A
 60+  EE7A                          ; А также делаем панель видимой и перемещаем курсор в начало
 61+  EE7A AF                       xor   a
 62+  EE7B 32 BC F7                 ld    (state.panelA_info), a
 63+  EE7E 32 C4 F7                 ld    (state.panelA_curFile), a
 64+  EE81 32 C2 F7                 ld    (state.panelA_firstFile), a
 65+  EE84
 66+  EE84              loc_D5F2:   ; Восстанавливаем state.activePanel
 67+  EE84 F1                       pop   af
 68+  EE85 32 BB F7                 ld    (state.activePanel), a
 69+  EE88
 70+  EE88                          ; Перезагружаем и перерисовываем первую панель
 71+  EE88 CD 33 F1                 call  loadAndPrintA
 72+  EE8B
 73+  EE8B                          ; Перезагружаем и перерисовываем вторую панель, только если она в режиме информации
 74+  EE8B 3A BD F7                 ld    a, (state.panelB_info)
 75+  EE8E A7                       and   a
 76+  EE8F CA 95 EE                 jp z, saveStateAndReload
 77+  EE92 CD 24 F1                 call  loadAndPrintB
 78+  EE95
 79+  EE95              saveStateAndReload:
 80+  EE95                          ; Сохраняем состояние и выходим
 81+  EE95 CD 23 EA                 call  saveState
 82+  EE98 C3 54 E8                 jp    mainDriveChanged
 83+  EE9B
 84+  EE9B              ; ---------------------------------------------------------------------------
 85+  EE9B
 86+  EE9B              chooseDrive:
 87+  EE9B                          COLOR   COLOR_DIALOG
 87+  EE9B             >        IF ENABLE_COLOR
 87+  EE9B 3E 07       >            ld a, COLOR_DIALOG
 87+  EE9D 32 F8 FF    >            ld (IO_COLOR), a
 87+  EEA0             >        ENDIF
 88+  EEA0
 89+  EEA0 21 96 F7                 ld    hl, g_chooseDrive
 90+  EEA3 CD 28 F4                 call  draw
 91+  EEA6
 92+  EEA6                          ; Выводим текст "CHOOSE DRIVE:"
 93+  EEA6 21 63 1E                 ld    hl, 1E63h
 94+  EEA9 CD 15 F4                 call  setCursorPosPanel
 95+  EEAC 21 E8 F5                 ld    hl, aChooseDrive
 96+  EEAF CD 18 C8                 call  bios_printString
 97+  EEB2
 98+  EEB2                          ; Выводим текст "A   B   C   D"
 99+  EEB2 21 74 1C                 ld    hl, 1C74h
100+  EEB5 CD 15 F4                 call  setCursorPosPanel
101+  EEB8 21 CC F5                 ld    hl, aABCD
102+  EEBB CD 18 C8                 call  bios_printString
103+  EEBE
104+  EEBE                          ; Выводим текст "E   F   G   H"
105+  EEBE 21 7F 1C                 ld    hl, 1C7Fh
106+  EEC1 CD 15 F4                 call  setCursorPosPanel
107+  EEC4 21 DA F5                 ld    hl, aEFGH
108+  EEC7 CD 18 C8                 call  bios_printString
109+  EECA
110+  EECA                          ; Меняем вид курсора
111+  EECA 3A E9 8F                 ld    a, (bios_vars.cursorCfg)
112+  EECD F5                       push  af
113+  EECE AF                       xor   a
114+  EECF 32 E9 8F                 ld    (bios_vars.cursorCfg), a
115+  EED2
116+  EED2                          ; Сохраняем текущее устройство
117+  EED2 21 BE F7                 ld    hl, state.panelA_drive
118+  EED5 CD DD F3                 call  readBytePanel
119+  EED8 32 CA F7                 ld    (vars.chooseDrive), a
120+  EEDB
121+  EEDB              cd_Loop:    ; Рисуем курсор
122+  EEDB CD 33 EF                 call  chooseDrive_draw
123+  EEDE
124+  EEDE                          ; Ждем нажатия клавиши
125+  EEDE CD 03 C8                 call  bios_getch
126+  EEE1
127+  EEE1                          ; Стираем курсор
128+  EEE1 F5                       push  af
129+  EEE2 CD 33 EF                 call  chooseDrive_draw
130+  EEE5 F1                       pop   af
131+  EEE6
132+  EEE6                          ; Выбор диска клавишами крсора
133+  EEE6 0E 01                    ld    c, 1
134+  EEE8 FE 18                    cp    18h       ; вправо
135+  EEEA CA 27 EF                 jp z, cd_Arrows
136+  EEED 0E 07                    ld    c, 7
137+  EEEF FE 08                    cp    8         ; влево
138+  EEF1 CA 27 EF                 jp z, cd_Arrows
139+  EEF4 0E 04                    ld    c, 4
140+  EEF6 FE 1A                    cp    1Ah       ; вниз
141+  EEF8 CA 27 EF                 jp z, cd_Arrows
142+  EEFB FE 19                    cp    19h       ; вверх
143+  EEFD CA 27 EF                 jp z, cd_Arrows
144+  EF00 FE 0D                    cp    0Dh       ; Enter
145+  EF02 CA 1F EF                 jp z, cd_Enter
146+  EF05 FE 1B                    cp    1Bh       ; Esc
147+  EF07 CA 18 EF                 jp z, cd_Esc
148+  EF0A
149+  EF0A                          ; Выбор диска клавишами a-h
150+  EF0A D6 41                    sub   41h
151+  EF0C FE 08                    cp    8
152+  EF0E D2 DB EE                 jp nc, cd_Loop
153+  EF11 4F                       ld    c, a
154+  EF12
155+  EF12                          ; Восстанавливаем вид курсора
156+  EF12 F1                       pop   af
157+  EF13 32 E9 8F                 ld    (bios_vars.cursorCfg),a
158+  EF16 79                       ld    a, c
159+  EF17 C9                       ret
160+  EF18
161+  EF18              ; ---------------------------------------------------------------------------
162+  EF18
163+  EF18              cd_Esc:     ; Восстанавливаем вид курсора
164+  EF18 F1                       pop   af
165+  EF19 32 E9 8F                 ld    (bios_vars.cursorCfg),a
166+  EF1C
167+  EF1C                          ; Ничего не выбрано
168+  EF1C 3E FF                    ld    a, 0FFh
169+  EF1E C9                       ret
170+  EF1F
171+  EF1F              ; ---------------------------------------------------------------------------
172+  EF1F
173+  EF1F              cd_Enter:   ; Восстанавливаем вид курсора
174+  EF1F F1                       pop   af
175+  EF20 32 E9 8F                 ld    (bios_vars.cursorCfg),a
176+  EF23                          ; Выбрали
177+  EF23 3A CA F7                 ld    a, (vars.chooseDrive)
178+  EF26 C9                       ret
179+  EF27
180+  EF27              ; ---------------------------------------------------------------------------
181+  EF27
182+  EF27 3A CA F7     cd_Arrows:  ld    a, (vars.chooseDrive)
183+  EF2A 81                       add   a, c
184+  EF2B E6 07                    and   7
185+  EF2D 32 CA F7                 ld    (vars.chooseDrive),a
186+  EF30 C3 DB EE                 jp    cd_Loop
187+  EF33
188+  EF33              ; ---------------------------------------------------------------------------
189+  EF33
190+  EF33              chooseDrive_draw:
191+  EF33                          ; Выбранное устройство
192+  EF33 3A CA F7                 ld    a, (vars.chooseDrive)
193+  EF36
194+  EF36                          ; Координаты курсора
195+  EF36 21 6C 97                 ld    hl, 976Ch
196+  EF39
197+  EF39                          ; Вторая строка
198+  EF39 FE 04                    cp    4
199+  EF3B DA 46 EF                 jp c, chooseDrive_draw2
200+  EF3E D6 04                    sub  4
201+  EF40 4F                       ld   c, a
202+  EF41 7D                       ld   a, l
203+  EF42 C6 0B                    add  a, 0Bh
204+  EF44 6F                       ld   l, a
205+  EF45 79                       ld   a, c
206+  EF46              chooseDrive_draw2:
207+  EF46                          ; Рисуем
208+  EF46 4F                       ld    c, a
209+  EF47 87                       add   a, a
210+  EF48 81                       add   a, c
211+  EF49 84                       add   a, h
212+  EF4A 67                       ld    h, a
213+  EF4B CD 67 F4                 call  activePanelPos
214+  EF4E 01 09 01                 ld    bc, (1 << 8) + 9  ; ширина 1 байт, высота 9 пикселей
215+  EF51 C3 F2 F0                 jp    inverseRect       ; hl = адрес
216+  EF54
217+  EF54
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF2.inc
118   EF54                  INCLUDE "butTab.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butTab.inc
  1+  EF54              ;----------------------------------------------------------------------------
  2+  EF54              ; MXOS NC.COM
  3+  EF54              ; Клавиша TAB - Смена активной панели
  4+  EF54              ;
  5+  EF54              ; 2013-12-18 Дизассемблировано vinxru
  6+  EF54              ;----------------------------------------------------------------------------
  7+  EF54
  8+  EF54              but_Tab:    ; Получаем видимость панели
  9+  EF54 21 BC F7                 ld      hl, state.panelA_info
 10+  EF57 3A BB F7                 ld      a, (state.activePanel)
 11+  EF5A A7                       and     a
 12+  EF5B C2 5F EF                 jp nz,  loc_D6C7
 13+  EF5E 23                       inc     hl
 14+  EF5F 4F           loc_D6C7:   ld      c, a
 15+  EF60 7E                       ld      a, (hl)
 16+  EF61
 17+  EF61                          ; Панель не видима, выходим
 18+  EF61 A7                       and     a
 19+  EF62 C2 54 E8                 jp nz,  mainDriveChanged
 20+  EF65
 21+  EF65                          ; Меняем активную панель на противоположную
 22+  EF65 79                       ld      a, c
 23+  EF66 EE 01                    xor     1
 24+  EF68 32 BB F7                 ld      (state.activePanel),a
 25+  EF6B
 26+  EF6B                          ; Перезагружаем список файлов
 27+  EF6B 21 BE F7                 ld      hl, state.panelA_drive
 28+  EF6E CD DD F3                 call    readBytePanel
 29+  EF71 CD 5A F1                 call    loadFiles   ; На входе нужен a=накопитель
 30+  EF74
 31+  EF74 C3 95 EE                 jp      saveStateAndReload
 32+  EF77
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butTab.inc
119   EF77                  INCLUDE "butF3.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF3.inc
  1+  EF77              ;----------------------------------------------------------------------------
  2+  EF77              ; MXOS NC.COM
  3+  EF77              ; Клавиша F3 - отобразить информацию о накопителе
  4+  EF77              ;
  5+  EF77              ; 2013-12-18 Дизассемблировано vinxru
  6+  EF77              ;----------------------------------------------------------------------------
  7+  EF77
  8+  EF77              but_F3:     ; Временный выбор противоположной панели
  9+  EF77 3A BB F7                 ld    a, (state.activePanel)
 10+  EF7A F5                       push  af
 11+  EF7B EE 01                    xor   1
 12+  EF7D 32 BB F7                 ld    (state.activePanel),a
 13+  EF80
 14+  EF80                          ; Меняем видимость панели
 15+  EF80 21 BC F7                 ld    hl, state.panelA_info
 16+  EF83 CD DD F3                 call  readBytePanel
 17+  EF86 EE 01                    xor   1
 18+  EF88 CD CC F3                 call  writeBytePanel
 19+  EF8B
 20+  EF8B                          ; Восстанавлаием активную панель
 21+  EF8B F1                       pop   af
 22+  EF8C 32 BB F7                 ld    (state.activePanel),a
 23+  EF8F A7                       and   a
 24+  EF90 CA 99 EF                 jp z, loc_D701
 25+  EF93
 26+  EF93                          ; Перерисовываем панель
 27+  EF93 CD 33 F1                 call  loadAndPrintA
 28+  EF96
 29+  EF96 C3 95 EE                 jp    saveStateAndReload
 30+  EF99
 31+  EF99              ; ---------------------------------------------------------------------------
 32+  EF99
 33+  EF99 CD 24 F1     loc_D701:   call  loadAndPrintB
 34+  EF9C C3 95 EE                 jp    saveStateAndReload
 35+  EF9F
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butF3.inc
120   EF9F                  INCLUDE "butArrows.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butArrows.inc
  1+  EF9F              ;----------------------------------------------------------------------------
  2+  EF9F              ; MXOS NC.COM
  3+  EF9F              ; Клавиши перемещения курсора
  4+  EF9F              ;
  5+  EF9F              ; 2013-12-18 Дизассемблировано vinxru
  6+  EF9F              ; 2022-02-16 Доработано SpaceEngineer
  7+  EF9F              ;----------------------------------------------------------------------------
  8+  EF9F
  9+  EF9F              ; ---------------------------------------------------------------------------
 10+  EF9F              ; На один файл вперед
 11+  EF9F
 12+  EF9F              but_Down:   ; c = количество файлов
 13+  EF9F 21 C0 F7                 ld      hl, state.panelA_filesCnt
 14+  EFA2 CD DD F3                 call    readBytePanel
 15+  EFA5 4F                       ld      c, a
 16+  EFA6
 17+  EFA6                          ; a = файл, на котором курсор
 18+  EFA6 21 C4 F7                 ld      hl, state.panelA_curFile
 19+  EFA9 CD DD F3                 call    readBytePanel
 20+  EFAC
 21+  EFAC                          ; курсор на следующий файл
 22+  EFAC 3C                       inc     a
 23+  EFAD
 24+  EFAD                          ; если курсор на последнем файле + 1, выходим
 25+  EFAD B9                       cp      c
 26+  EFAE CA 54 E8                 jp z,   mainDriveChanged
 27+  EFB1
 28+  EFB1                          ; иначе сохраняем новое положение курсора
 29+  EFB1                          ; и скроллим панель, если надо
 30+  EFB1 C3 FD EF                 jp      scrollPanel
 31+  EFB4
 32+  EFB4              ; ---------------------------------------------------------------------------
 33+  EFB4              ; На один файл назад
 34+  EFB4
 35+  EFB4              but_Up:     ; a = файл, на котором курсор
 36+  EFB4 21 C4 F7                 ld      hl, state.panelA_curFile
 37+  EFB7 CD DD F3                 call    readBytePanel
 38+  EFBA
 39+  EFBA                          ; если курсор на нулевом файле, выходим
 40+  EFBA B7                       or      a
 41+  EFBB CA 54 E8                 jp z,   mainDriveChanged
 42+  EFBE
 43+  EFBE                          ; курсор на предыдущий файл
 44+  EFBE 3D                       dec     a
 45+  EFBF
 46+  EFBF                          ; иначе сохраняем новое положение курсора
 47+  EFBF                          ; и скроллим панель, если надо
 48+  EFBF C3 FD EF                 jp      scrollPanel
 49+  EFC2
 50+  EFC2              ; ---------------------------------------------------------------------------
 51+  EFC2              ; На FILE_LIST_SIZE/2 файлов вперед
 52+  EFC2
 53+  EFC2              but_Right:  ; c = количество файлов
 54+  EFC2 21 C0 F7                 ld      hl, state.panelA_filesCnt
 55+  EFC5 CD DD F3                 call    readBytePanel
 56+  EFC8 4F                       ld      c, a
 57+  EFC9 0D                       dec     c
 58+  EFCA
 59+  EFCA                          ; a = файл, на котором курсор
 60+  EFCA 21 C4 F7                 ld      hl, state.panelA_curFile
 61+  EFCD CD DD F3                 call    readBytePanel
 62+  EFD0
 63+  EFD0                          ; увеличиваем на FILE_LIST_SIZE/2 файлов, если не дошли до конца списка
 64+  EFD0 C6 12                    add     FILE_LIST_SIZE/2
 65+  EFD2 B9                       cp      c
 66+  EFD3
 67+  EFD3                          ; иначе устанавливаем курсор на последний файл
 68+  EFD3 DA FD EF                 jp c,   scrollPanel
 69+  EFD6 79                       ld      a, c
 70+  EFD7 C3 FD EF                 jp      scrollPanel
 71+  EFDA
 72+  EFDA              ; ---------------------------------------------------------------------------
 73+  EFDA              ; На FILE_LIST_SIZE/2 файлов назад
 74+  EFDA
 75+  EFDA              but_Left:   ; a = файл, на котором курсор
 76+  EFDA 21 C4 F7                 ld      hl, state.panelA_curFile
 77+  EFDD CD DD F3                 call    readBytePanel
 78+  EFE0
 79+  EFE0                          ; уменьшаем на FILE_LIST_SIZE/2, если не дошли до 0
 80+  EFE0 D6 12                    sub     FILE_LIST_SIZE/2
 81+  EFE2
 82+  EFE2                          ; иначе устанавливаем курсор на нулевой файл
 83+  EFE2 F2 FD EF                 jp p,   scrollPanel
 84+  EFE5 AF                       xor     a
 85+  EFE6 C3 FD EF                 jp      scrollPanel
 86+  EFE9
 87+  EFE9              ; ---------------------------------------------------------------------------
 88+  EFE9              ; На первый файл
 89+  EFE9
 90+  EFE9 21 C4 F7     but_Home:   ld      hl, state.panelA_curFile
 91+  EFEC AF                       xor     a
 92+  EFED C3 FD EF                 jp      scrollPanel
 93+  EFF0
 94+  EFF0              ; ---------------------------------------------------------------------------
 95+  EFF0              ; На последний файл
 96+  EFF0
 97+  EFF0 21 C0 F7     but_End:    ld      hl, state.panelA_filesCnt
 98+  EFF3 CD DD F3                 call    readBytePanel
 99+  EFF6 3D                       dec     a
100+  EFF7 21 C4 F7                 ld      hl, state.panelA_curFile
101+  EFFA C3 FD EF                 jp      scrollPanel
102+  EFFD
103+  EFFD              ; ---------------------------------------------------------------------------
104+  EFFD              ; Расчет нового положения указателей и скроллинг панели, если надо
105+  EFFD
106+  EFFD              scrollPanel:
107+  EFFD                          ; сначала сохраняем panelA_curFile
108+  EFFD CD CC F3                 call    writeBytePanel
109+  F000
110+  F000                          ; c = количество файлов
111+  F000 21 C0 F7                 ld      hl, state.panelA_filesCnt
112+  F003 CD DD F3                 call    readBytePanel
113+  F006 4F                       ld      c, a
114+  F007 0D                       dec     c
115+  F008
116+  F008                          ; b = файл, с которого начинается спосок файлов панели
117+  F008 21 C2 F7                 ld      hl, state.panelA_firstFile
118+  F00B CD DD F3                 call    readBytePanel
119+  F00E 47                       ld      b, a
120+  F00F
121+  F00F                          ; a = файл, на котором курсор
122+  F00F 21 C4 F7                 ld      hl, state.panelA_curFile
123+  F012 CD DD F3                 call    readBytePanel
124+  F015
125+  F015                          ; a = положение курсора относительно начала списка файлов панели
126+  F015 90                       sub     b
127+  F016
128+  F016                          ; если курсор выше первого файла панели, скроллим вниз
129+  F016 DA 21 F0                 jp c,   scrollDown
130+  F019
131+  F019                          ; если курсор ниже последнего файла панели, скроллим вверх
132+  F019 D6 24                    sub     FILE_LIST_SIZE
133+  F01B D2 2A F0                 jp nc,  scrollUp
134+  F01E
135+  F01E                          ; иначе выходим
136+  F01E C3 54 E8                 jp      mainDriveChanged
137+  F021
138+  F021              scrollDown: ; скроллинг списка вниз
139+  F021 80                       add     a, b
140+  F022
141+  F022                          ; если скроллить некуда, выходим
142+  F022 D2 54 E8                 jp nc,  mainDriveChanged
143+  F025
144+  F025                          ; направление перерисовки списока файлов - сверху вниз
145+  F025 06 00                    ld      b, 0
146+  F027 C3 32 F0                 jp      scrollExit
147+  F02A
148+  F02A              scrollUp:   ; скроллинг списка вверх
149+  F02A 04                       inc     b
150+  F02B 80                       add     a, b
151+  F02C
152+  F02C                          ; если скроллить некуда, выходим
153+  F02C B9                       cp      c       ; c = количество файлов
154+  F02D D2 54 E8                 jp nc,  mainDriveChanged
155+  F030
156+  F030                          ; направление перерисовки списока файлов - снизу вверх
157+  F030 06 01                    ld      b, 1
158+  F032
159+  F032              scrollExit: ; сохраняем новое значение panelA_firstFile
160+  F032 21 C2 F7                 ld      hl, state.panelA_firstFile
161+  F035 CD CC F3                 call    writeBytePanel
162+  F038
163+  F038                          ; перерисовываем только список файлов
164+  F038                          ; b = направление
165+  F038 CD 58 F3                 call    printFilePanel
166+  F03B
167+  F03B                          ; выходим
168+  F03B C3 54 E8                 jp      mainDriveChanged
169+  F03E
170+  F03E              ; ---------------------------------------------------------------------------
171+  F03E
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\butArrows.inc
121   F03E                  INCLUDE "clearCmdLine.inc"    ; Продолжается в printSpaces
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\clearCmdLine.inc
  1+  F03E              ;----------------------------------------------------------------------------
  2+  F03E              ; MXOS NC.COM
  3+  F03E              ; Очистка ком строки
  4+  F03E              ;
  5+  F03E              ; 2013-12-18 Дизассемблировано vinxru
  6+  F03E              ;----------------------------------------------------------------------------
  7+  F03E
  8+  F03E              clearCmdLine:
  9+  F03E 21 F3 07                 ld    hl, 7F3h
 10+  F041 22 FC 8F                 ld    (bios_vars.cursorY), hl
 11+  F044
 12+  F044 26 0A                    ld    h, 10
 13+  F046 22 C6 F7                 ld    (vars.cmdLinePos), hl
 14+  F049
 15+  F049                          COLOR   COLOR_CMDLINE
 15+  F049             >        IF ENABLE_COLOR
 15+  F049 3E 70       >            ld a, COLOR_CMDLINE
 15+  F04B 32 F8 FF    >            ld (IO_COLOR), a
 15+  F04E             >        ENDIF
 16+  F04E
 17+  F04E 0E 5C                    ld    c, 92 ; '\'
 18+  F050 CD 09 C8                 call  bios_printChar
 19+  F053
 20+  F053 21 D3 F7                 ld    hl, vars.cmdLine
 21+  F056 22 C8 F7                 ld    (vars.cmdLineEnd), hl
 22+  F059
 23+  F059 06 3C                    ld    b, 60
 24+  F05B
 25+  F05B                          ; Продолжение на printSpaces
 26+  F05B
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\clearCmdLine.inc
122   F05B                  INCLUDE "printSpaces.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printSpaces.inc
  1+  F05B              ;----------------------------------------------------------------------------
  2+  F05B              ; MXOS NC.COM
  3+  F05B              ; Вывод пробелов
  4+  F05B              ;
  5+  F05B              ; b - кол-во пробелов
  6+  F05B              ;
  7+  F05B              ; 2013-12-18 Дизассемблировано vinxru
  8+  F05B              ;----------------------------------------------------------------------------
  9+  F05B
 10+  F05B              printSpaces:
 11+  F05B 0E 20                    ld    c, ' '
 12+  F05D              printSpaces_1:
 13+  F05D CD 09 C8                 call  bios_printChar
 14+  F060 05                       dec   b
 15+  F061 C2 5D F0                 jp nz,  printSpaces_1
 16+  F064 C9                       ret
 17+  F065
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printSpaces.inc
123   F065                  INCLUDE "drawCursor.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\drawCursor.inc
  1+  F065              ;----------------------------------------------------------------------------
  2+  F065              ; MXOS NC.COM
  3+  F065              ; Рисование курсора
  4+  F065              ;
  5+  F065              ; 2013-12-18 Дизассемблировано vinxru
  6+  F065              ;----------------------------------------------------------------------------
  7+  F065
  8+  F065              drawCursor: ; Цвет устаналвиается перед выводом
  9+  F065
 10+  F065                          ; Если файлов нет, выходим
 11+  F065 21 C0 F7                 ld    hl, state.panelA_filesCnt
 12+  F068 CD DD F3                 call  readBytePanel
 13+  F06B A7                       and   a
 14+  F06C                  IF ENABLE_COLOR
 15+  F06C C8                       ret Z
 16+  F06D                  ELSE
 17+  F06D ~                        jp z, drawCursor_0
 18+  F06D                  ENDIF
 19+  F06D                          ; C какого файла начинается список файлов на панели
 20+  F06D 21 C2 F7                 ld    hl, state.panelA_firstFile
 21+  F070 CD DD F3                 call  readBytePanel
 22+  F073 4F                       ld    c, a
 23+  F074
 24+  F074                          ; Номер выбранного файла
 25+  F074 21 C4 F7                 ld    hl, state.panelA_curFile
 26+  F077 CD DD F3                 call  readBytePanel
 27+  F07A 91                       sub   c
 28+  F07B
 29+  F07B                          ; Рассчиытваем координату X (точнее, адрес)
 30+  F07B 26 91                    ld    h, 90h + (P_FILE_LIST_X1 * 2 / 8)
 31+  F07D FE 12                    cp    FILE_LIST_SIZE/2
 32+  F07F DA 86 F0                 jp c, drawCursor_1
 33+  F082 D6 12                    sub   FILE_LIST_SIZE/2
 34+  F084 26 9D                    ld    h, 90h + (P_FILE_LIST_X2 * 2 / 8)
 35+  F086
 36+  F086              drawCursor_1:
 37+  F086                          ; Рассчиытваем координату Y (точнее, адрес)
 38+  F086                          ; a = a * 10 + P_FILE_LIST_Y - 8
 39+  F086 87                       add   a, a
 40+  F087 4F                       ld    c, a
 41+  F088 87                       add   a, a
 42+  F089 87                       add   a, a
 43+  F08A 81                       add   a, c
 44+  F08B C6 18                    add   P_FILE_LIST_Y - 8
 45+  F08D 6F                       ld    l, a
 46+  F08E
 47+  F08E                          ; Ширина курсора в байтах, высота в пикселях
 48+  F08E 01 0A 0A                 ld    bc, (10 << 8) + 10
 49+  F091
 50+  F091                          ; Если правая панель, сдвигаем курсор на пол экрана
 51+  F091              drawCursor_2:
 52+  F091 3A BB F7                 ld    a, (state.activePanel)
 53+  F094 A7                       and   a
 54+  F095 CA 9A F0                 jp z, drawCursor_3
 55+  F098 3E 18                    ld    a, 18h
 56+  F09A              drawCursor_3:
 57+  F09A 84                       add   a, h
 58+  F09B 67                       ld    h, a
 59+  F09C
 60+  F09C                          ; Рисуем курсор (hl = адрес, b = ширина, c = высота)
 61+  F09C CD F2 F0                 call  inverseRect
 62+  F09F C9                       ret
 63+  F0A0
 64+  F0A0              ; ---------------------------------------------------------------------------
 65+  F0A0
 66+  F0A0                  IF ENABLE_COLOR==0
 67+  F0A0 ~            drawCursor_0:
 68+  F0A0 ~                        ld    hl, 92D6h
 69+  F0A0 ~                        ld    b, 2
 70+  F0A0 ~                        jp    drawCursor_2
 71+  F0A0                  ENDIF
 72+  F0A0
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\drawCursor.inc
124   F0A0                  INCLUDE "printInfoLine.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printInfoLine.inc
  1+  F0A0              ;----------------------------------------------------------------------------
  2+  F0A0              ; MXOS NC.COM
  3+  F0A0              ; Вывод инфомарции о файле внизу окна
  4+  F0A0              ;
  5+  F0A0              ; 2013-12-18 Дизассемблировано vinxru
  6+  F0A0              ;----------------------------------------------------------------------------
  7+  F0A0
  8+  F0A0              printInfoLine:
  9+  F0A0                      ; Если файлов нет, выходим
 10+  F0A0 21 C0 F7             ld      hl, state.panelA_filesCnt
 11+  F0A3 CD DD F3             call    readBytePanel
 12+  F0A6 A7                   and     a
 13+  F0A7 C8                   ret z
 14+  F0A8
 15+  F0A8                      COLOR   COLOR_INFOLINE
 15+  F0A8             >        IF ENABLE_COLOR
 15+  F0A8 3E B1       >            ld a, COLOR_INFOLINE
 15+  F0AA 32 F8 FF    >            ld (IO_COLOR), a
 15+  F0AD             >        ENDIF
 16+  F0AD
 17+  F0AD 21 DE 0F             ld      hl, (P_FILE_NAME_X << 8) + P_FILE_NAME_Y
 18+  F0B0 CD 15 F4             call    setCursorPosPanel
 19+  F0B3
 20+  F0B3                      ; ld      c, '\'
 21+  F0B3                      ; call    bios_printChar
 22+  F0B3
 23+  F0B3                      ; Устанавливаем hl на описатель файла
 24+  F0B3 CD 06 F1             call    getSelectedFile
 25+  F0B6 E5                   push    hl
 26+  F0B7
 27+  F0B7                      ; Печатаем имя файла в компактном виде
 28+  F0B7 11 3C F8             ld      de, vars.tempFileDescr  ; буфер
 29+  F0BA CD BE F4             call    compactName
 30+  F0BD 21 3C F8             ld      hl, vars.tempFileDescr
 31+  F0C0 06 0E                ld      b, FILE_NAME_LENGTH + 6 ; макс длина строки (name.ext + ' ' + терминатор)
 32+  F0C2 0E 14                ld      c, 20                   ; терминатор - пробел или меньше
 33+  F0C4 CD FF F3             call    printString2
 34+  F0C7
 35+  F0C7                      ; После имени файла, если оно короткое, надо напечатать
 36+  F0C7                      ; пробелы, чтобы стереть предыдущий текст. После работы
 37+  F0C7                      ; printString2 у нас в b как раз количество символов,
 38+  F0C7                      ; оставшихся до FILE_NAME_LENGTH + 6
 39+  F0C7 CD 5B F0     		call    printSpaces	; b - кол-во пробелов
 40+  F0CA
 41+  F0CA                      ; Смещаем курсор
 42+  F0CA 21 DE 39             ld      hl, (P_FILE_DATA_X << 8) + P_FILE_DATA_Y
 43+  F0CD CD 15 F4             call    setCursorPosPanel
 44+  F0D0
 45+  F0D0                      ; Устанавливаем hl на поле адреса загрузки
 46+  F0D0 E1                   pop     hl
 47+  F0D1 E5                   push    hl
 48+  F0D2 01 0D 00             ld      bc, FILE_INFO.loadAddress + 1 ; bc = смещение
 49+  F0D5 09                   add     hl, bc
 50+  F0D6
 51+  F0D6                      ; Читаем старший и младший байты адреса загрузки
 52+  F0D6                      ; и тут же печатаем их в HEX форме
 53+  F0D6 7E                   ld      a, (hl)
 54+  F0D7 CD 15 C8             call    bios_printHexByte
 55+  F0DA 2B                   dec     hl
 56+  F0DB 7E                   ld      a, (hl)
 57+  F0DC CD 15 C8             call    bios_printHexByte
 58+  F0DF
 59+  F0DF                      ; Смещаем курсор
 60+  F0DF 0E 18        		LD 	    c, 18h  ; код символа "вправо"
 61+  F0E1 CD 09 C8     		call	bios_printChar
 62+  F0E4
 63+  F0E4                      ; Устанавливаем hl на поле размера файла
 64+  F0E4 E1                   pop     hl
 65+  F0E5 01 0E 00             ld      bc, FILE_INFO.size ; bc = смещение
 66+  F0E8 09                   add     hl, bc
 67+  F0E9
 68+  F0E9                      ; Читаем размер файла в de и печатаем в десятичной форме
 69+  F0E9 5E                   ld      e, (hl)
 70+  F0EA 23                   inc     hl
 71+  F0EB 56                   ld      d, (hl)
 72+  F0EC 13                   inc     de          ; в дескрипторе файла хранится размер-1
 73+  F0ED 06 20                ld      b, 20h
 74+  F0EF C3 6C C8             jp      bios_printDecWord
 75+  F0F2
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printInfoLine.inc
125   F0F2                  INCLUDE "inverseRect.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\inverseRect.inc
  1+  F0F2              ;----------------------------------------------------------------------------
  2+  F0F2              ; MXOS NC.COM
  3+  F0F2              ; Инвертирвоание прямоугольной области на экране
  4+  F0F2              ;
  5+  F0F2              ; вход:
  6+  F0F2              ;   hl = адрес
  7+  F0F2              ;   b = ширина в байтах
  8+  F0F2              ;   c = высота всегда
  9+  F0F2              ;
 10+  F0F2              ; 2013-12-18 Дизассемблировано vinxru
 11+  F0F2              ;----------------------------------------------------------------------------
 12+  F0F2
 13+  F0F2              inverseRect:
 14+  F0F2 D5                       push    de
 15+  F0F3 59                       ld      e, c
 16+  F0F4
 17+  F0F4                          ; Цикл по горизонтали
 18+  F0F4 4B           ir_loop_x:  ld      c, e    ; c = высота
 19+  F0F5 E5                       push    hl
 20+  F0F6
 21+  F0F6                          ; Цикл по вертикали
 22+  F0F6 7E           ir_loop_y:  ld      a, (hl)
 23+  F0F7 2F                       cpl
 24+  F0F8 77                       ld      (hl), a
 25+  F0F9
 26+  F0F9                          ; Повтор цикла по вертикали
 27+  F0F9 23                       inc     hl
 28+  F0FA 0D                       dec     c
 29+  F0FB C2 F6 F0                 jp nz,  ir_loop_y
 30+  F0FE
 31+  F0FE                          ; Повтор цикла по горизонтали
 32+  F0FE E1                       pop     hl
 33+  F0FF 24                       inc     h
 34+  F100 05                       dec     b
 35+  F101 C2 F4 F0                 jp nz,  ir_loop_x
 36+  F104
 37+  F104 D1                       pop     de
 38+  F105 C9                       ret
 39+  F106
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\inverseRect.inc
126   F106                  INCLUDE "getSelectedFile.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\getSelectedFile.inc
  1+  F106              ;----------------------------------------------------------------------------
  2+  F106              ; MXOS NC.COM
  3+  F106              ; Получить информацию о выбранном файле (FILE_INFO)
  4+  F106              ;
  5+  F106              ; выход:
  6+  F106              ;   hl - адрес структуры FILE_INFO
  7+  F106              ;
  8+  F106              ; 2013-12-18 Дизассемблировано vinxru
  9+  F106              ;----------------------------------------------------------------------------
 10+  F106
 11+  F106              getSelectedFile:
 12+  F106 D5                   push    de
 13+  F107
 14+  F107                      ; С какого файла начинается список файлов панели
 15+  F107 21 C2 F7             ld      hl, state.panelA_firstFile
 16+  F10A CD DD F3             call    readBytePanel
 17+  F10D 5F                   ld      e, a
 18+  F10E
 19+  F10E                      ; Номер текущего файла
 20+  F10E 21 C4 F7             ld      hl, state.panelA_curFile
 21+  F111 CD DD F3             call    readBytePanel
 22+  F114 93                   sub     e
 23+  F115
 24+  F115                      ; Адрес описателя текущего файла в буфере:
 25+  F115                      ; hl = FILE_LIST_BUFFER + FILE_INFO_SIZE * curFile[state.activePanel];
 26+  F115
 27+  F115 21 10 00             ld      hl, FILE_INFO_SIZE
 28+  F118 5F                   ld      e, a
 29+  F119 16 00                ld      d, 0
 30+  F11B CD 84 C8             call    bios_mul_hl_de
 31+  F11E
 32+  F11E 11 5C F8             ld      de, FILE_LIST_BUFFER
 33+  F121 19                   add     hl, de
 34+  F122
 35+  F122 D1                   pop     de
 36+  F123 C9                   ret
 37+  F124
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\getSelectedFile.inc
127   F124                  INCLUDE "loadAndPrint.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\loadAndPrint.inc
  1+  F124              ;----------------------------------------------------------------------------
  2+  F124              ; MXOS NC.COM
  3+  F124              ; Загрузить файлы и нарисовать
  4+  F124              ;
  5+  F124              ; 2013-12-18 Дизассемблировано vinxru
  6+  F124              ;----------------------------------------------------------------------------
  7+  F124
  8+  F124              loadAndPrintB:
  9+  F124                          ; Времено меняем активную панель на правую
 10+  F124 3A BB F7                 ld      a, (state.activePanel)
 11+  F127 F5                       push    af
 12+  F128 3E 01                    ld      a, 1
 13+  F12A 32 BB F7                 ld      (state.activePanel),a
 14+  F12D
 15+  F12D                          ; Переходим к общему коду
 16+  F12D 3A BD F7                 ld      a, (state.panelB_info)
 17+  F130 C3 3F F1                 jp      loadAndPrint
 18+  F133
 19+  F133              ; ---------------------------------------------------------------------------
 20+  F133
 21+  F133              loadAndPrintA:
 22+  F133                          ; Времено меняем активную панель на левую
 23+  F133 3A BB F7                 ld      a, (state.activePanel)
 24+  F136 F5                       push    af
 25+  F137 3E 00                    ld      a, 0
 26+  F139 32 BB F7                 ld      (state.activePanel),a
 27+  F13C
 28+  F13C                          ; Панель видима?
 29+  F13C 3A BC F7                 ld      a, (state.panelA_info)
 30+  F13F
 31+  F13F              loadAndPrint:
 32+  F13F A7                       and     a
 33+  F140 C2 49 F1                 jp nz,  loadAndPrint_2
 34+  F143
 35+  F143                          ; Выводим список файлов
 36+  F143 CD 1A F3                 call    redrawFilePanel
 37+  F146
 38+  F146 C3 4C F1                 jp      loadAndPrint_3
 39+  F149
 40+  F149              ; ---------------------------------------------------------------------------
 41+  F149
 42+  F149              loadAndPrint_2:   ; Рисуем панель информации
 43+  F149 CD 78 F1                 call    printInfoPanel
 44+  F14C
 45+  F14C              loadAndPrint_3:   ; Восстанавливаем активную панель
 46+  F14C F1                       pop     af
 47+  F14D 32 BB F7                 ld      (state.activePanel),a
 48+  F150
 49+  F150                          ; Загружаем список файлов
 50+  F150 21 BE F7                 ld      hl, state.panelA_drive
 51+  F153 CD DD F3                 call    readBytePanel
 52+  F156 CD 5A F1                 call    loadFiles   ; На входе a должен содержать номер накопителя
 53+  F159 C9                       ret
 54+  F15A
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\loadAndPrint.inc
128   F15A                  INCLUDE "loadFiles.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\loadFiles.inc
  1+  F15A              ;----------------------------------------------------------------------------
  2+  F15A              ; MXOS NC.COM
  3+  F15A              ; Загрузить список файлов с накопителя
  4+  F15A              ;
  5+  F15A              ; вход:
  6+  F15A              ;   a = номер накопителя
  7+  F15A              ;
  8+  F15A              ; 2013-12-18 Дизассемблировано vinxru
  9+  F15A              ; 2022-02-16 Доработано SpaceEngineer
 10+  F15A              ;----------------------------------------------------------------------------
 11+  F15A
 12+  F15A              loadFiles:  ; Получение спика файлов в буфере
 13+  F15A
 14+  F15A 1E 01                    ld      e, 1
 15+  F15C CD 42 C8                 call    bios_fileGetSetDrive  ; устанавливем активные накопитель
 16+  F15F
 17+  F15F                          ; bc = файл, с которого начинается спосок файлов панели
 18+  F15F 21 C2 F7                 ld      hl, state.panelA_firstFile
 19+  F162 CD DD F3                 call    readBytePanel
 20+  F165 4F                       ld      c, a
 21+  F166 06 00                    ld      b, 0    ; считаем, что файлов в каталоге меньше 256
 22+  F168
 23+  F168                          ; Получаем список файлов в буфере и общее
 24+  F168                          ; количество файлов в каталоге в de
 25+  F168 21 5C F8                 ld      hl, FILE_LIST_BUFFER  ; адрес буфера
 26+  F16B 11 24 00                 ld      de, FILE_LIST_SIZE    ; размер буфера
 27+  F16E CD 3F C8                 call    bios_fileList
 28+  F171
 29+  F171                          ; Сохранение количествава файлов
 30+  F171 7B                       ld      a, e                ; считаем, что файлов в каталоге меньше 256
 31+  F172 21 C0 F7                 ld      hl, state.panelA_filesCnt
 32+  F175 C3 CC F3                 jp      writeBytePanel
 33+  F178
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\loadFiles.inc
129   F178                  INCLUDE "printInfoPanel.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printInfoPanel.inc
  1+  F178              ;----------------------------------------------------------------------------
  2+  F178              ; MXOS NC.COM
  3+  F178              ; Рисование информационной панели
  4+  F178              ;
  5+  F178              ; 2013-12-18 Дизассемблировано vinxru
  6+  F178              ;----------------------------------------------------------------------------
  7+  F178
  8+  F178              printInfoPanel:
  9+  F178                          COLOR   COLOR_BORDER
  9+  F178             >        IF ENABLE_COLOR
  9+  F178 3E F1       >            ld a, COLOR_BORDER
  9+  F17A 32 F8 FF    >            ld (IO_COLOR), a
  9+  F17D             >        ENDIF
 10+  F17D
 11+  F17D                          ; Рисуем панель
 12+  F17D 21 84 F7                 ld      hl, g_infoPanel
 13+  F180 CD 28 F4                 call    draw
 14+  F183
 15+  F183                          COLOR   COLOR_INFOHEADER
 15+  F183             >        IF ENABLE_COLOR
 15+  F183 3E E1       >            ld a, COLOR_INFOHEADER
 15+  F185 32 F8 FF    >            ld (IO_COLOR), a
 15+  F188             >        ENDIF
 16+  F188
 17+  F188                          ; Печать "COMMANDER VERSION XXX"
 18+  F188 21 10 11                 ld      hl, 1110h
 19+  F18B CD 15 F4                 call    setCursorPosPanel
 20+  F18E 21 8B F5                 ld      hl, aCommanderVer
 21+  F191 CD 18 C8                 call    bios_printString
 22+  F194
 23+  F194                          ; Печать "(C) OMSK 1992"
 24+  F194                          ;ld      hl, 1D1Ah
 25+  F194 21 1A 0E                 ld      hl, 0E1Ah
 26+  F197 CD 15 F4                 call    setCursorPosPanel
 27+  F19A 21 A1 F5                 ld      hl, aCopyright
 28+  F19D CD 18 C8                 call    bios_printString
 29+  F1A0
 30+  F1A0                          ; Положение курсора
 31+  F1A0 21 30 0B                 ld      hl, 0B30h
 32+  F1A3 CD 15 F4                 call    setCursorPosPanel
 33+  F1A6
 34+  F1A6                          ; Общий объем ОЗУ
 35+  F1A6 11 E0 FF                 ld      de, 65504   ; Специалист-MX/MX2
 36+  F1A9
 37+  F1A9                          ; Печать "XXXX BYTES MEMORY"
 38+  F1A9                          COLOR   COLOR_INFONUMBER
 38+  F1A9             >        IF ENABLE_COLOR
 38+  F1A9 3E E1       >            ld a, COLOR_INFONUMBER
 38+  F1AB 32 F8 FF    >            ld (IO_COLOR), a
 38+  F1AE             >        ENDIF
 39+  F1AE 06 20                    ld      b, 20h
 40+  F1B0 CD 6C C8                 call    bios_printDecWord
 41+  F1B3                          COLOR   COLOR_INFOTEXT
 41+  F1B3             >        IF ENABLE_COLOR
 41+  F1B3 3E F1       >            ld a, COLOR_INFOTEXT
 41+  F1B5 32 F8 FF    >            ld (IO_COLOR), a
 41+  F1B8             >        ENDIF
 42+  F1B8 21 5F F6                 ld      hl, aKBytesMemory
 43+  F1BB CD 18 C8                 call    bios_printString
 44+  F1BE
 45+  F1BE                          ; Положение курсора
 46+  F1BE 21 3C 0B                 ld      hl, 0B3Ch
 47+  F1C1 CD 15 F4                 call    setCursorPosPanel
 48+  F1C4
 49+  F1C4                          ; Свободный объем ОЗУ
 50+  F1C4 CD 30 C8                 call    bios_getMemTop
 51+  F1C7 23                       inc     hl  ; сободно на 1 байт больше, чем memTop
 52+  F1C8 EB                       ex      hl, de
 53+  F1C9
 54+  F1C9                          ; Печать "XXXX BYTES FREE"
 55+  F1C9                          COLOR   COLOR_INFONUMBER
 55+  F1C9             >        IF ENABLE_COLOR
 55+  F1C9 3E E1       >            ld a, COLOR_INFONUMBER
 55+  F1CB 32 F8 FF    >            ld (IO_COLOR), a
 55+  F1CE             >        ENDIF
 56+  F1CE 06 20                    ld      b, 20h
 57+  F1D0 CD 6C C8                 call    bios_printDecWord
 58+  F1D3                          COLOR   COLOR_INFOTEXT
 58+  F1D3             >        IF ENABLE_COLOR
 58+  F1D3 3E F1       >            ld a, COLOR_INFOTEXT
 58+  F1D5 32 F8 FF    >            ld (IO_COLOR), a
 58+  F1D8             >        ENDIF
 59+  F1D8 21 6D F6                 ld      hl, aKBytesFree
 60+  F1DB CD 18 C8                 call    bios_printString
 61+  F1DE
 62+  F1DE                          ; Положение курсора
 63+  F1DE 21 48 05                 ld      hl, 0548h
 64+  F1E1 CD 15 F4                 call    setCursorPosPanel
 65+  F1E4
 66+  F1E4                          ; Общий объем ДОЗУ в кб
 67+  F1E4 3A F8 8F                 ld      a, (bios_vars.ramPageCount)
 68+  F1E7                          ; hl = a * 256
 69+  F1E7 67                       ld      h, a
 70+  F1E8 2E 00                    ld      l, 0
 71+  F1EA                          ; hl = hl / 4
 72+  F1EA CD 81 C8                 call    bios_div_hl_2
 73+  F1ED CD 81 C8                 call    bios_div_hl_2
 74+  F1F0 EB                       ex      hl, de
 75+  F1F1
 76+  F1F1                          ; Печать "XXXX KB EXTENDED MEMORY"
 77+  F1F1                          COLOR   COLOR_INFONUMBER
 77+  F1F1             >        IF ENABLE_COLOR
 77+  F1F1 3E E1       >            ld a, COLOR_INFONUMBER
 77+  F1F3 32 F8 FF    >            ld (IO_COLOR), a
 77+  F1F6             >        ENDIF
 78+  F1F6 06 20                    ld      b, 20h
 79+  F1F8 CD 6C C8                 call    bios_printDecWord
 80+  F1FB                          COLOR   COLOR_INFOTEXT
 80+  F1FB             >        IF ENABLE_COLOR
 80+  F1FB 3E F1       >            ld a, COLOR_INFOTEXT
 80+  F1FD 32 F8 FF    >            ld (IO_COLOR), a
 80+  F200             >        ENDIF
 81+  F200 21 4B F6                 ld      hl, aKBytesExtMemory
 82+  F203 CD 18 C8                 call    bios_printString
 83+  F206
 84+  F206                          ; Получить размер диска
 85+  F206 06 03                    ld      b, 3    ; режим
 86+  F208 CD 63 C8                 call    bios_diskDriver             ; de = количество кластеров на диске, hl = адрес DISK_INFO
 87+  F20B 22 D1 F7                 ld      (vars.diskInfoPtr), hl   ; cохраним адрес структуры DISK_INFO
 88+  F20E
 89+  F20E                          ; Проверяем, распознан ли диск
 90+  F20E 01 22 00                 ld      bc, DISK_INFO.isValid
 91+  F211 09                       add     hl, bc                  ; hl = адрес поля isValid
 92+  F212 7E                       ld      a, (hl)                 ; a = isValid
 93+  F213 FE 02                    cp      DISK_VALID              ; если значение меньше, чем DISK_VALID (2)
 94+  F215 DA EA F2                 jp c,   pip_printDiskError      ; то переходим сюда
 95+  F218
 96+  F218                          ;---------------------------------------------------------
 97+  F218
 98+  F218              pip_printDiskInfo:
 99+  F218                          ; Положение курсора
100+  F218 21 5C 05                 ld      hl, 055Ch
101+  F21B CD 15 F4                 call    setCursorPosPanel
102+  F21E
103+  F21E                          ; Считаем объем в килобайтах
104+  F21E                          ; de = de * 256 / 1024 = hl / 4
105+  F21E EB                       ex      hl, de
106+  F21F CD 81 C8                 call    bios_div_hl_2
107+  F222 CD 81 C8                 call    bios_div_hl_2
108+  F225 EB                       ex      hl, de
109+  F226 D5                       push    de  ; в стеке - объем диска в кб
110+  F227
111+  F227                          ; Печать "XXXX KBYTES TOTAL ON DRIVE A:"
112+  F227                          COLOR   COLOR_INFONUMBER
112+  F227             >        IF ENABLE_COLOR
112+  F227 3E E1       >            ld a, COLOR_INFONUMBER
112+  F229 32 F8 FF    >            ld (IO_COLOR), a
112+  F22C             >        ENDIF
113+  F22C 06 20                    ld      b, 20h
114+  F22E CD 6C C8                 call    bios_printDecWord
115+  F231                          COLOR   COLOR_INFOTEXT
115+  F231             >        IF ENABLE_COLOR
115+  F231 3E F1       >            ld a, COLOR_INFOTEXT
115+  F233 32 F8 FF    >            ld (IO_COLOR), a
115+  F236             >        ENDIF
116+  F236 21 79 F6                 ld      hl, aKBytesTotalOnDrv
117+  F239 CD 18 C8                 call    bios_printString
118+  F23C                          COLOR   COLOR_INFONUMBER
118+  F23C             >        IF ENABLE_COLOR
118+  F23C 3E E1       >            ld a, COLOR_INFONUMBER
118+  F23E 32 F8 FF    >            ld (IO_COLOR), a
118+  F241             >        ENDIF
119+  F241 CD BC F3                 call    printCurDrive
120+  F244                          COLOR   COLOR_INFOTEXT
120+  F244             >        IF ENABLE_COLOR
120+  F244 3E F1       >            ld a, COLOR_INFOTEXT
120+  F246 32 F8 FF    >            ld (IO_COLOR), a
120+  F249             >        ENDIF
121+  F249
122+  F249                          ; Положение курсора
123+  F249 21 98 0B                 ld      hl, 0B98h
124+  F24C CD 15 F4                 call    setCursorPosPanel
125+  F24F
126+  F24F                          ; Печать "Volume label: XXXXXXXXXXX"
127+  F24F                          COLOR   COLOR_INFOTEXT
127+  F24F             >        IF ENABLE_COLOR
127+  F24F 3E F1       >            ld a, COLOR_INFOTEXT
127+  F251 32 F8 FF    >            ld (IO_COLOR), a
127+  F254             >        ENDIF
128+  F254 21 B5 F6                 ld      hl, aVolumeLabel
129+  F257 CD 18 C8                 call    bios_printString
130+  F25A                          COLOR   COLOR_INFONUMBER
130+  F25A             >        IF ENABLE_COLOR
130+  F25A 3E E1       >            ld a, COLOR_INFONUMBER
130+  F25C 32 F8 FF    >            ld (IO_COLOR), a
130+  F25F             >        ENDIF
131+  F25F                          ; hl = адрес поля v_diskInfo.volumeLabel
132+  F25F 2A D1 F7                 ld      hl, (vars.diskInfoPtr)
133+  F262 11 16 00                 ld      de, DISK_INFO.volumeLabel
134+  F265 19                       add     hl, de
135+  F266 CD 18 C8                 call    bios_printString
136+  F269
137+  F269                          ; Положение курсора
138+  F269 21 68 05                 ld      hl, 0568h
139+  F26C CD 15 F4                 call    setCursorPosPanel
140+  F26F
141+  F26F                          ; Подсчет свободного места на диске.
142+  F26F                          ; Эта п/п может работать довольно долго,
143+  F26F                          ; в зависимости от размера fat на диске
144+  F26F                          ; Результат: de = количество свободных кластеров
145+  F26F CD 72 C8                 call    bios_getDriveFreeSpace
146+  F272
147+  F272                          ; Считаем объем в килобайтах
148+  F272                          ; hl = hl * 256 / 1024 = hl / 4
149+  F272 EB                       ex      hl, de
150+  F273 CD 81 C8                 call    bios_div_hl_2
151+  F276 CD 81 C8                 call    bios_div_hl_2
152+  F279 EB                       ex      hl, de
153+  F27A D5                       push    de  ; в стеке - объем свободного места в кб
154+  F27B
155+  F27B                          ; Печать "XXXX KBYTES FREE ON DRIVE A:"
156+  F27B                          COLOR   COLOR_INFONUMBER
156+  F27B             >        IF ENABLE_COLOR
156+  F27B 3E E1       >            ld a, COLOR_INFONUMBER
156+  F27D 32 F8 FF    >            ld (IO_COLOR), a
156+  F280             >        ENDIF
157+  F280 06 20                    ld      b, 20h
158+  F282 CD 6C C8                 call    bios_printDecWord
159+  F285                          COLOR   COLOR_INFOTEXT
159+  F285             >        IF ENABLE_COLOR
159+  F285 3E F1       >            ld a, COLOR_INFOTEXT
159+  F287 32 F8 FF    >            ld (IO_COLOR), a
159+  F28A             >        ENDIF
160+  F28A 21 8D F6                 ld      hl, aKBytesFreeOnDrv
161+  F28D CD 18 C8                 call    bios_printString
162+  F290                          COLOR   COLOR_INFONUMBER
162+  F290             >        IF ENABLE_COLOR
162+  F290 3E E1       >            ld a, COLOR_INFONUMBER
162+  F292 32 F8 FF    >            ld (IO_COLOR), a
162+  F295             >        ENDIF
163+  F295 CD BC F3                 call    printCurDrive
164+  F298
165+  F298                          ; Положение курсора
166+  F298 21 74 05                 ld      hl, 0574h
167+  F29B CD 15 F4                 call    setCursorPosPanel
168+  F29E
169+  F29E                          ; de = кол-во файлов
170+  F29E 21 C0 F7                 ld      hl, state.panelA_filesCnt
171+  F2A1 3A BB F7                 ld      a, (state.activePanel)
172+  F2A4 A7                       and     a
173+  F2A5 C2 A9 F2                 jp nz,  pip_filesPresent
174+  F2A8 23                       inc     hl
175+  F2A9              pip_filesPresent:
176+  F2A9 5E                       ld      e, (hl)
177+  F2AA 16 00                    ld      d, 0
178+  F2AC
179+  F2AC                          ; Печать "XX FILES USE"
180+  F2AC                          COLOR   COLOR_INFONUMBER
180+  F2AC             >        IF ENABLE_COLOR
180+  F2AC 3E E1       >            ld a, COLOR_INFONUMBER
180+  F2AE 32 F8 FF    >            ld (IO_COLOR), a
180+  F2B1             >        ENDIF
181+  F2B1 06 20                    ld      b, 20h
182+  F2B3 CD 6C C8                 call    bios_printDecWord
183+  F2B6                          COLOR   COLOR_INFOTEXT
183+  F2B6             >        IF ENABLE_COLOR
183+  F2B6 3E F1       >            ld a, COLOR_INFOTEXT
183+  F2B8 32 F8 FF    >            ld (IO_COLOR), a
183+  F2BB             >        ENDIF
184+  F2BB 21 A1 F6                 ld      hl, aFilesUse
185+  F2BE CD 18 C8                 call    bios_printString
186+  F2C1
187+  F2C1 D1                       pop     de  ; из стека - объем свободного места в кб
188+  F2C2 E1                       pop     hl  ; из стека - объем диска в кб
189+  F2C3 CD 7E C8                 call    bios_sub_hl_de
190+  F2C6 EB                       ex      hl, de
191+  F2C7
192+  F2C7                          ; Печать "XXXX BYTES IN"
193+  F2C7                          COLOR   COLOR_INFONUMBER
193+  F2C7             >        IF ENABLE_COLOR
193+  F2C7 3E E1       >            ld a, COLOR_INFONUMBER
193+  F2C9 32 F8 FF    >            ld (IO_COLOR), a
193+  F2CC             >        ENDIF
194+  F2CC 06 00                    ld      b, 0    ; не дополнять пробелами
195+  F2CE CD 6C C8                 call    bios_printDecWord
196+  F2D1                          COLOR   COLOR_INFOTEXT
196+  F2D1             >        IF ENABLE_COLOR
196+  F2D1 3E F1       >            ld a, COLOR_INFOTEXT
196+  F2D3 32 F8 FF    >            ld (IO_COLOR), a
196+  F2D6             >        ENDIF
197+  F2D6 21 AD F6                 ld      hl, aKBytesIn
198+  F2D9 CD 18 C8                 call    bios_printString
199+  F2DC
200+  F2DC                          ; Положение курсора
201+  F2DC 21 80 2C                 ld      hl, 2C80h
202+  F2DF CD 15 F4                 call    setCursorPosPanel
203+  F2E2
204+  F2E2                          ; Печать "A:"
205+  F2E2                          ; Здесь будет печататься путь к текущей папке...
206+  F2E2                          COLOR   COLOR_INFONUMBER
206+  F2E2             >        IF ENABLE_COLOR
206+  F2E2 3E E1       >            ld a, COLOR_INFONUMBER
206+  F2E4 32 F8 FF    >            ld (IO_COLOR), a
206+  F2E7             >        ENDIF
207+  F2E7 C3 BC F3                 jp      printCurDrive
208+  F2EA
209+  F2EA                          ; ^^^ выход
210+  F2EA
211+  F2EA                          ;---------------------------------------------------------
212+  F2EA
213+  F2EA              pip_printDiskError:
214+  F2EA F5                       push    af  ; в a - код 0 (нет драйвера) или 1 (диск не отформатирован)
215+  F2EB
216+  F2EB                          ; Положение курсора
217+  F2EB 21 5C 0B                 ld      hl, 0B5Ch
218+  F2EE CD 15 F4                 call    setCursorPosPanel
219+  F2F1
220+  F2F1                          ; Печать "DRIVE A:"
221+  F2F1                          COLOR   COLOR_INFOTEXT
221+  F2F1             >        IF ENABLE_COLOR
221+  F2F1 3E F1       >            ld a, COLOR_INFOTEXT
221+  F2F3 32 F8 FF    >            ld (IO_COLOR), a
221+  F2F6             >        ENDIF
222+  F2F6 21 C4 F6                 ld      hl, aDrive
223+  F2F9 CD 18 C8                 call    bios_printString
224+  F2FC                          COLOR   COLOR_INFONUMBER
224+  F2FC             >        IF ENABLE_COLOR
224+  F2FC 3E E1       >            ld a, COLOR_INFONUMBER
224+  F2FE 32 F8 FF    >            ld (IO_COLOR), a
224+  F301             >        ENDIF
225+  F301 CD BC F3                 call    printCurDrive
226+  F304                          COLOR   COLOR_INFOTEXT
226+  F304             >        IF ENABLE_COLOR
226+  F304 3E F1       >            ld a, COLOR_INFOTEXT
226+  F306 32 F8 FF    >            ld (IO_COLOR), a
226+  F309             >        ENDIF
227+  F309
228+  F309                          ; Печать " HAS NO DRIVER" или " IS NOT FORMATTED"
229+  F309 F1                       pop     af
230+  F30A B7                       or      a
231+  F30B CA 14 F3                 jp z,   pip_printDiskNoDriver
232+  F30E 21 DA F6                 ld      hl, aNotFormatted
233+  F311 C3 18 C8                 jp      bios_printString
234+  F314
235+  F314                          ; ^^^ выход
236+  F314
237+  F314              pip_printDiskNoDriver:
238+  F314 21 CB F6                 ld      hl, aHasNoDriver
239+  F317 C3 18 C8                 jp      bios_printString
240+  F31A
241+  F31A                          ; ^^^ выход
242+  F31A
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printInfoPanel.inc
130   F31A                  INCLUDE "printFilePanel.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printFilePanel.inc
  1+  F31A              ;----------------------------------------------------------------------------
  2+  F31A              ; MXOS NC.COM
  3+  F31A              ; Вывод списка файлов на панель
  4+  F31A              ;
  5+  F31A              ; 2013-12-18 Дизассемблировано vinxru
  6+  F31A              ;----------------------------------------------------------------------------
  7+  F31A
  8+  F31A              ;----------------------------------------------------------------------------
  9+  F31A              ; Перерисовка всей панели
 10+  F31A
 11+  F31A              redrawFilePanel:
 12+  F31A                      COLOR   COLOR_BORDER
 12+  F31A             >        IF ENABLE_COLOR
 12+  F31A 3E F1       >            ld a, COLOR_BORDER
 12+  F31C 32 F8 FF    >            ld (IO_COLOR), a
 12+  F31F             >        ENDIF
 13+  F31F
 14+  F31F                      ; Рисование панели
 15+  F31F 21 73 F7             ld      hl, g_filePanel
 16+  F322 CD 28 F4             call    draw
 17+  F325
 18+  F325                      ; Вывод буквы диска
 19+  F325                      COLOR   COLOR_INFOLINE
 19+  F325             >        IF ENABLE_COLOR
 19+  F325 3E B1       >            ld a, COLOR_INFOLINE
 19+  F327 32 F8 FF    >            ld (IO_COLOR), a
 19+  F32A             >        ENDIF
 20+  F32A 21 BE F7             ld      hl, state.panelA_drive
 21+  F32D CD DD F3             call    readBytePanel
 22+  F330 21 DE 09             ld      hl, (P_DRIVE_LETTER_X << 8) + P_DRIVE_LETTER_Y
 23+  F333 CD 15 F4             call    setCursorPosPanel
 24+  F336 CD C1 F3             call    printDrive
 25+  F339
 26+  F339                      ; Вывод NAME
 27+  F339                  IF FULL_PANELS==0
 28+  F339                      COLOR   COLOR_PANELNAME
 28+  F339             >        IF ENABLE_COLOR
 28+  F339 3E E1       >            ld a, COLOR_PANELNAME
 28+  F33B 32 F8 FF    >            ld (IO_COLOR), a
 28+  F33E             >        ENDIF
 29+  F33E 21 10 11             ld      hl, (P_NAME_X1 << 8) + P_NAME_Y
 30+  F341 CD 15 F4             call    setCursorPosPanel
 31+  F344 21 48 F7             ld      hl, aNameName
 32+  F347 CD 18 C8             call    bios_printString
 33+  F34A
 34+  F34A 21 10 41             ld      hl, (P_NAME_X2 << 8) + P_NAME_Y
 35+  F34D CD 15 F4             call    setCursorPosPanel
 36+  F350 21 48 F7             ld      hl, aNameName
 37+  F353 CD 18 C8             call    bios_printString
 38+  F356                  ENDIF
 39+  F356
 40+  F356                      ; Выодим список файлов сверху вниз
 41+  F356 06 00                ld      b, 0
 42+  F358
 43+  F358              ;----------------------------------------------------------------------------
 44+  F358              ; Перерисовка списка файлов
 45+  F358              ; вход:
 46+  F358              ;   b - направление (0 - сверху вниз, 1 - снизу вверх)
 47+  F358
 48+  F358              printFilePanel:
 49+  F358                      ; Рисуем сверху вниз или снизу вверх?
 50+  F358 78                   ld      a, b
 51+  F359 B7                   or      a
 52+  F35A F5                   push    af
 53+  F35B
 54+  F35B                      ; Загрузка списка файлов
 55+  F35B 21 BE F7             ld      hl, state.panelA_drive
 56+  F35E CD DD F3             call    readBytePanel   ; a = номер накопителя
 57+  F361 CD 5A F1             call    loadFiles
 58+  F364
 59+  F364                      ; Цвет для печати списка файлов
 60+  F364                      COLOR   COLOR_FILE
 60+  F364             >        IF ENABLE_COLOR
 60+  F364 3E B1       >            ld a, COLOR_FILE
 60+  F366 32 F8 FF    >            ld (IO_COLOR), a
 60+  F369             >        ENDIF
 61+  F369
 62+  F369 F1                   pop     af
 63+  F36A C2 95 F3             jp nz,  printFilesDownUp
 64+  F36D
 65+  F36D              ;----------------------------------------------------------------------------
 66+  F36D              ; Цикл печати сверху вниз
 67+  F36D
 68+  F36D              printFilesUpDown:
 69+  F36D                      ; Указатель списка файлов - на нулевой файл
 70+  F36D 21 5C F8             ld      hl, FILE_LIST_BUFFER
 71+  F370
 72+  F370                      ; Положение курсора - на нулевой файл
 73+  F370 11 20 06             ld      de, (P_FILE_LIST_X1 << 8) + P_FILE_LIST_Y
 74+  F373
 75+  F373              pfud_Loop:
 76+  F373                      ; Прерываем цикл по достижении конца списка файлов
 77+  F373                      ; (первый символ имени = FF)
 78+  F373 7E                   ld      a, (hl)
 79+  F374 3C                   inc     a
 80+  F375 C8                   ret z
 81+  F376
 82+  F376                      ; Установка положения курсора
 83+  F376 EB                   ex      de, hl
 84+  F377 CD 15 F4             call    setCursorPosPanel
 85+  F37A EB                   ex      de, hl
 86+  F37B
 87+  F37B                      ; Печать имени файла
 88+  F37B CD E9 F3             call    printFileNamOnPanel
 89+  F37E
 90+  F37E                      ; Следующий файл
 91+  F37E 01 10 00             ld      bc, FILE_INFO_SIZE
 92+  F381 09                   add     hl, bc
 93+  F382
 94+  F382                      ; Курсор на следующую строку
 95+  F382 7B                   ld      a, e
 96+  F383 C6 0A                add     10
 97+  F385 5F                   ld      e, a
 98+  F386
 99+  F386                      ; Курсор на следующий столбец
100+  F386 FE D4                cp      P_FILE_LIST_Y_MAX
101+  F388 DA 73 F3             jp c,   pfud_Loop
102+  F38B 7A                   ld      a, d
103+  F38C 11 20 36             ld      de, (P_FILE_LIST_X2 << 8) + P_FILE_LIST_Y
104+  F38F FE 14                cp      20
105+  F391 DA 73 F3             jp c,   pfud_Loop
106+  F394
107+  F394 C9                   ret
108+  F395
109+  F395              ;----------------------------------------------------------------------------
110+  F395              ; Цикл печати снизу вверх
111+  F395
112+  F395              printFilesDownUp:
113+  F395                      ; Указатель списка файлов - на последний файл
114+  F395 21 8C FA             ld      hl, FILE_LIST_BUFFER + (FILE_LIST_SIZE-1) * FILE_INFO_SIZE
115+  F398
116+  F398                      ; Положение курсора - на последний файл
117+  F398 11 CA 36             ld      de, (P_FILE_LIST_X2 << 8) + P_FILE_LIST_Y_MAX - 10
118+  F39B
119+  F39B              pfdu_Loop:
120+  F39B                      ; Установка положения курсора
121+  F39B EB                   ex      de, hl
122+  F39C CD 15 F4             call    setCursorPosPanel
123+  F39F EB                   ex      de, hl
124+  F3A0
125+  F3A0                      ; Печать имени файла
126+  F3A0 CD E9 F3             call    printFileNamOnPanel
127+  F3A3
128+  F3A3                      ; Предыдущий файл
129+  F3A3 C5                   push    bc
130+  F3A4 01 F0 FF             ld      bc, -FILE_INFO_SIZE
131+  F3A7 09                   add     hl, bc
132+  F3A8 C1                   pop     bc
133+  F3A9
134+  F3A9                      ; Курсор на предыдущую строку
135+  F3A9 7B                   ld      a, e
136+  F3AA D6 0A                sub     10
137+  F3AC 5F                   ld      e, a
138+  F3AD
139+  F3AD                      ; Курсор на предыдущий столбец
140+  F3AD FE 20                cp      P_FILE_LIST_Y
141+  F3AF D2 9B F3             jp nc,  pfdu_Loop
142+  F3B2 7A                   ld      a, d
143+  F3B3 11 CA 06             ld      de, (P_FILE_LIST_X1 << 8) + P_FILE_LIST_Y_MAX - 10
144+  F3B6 FE 14                cp      20
145+  F3B8 D2 9B F3             jp nc,  pfdu_Loop
146+  F3BB
147+  F3BB C9                   ret
148+  F3BC
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printFilePanel.inc
131   F3BC                  INCLUDE "printCurDrive.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printCurDrive.inc
  1+  F3BC              ;----------------------------------------------------------------------------
  2+  F3BC              ; MXOS NC.COM
  3+  F3BC              ; Вывод текущего накопителя
  4+  F3BC              ;
  5+  F3BC              ; 2013-12-18 Дизассемблировано vinxru
  6+  F3BC              ;----------------------------------------------------------------------------
  7+  F3BC
  8+  F3BC              printCurDrive:    ; Узнаем активное устройство
  9+  F3BC 1E 02                    ld    e, 2
 10+  F3BE CD 42 C8                 call  bios_fileGetSetDrive
 11+  F3C1
 12+  F3C1              printDrive: ; Выводим его букву на экран
 13+  F3C1 C6 41                    add   a, 'A'
 14+  F3C3 4F                       ld    c, a
 15+  F3C4 CD 09 C8                 call  bios_printChar
 16+  F3C7
 17+  F3C7                          ; Выводим ':'
 18+  F3C7 0E 3A                    ld    c, ':'
 19+  F3C9 C3 09 C8                 jp    bios_printChar
 20+  F3CC
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printCurDrive.inc
132   F3CC                  INCLUDE "rwBytePanel.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\rwBytePanel.inc
  1+  F3CC              ;----------------------------------------------------------------------------
  2+  F3CC              ; MXOS NC.COM
  3+  F3CC              ; Запись значения в переменную панели
  4+  F3CC              ; [hl + state.activePanel] = a
  5+  F3CC              ;
  6+  F3CC              ; вход:
  7+  F3CC              ;   hl = адрес переменной панели A (state.panelA_info, state.panelA_drive и т.п.)
  8+  F3CC              ;   a  = значение переменной
  9+  F3CC              ;
 10+  F3CC              ; 2013-12-18 Дизассемблировано vinxru
 11+  F3CC              ;----------------------------------------------------------------------------
 12+  F3CC
 13+  F3CC              writeBytePanel:
 14+  F3CC C5                       push  bc
 15+  F3CD E5                       push  hl
 16+  F3CE F5                       push  af
 17+  F3CF 4F                       ld    c, a
 18+  F3D0 3A BB F7                 ld    a, (state.activePanel)
 19+  F3D3 A7                       and   a
 20+  F3D4 CA D8 F3                 jp z, loc_D97E
 21+  F3D7 23                       inc   hl
 22+  F3D8 71           loc_D97E:   ld    (hl), c
 23+  F3D9 F1                       pop   af
 24+  F3DA E1                       pop   hl
 25+  F3DB C1                       pop   bc
 26+  F3DC C9                       ret
 27+  F3DD
 28+  F3DD              ;----------------------------------------------------------------------------
 29+  F3DD              ; MXOS NC.COM
 30+  F3DD              ; Чтение значения из переменной панели
 31+  F3DD              ; a = [hl + state.activePanel]
 32+  F3DD              ;
 33+  F3DD              ; вход:
 34+  F3DD              ;   hl = адрес переменной панели A (state.panelA_info, state.panelA_drive и т.п.)
 35+  F3DD              ;
 36+  F3DD              ; выход:
 37+  F3DD              ;   a = значение переменной
 38+  F3DD              ;
 39+  F3DD              ; 2013-12-18 Дизассемблировано vinxru
 40+  F3DD              ;----------------------------------------------------------------------------
 41+  F3DD
 42+  F3DD              readBytePanel:
 43+  F3DD E5                       push  hl
 44+  F3DE 3A BB F7                 ld    a, (state.activePanel)
 45+  F3E1 A7                       and   a
 46+  F3E2 CA E6 F3                 jp z, loc_D98C
 47+  F3E5 23                       inc   hl
 48+  F3E6 7E           loc_D98C:   ld    a, (hl)
 49+  F3E7 E1                       pop   hl
 50+  F3E8 C9                       ret
 51+  F3E9
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\rwBytePanel.inc
133   F3E9                  INCLUDE "printFileName.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printFileName.inc
  1+  F3E9              ;----------------------------------------------------------------------------
  2+  F3E9              ; MXOS NC.COM
  3+  F3E9              ; Вывод имени файла в обычном виде с точкой
  4+  F3E9              ;
  5+  F3E9              ; вход:
  6+  F3E9              ;   hl - адрес дескриптора файла
  7+  F3E9              ;
  8+  F3E9              ; выход:
  9+  F3E9              ;   hl - указывает на следующее за расширением поле в дескрипторе файла
 10+  F3E9              ;
 11+  F3E9              ; 2022-01-31 SpaceEngineer
 12+  F3E9              ;----------------------------------------------------------------------------
 13+  F3E9
 14+  F3E9              ;printFileName:
 15+  F3E9              ;        push  bc
 16+  F3E9              ;        ld    c, ' '               ; прерываем печать имени по пробелу
 17+  F3E9              ;        ld    b, FILE_NAME_LENGTH  ; длина имени
 18+  F3E9              ;        call  printString2
 19+  F3E9              ;        ld    c, '.'
 20+  F3E9              ;        call  bios_printChar       ; печатаем точку
 21+  F3E9              ;        ld    b, 3                 ; длина расширения
 22+  F3E9              ;        call  printString2
 23+  F3E9              ;        pop   bc
 24+  F3E9              ;        ret
 25+  F3E9              ;
 26+  F3E9
 27+  F3E9              ;----------------------------------------------------------------------------
 28+  F3E9              ; MXOS NC.COM
 29+  F3E9              ; Вывод имени файла - 8 символов, путое место, 3 символа.
 30+  F3E9              ; Короткие имена дополняются пробелами, чтобы стереть предыдущий текст.
 31+  F3E9              ; Выводит только реальные символы, чтобы не портить экран при
 32+  F3E9              ; неотформатированном или повреждённом диске.
 33+  F3E9              ;
 34+  F3E9              ; вход:
 35+  F3E9              ;   hl - адрес дескриптора файла
 36+  F3E9              ;
 37+  F3E9              ; 2022-02-16 SpaceEngineer
 38+  F3E9              ;----------------------------------------------------------------------------
 39+  F3E9
 40+  F3E9              printFileNamOnPanel:
 41+  F3E9 E5                   push    hl
 42+  F3EA C5                   push    bc
 43+  F3EB 01 00 08             ld      bc, FILE_NAME_LENGTH << 8   ; b = длина имени, с = 0 (без терминатора)
 44+  F3EE CD FF F3             call    printString2
 45+  F3F1 0E 18                ld      c, 18h                      ; курсор вправо
 46+  F3F3 CD 09 C8             call    bios_printChar
 47+  F3F6 01 00 03             ld      bc, 3 << 8                  ; b = длина расширения, с = 0 (без терминатора)
 48+  F3F9 CD FF F3             call    printString2
 49+  F3FC C1                   pop     bc
 50+  F3FD E1                   pop     hl
 51+  F3FE C9                   ret
 52+  F3FF
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printFileName.inc
134   F3FF                  INCLUDE "printString2.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printString2.inc
  1+  F3FF              ;----------------------------------------------------------------------------
  2+  F3FF              ; MXOS NC.COM
  3+  F3FF              ; Вывод строки по адресу hl длиной b или до терминатора.
  4+  F3FF              ; Выводит только реальные символы, чтобы не портить экран при
  5+  F3FF              ; неотформатированном или повреждённом диске.
  6+  F3FF              ;
  7+  F3FF              ; вход:
  8+  F3FF              ;   hl = адрес строки
  9+  F3FF              ;   b  = макс. длина печати
 10+  F3FF              ;   c  = терминатор
 11+  F3FF              ;
 12+  F3FF              ; выход:
 13+  F3FF              ;   hl = адрес конца строки + 1
 14+  F3FF              ;
 15+  F3FF              ; 2022-01-31 SpaceEngineer
 16+  F3FF              ;----------------------------------------------------------------------------
 17+  F3FF
 18+  F3FF              printString2:
 19+  F3FF F5               push    af
 20+  F400 D5               push    de
 21+  F401
 22+  F401              printString2loop:
 23+  F401 7E               ld      a, (hl)
 24+  F402 B9               cp      c
 25+  F403 DA 12 F4         jp c,   printString2exit
 26+  F406
 27+  F406 C5               push    bc
 28+  F407 E5               push    hl
 29+  F408
 30+  F408 CD 69 C8         call    bios_printCharReal
 31+  F40B
 32+  F40B E1               pop     hl
 33+  F40C C1               pop     bc
 34+  F40D
 35+  F40D 23               inc     hl
 36+  F40E 05               dec     b
 37+  F40F C2 01 F4         jp nz,  printString2loop
 38+  F412
 39+  F412              printString2exit:
 40+  F412 D1               pop     de
 41+  F413 F1               pop     af
 42+  F414 C9               ret
 43+  F415
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\printString2.inc
135   F415                  INCLUDE "setCursorPosPanel.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\setCursorPosPanel.inc
  1+  F415              ;----------------------------------------------------------------------------
  2+  F415              ; MXOS NC.COM
  3+  F415              ; Установка положения курсора с учетом активной панели
  4+  F415              ; вход:
  5+  F415              ;   hl - координаты курсора на панели
  6+  F415              ;
  7+  F415              ; 2013-12-18 Дизассемблировано vinxru
  8+  F415              ;----------------------------------------------------------------------------
  9+  F415
 10+  F415              setCursorPosPanel:
 11+  F415                          ; Сохраняем регистры
 12+  F415 E5                       push  hl
 13+  F416 F5                       push  af
 14+  F417
 15+  F417 3A BB F7                 ld    a, (state.activePanel)
 16+  F41A A7                       and   a
 17+  F41B CA 20 F4                 jp z, loc_D9BA
 18+  F41E 3E 60                    ld    a, 96       ; Половина экрана
 19+  F420 84           loc_D9BA:   add   a, h
 20+  F421 67                       ld    h, a
 21+  F422 22 FC 8F                 ld    (bios_vars.cursorY), hl
 22+  F425
 23+  F425                          ; Восстанавливаем регистры
 24+  F425 F1                       pop   af
 25+  F426 E1                       pop   hl
 26+  F427 C9                       ret
 27+  F428
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\setCursorPosPanel.inc
136   F428                  INCLUDE "draw.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\draw.inc
  1+  F428              ;----------------------------------------------------------------------------
  2+  F428              ; MXOS NC.COM
  3+  F428              ; Рисование окошек
  4+  F428              ;
  5+  F428              ; 2013-12-18 Дизассемблировано vinxru
  6+  F428              ;----------------------------------------------------------------------------
  7+  F428
  8+  F428              draw:       ; Читаем 5 байт из hl в a, hl, c, b.
  9+  F428                          ; При этом de = hl+5
 10+  F428 7E                       ld    a, (hl)
 11+  F429 23                       inc   hl
 12+  F42A 5E                       ld    e, (hl)
 13+  F42B 23                       inc   hl
 14+  F42C 56                       ld    d, (hl)
 15+  F42D 23                       inc   hl
 16+  F42E 4E                       ld    c, (hl)
 17+  F42F 23                       inc   hl
 18+  F430 46                       ld    b, (hl)
 19+  F431 23                       inc   hl
 20+  F432 EB                       ex    de, hl
 21+  F433
 22+  F433                          ; Если a=0 (первый байт), то выйти
 23+  F433 A7                       and   a
 24+  F434 C8                       ret z
 25+  F435
 26+  F435                          ; Если не установлен 7-ой бит и активная панель правая, то X += 192
 27+  F435 FA 3B F4                 jp M, draw_0
 28+  F438 CD 67 F4                 call  activePanelPos
 29+  F43B              draw_0:
 30+  F43B
 31+  F43B                          ; Если a&0xF==3, то заполнить c байт памяти байтом b
 32+  F43B E6 0F                    and   0Fh
 33+  F43D FE 03                    cp    3
 34+  F43F CA 4E F4                 jp z, draw3
 35+  F442
 36+  F442                          ; Если a&0xF==1, то нарисовать веритикальную линию
 37+  F442                          ; b-первый байт, c-средняя длина, *de++ - последний байт
 38+  F442 FE 01                    cp    1
 39+  F444 CA 55 F4                 jp z, draw1
 40+  F447
 41+  F447                          ; Нарисовать окно
 42+  F447 CD 75 F4                 call  draw_window
 43+  F44A
 44+  F44A              draw_next:  ; hl=de и следующий цикл
 45+  F44A EB                       ex    de, hl
 46+  F44B C3 28 F4                 jp    draw
 47+  F44E
 48+  F44E              ; ---------------------------------------------------------------------------
 49+  F44E              ; Заполнить c байт памяти байтом b
 50+  F44E
 51+  F44E 78           draw3:      ld    a, b
 52+  F44F CD B7 F4                 call  memset_hl_a_c
 53+  F452 C3 4A F4                 jp    draw_next
 54+  F455
 55+  F455              ; ---------------------------------------------------------------------------
 56+  F455              ; Линия hl-адрес, b-первый байт, c-средняя длина, *de++ - последний байт
 57+  F455
 58+  F455              draw1:      ; *hl++ |= b
 59+  F455 78                       ld    a, b
 60+  F456 B6                       or    (hl)
 61+  F457 77                       ld    (hl), a
 62+  F458 24                       inc   h
 63+  F459
 64+  F459              loc_D9F3:
 65+  F459 36 FF                    ld    (hl), 0FFh
 66+  F45B 24                       inc   h
 67+  F45C 0D                       dec   c
 68+  F45D C2 59 F4                 jp nz, loc_D9F3
 69+  F460
 70+  F460                          ; hl |= *de++
 71+  F460 1A                       ld    a, (de)
 72+  F461 13                       inc   de
 73+  F462 B6                       or    (hl)
 74+  F463 77                       ld    (hl), a
 75+  F464
 76+  F464 C3 4A F4                 jp    draw_next
 77+  F467
 78+  F467              ; ---------------------------------------------------------------------------
 79+  F467              ; Если активная правая панель, сдвинуть адрес на пол экрана
 80+  F467
 81+  F467              activePanelPos:
 82+  F467 F5                       push  af
 83+  F468 3A BB F7                 ld    a, (state.activePanel)
 84+  F46B A7                       and   a
 85+  F46C CA 71 F4                 jp z, loc_DA0B
 86+  F46F 3E 18                    ld    a, 24
 87+  F471 84           loc_DA0B:   add   a, h
 88+  F472 67                       ld    h, a
 89+  F473 F1                       pop   af
 90+  F474 C9                       ret
 91+  F475
 92+  F475              ; ---------------------------------------------------------------------------
 93+  F475              ; Рисуем окно (b=ширина-2, с=высота-6)
 94+  F475
 95+  F475              draw_window:
 96+  F475                          ; Если h - 90h + b >= 0x2F, то есть X + b + 2 > ширина экрана, то выйти
 97+  F475 7C                       ld    a, h
 98+  F476 D6 90                    sub   90h
 99+  F478 80                       add   a, b
100+  F479 FE 2F                    cp    2Fh
101+  F47B D0                       ret nc
102+  F47C
103+  F47C                          ; Сохранить регистры
104+  F47C E5                       push  hl
105+  F47D C5                       push  bc
106+  F47E D5                       push  de
107+  F47F
108+  F47F                          ; Линия
109+  F47F 11 5E F7                 ld    de, v_window
110+  F482 CD 99 F4                 call  line313
111+  F485
112+  F485                          ; Повтор b раз
113+  F485              draw_window_2:
114+  F485 D5                       push  de
115+  F486 CD 99 F4                 call  line313
116+  F489 05                       dec   b
117+  F48A CA 91 F4                 jp z, draw_window_3
118+  F48D D1                       pop   de
119+  F48E C3 85 F4                 jp    draw_window_2
120+  F491
121+  F491              ; ---------------------------------------------------------------------------
122+  F491
123+  F491              draw_window_3:
124+  F491 F1                       pop   af
125+  F492
126+  F492                          ; Линия
127+  F492 CD 99 F4                 call  line313
128+  F495
129+  F495                          ; Восстановить регистры и выйти
130+  F495 D1                       pop   de
131+  F496 C1                       pop   bc
132+  F497 E1                       pop   hl
133+  F498 C9                       ret
134+  F499
135+  F499              ; ---------------------------------------------------------------------------
136+  F499              ; Вертикальная линия. Задается три верхних байта, заполнитель и три нижних
137+  F499
138+  F499              line313:    ; Сохраняем регистры
139+  F499 C5                       push  bc
140+  F49A E5                       push  hl
141+  F49B
142+  F49B                          ; Копируем 3 байта (сверху-вниз)
143+  F49B CD AA F4                 call  memcpy_hl_de_3
144+  F49E
145+  F49E                          ; 4 ый байт повторяем С-раз (сверху-вниз)
146+  F49E 1A                       ld    a, (de)
147+  F49F CD B7 F4                 call  memset_hl_a_c
148+  F4A2 13                       inc   de
149+  F4A3
150+  F4A3                          ; Копируем 3 байта (сверху-вниз)
151+  F4A3 CD AA F4                 call  memcpy_hl_de_3
152+  F4A6
153+  F4A6                          ; Восстаналиваем регистры
154+  F4A6 E1                       pop   hl
155+  F4A7 C1                       pop   bc
156+  F4A8
157+  F4A8                          ; Вправо
158+  F4A8 24                       inc   h
159+  F4A9 C9                       ret
160+  F4AA
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\draw.inc
137   F4AA                  INCLUDE "tools.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\tools.inc
  1+  F4AA              ;----------------------------------------------------------------------------
  2+  F4AA              ; MXOS NC.COM
  3+  F4AA              ; Копирвоание 3-х байт из адреса de в адрес hl
  4+  F4AA              ;
  5+  F4AA              ; 2013-12-18 Дизассемблировано vinxru
  6+  F4AA              ;----------------------------------------------------------------------------
  7+  F4AA
  8+  F4AA              memcpy_hl_de_3:
  9+  F4AA 1A                   ld    a, (de)
 10+  F4AB 77                   ld    (hl), a
 11+  F4AC 23                   inc   hl
 12+  F4AD 13                   inc   de
 13+  F4AE
 14+  F4AE 1A                   ld    a, (de)
 15+  F4AF 77                   ld    (hl), a
 16+  F4B0 23                   inc   hl
 17+  F4B1 13                   inc   de
 18+  F4B2
 19+  F4B2 1A                   ld    a, (de)
 20+  F4B3 77                   ld    (hl), a
 21+  F4B4 23                   inc   hl
 22+  F4B5 13                   inc   de
 23+  F4B6
 24+  F4B6 C9                   ret
 25+  F4B7
 26+  F4B7              ;----------------------------------------------------------------------------
 27+  F4B7              ; MXOS NC.COM
 28+  F4B7              ; Заполнение памяти по адресу hl байтом a длинной c
 29+  F4B7              ;
 30+  F4B7              ; 2013-12-18 Дизассемблировано vinxru
 31+  F4B7              ;----------------------------------------------------------------------------
 32+  F4B7
 33+  F4B7              memset_hl_a_c:
 34+  F4B7 77                   ld      (hl), a
 35+  F4B8 23                   inc     hl
 36+  F4B9 0D                   dec     c
 37+  F4BA C2 B7 F4             jp nz,  memset_hl_a_c
 38+  F4BD C9                   ret
 39+  F4BE
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\tools.inc
138   F4BE                  INCLUDE "compactName.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\compactName.inc
  1+  F4BE              ;----------------------------------------------------------------------------
  2+  F4BE              ; MXOS NC.COM
  3+  F4BE              ; Убрать из имени пробелы
  4+  F4BE              ;
  5+  F4BE              ; вход:
  6+  F4BE              ;   hl - откуда
  7+  F4BE              ;   de - куда
  8+  F4BE              ;
  9+  F4BE              ; сохраняемые регистры:
 10+  F4BE              ;   hl, bc
 11+  F4BE              ;
 12+  F4BE              ; 2013-12-18 Дизассемблировано vinxru
 13+  F4BE              ;----------------------------------------------------------------------------
 14+  F4BE
 15+  F4BE              compactName:
 16+  F4BE                          ; Сохраняем регистры
 17+  F4BE E5                       push    hl
 18+  F4BF C5                       push    bc
 19+  F4C0
 20+  F4C0                          ; Копируем до пробела, но не более FILE_NAME_LENGTH букв
 21+  F4C0 01 08 00                 ld      bc, FILE_NAME_LENGTH
 22+  F4C3 7E           compactName_1:      ld  a, (hl)
 23+  F4C4 FE 20                    cp      ' '
 24+  F4C6 CA D0 F4                 jp z,   compactName_2
 25+  F4C9 12                       ld      (de),a
 26+  F4CA 23                       inc     hl
 27+  F4CB 13                       inc     de
 28+  F4CC 0D                       dec     c
 29+  F4CD C2 C3 F4                 jp nz,  compactName_1
 30+  F4D0
 31+  F4D0              compactName_2:
 32+  F4D0                          ; Пропущенные символы исходной строки
 33+  F4D0 09                       add     hl, bc
 34+  F4D1
 35+  F4D1                          ; Точка
 36+  F4D1 3E 2E                    ld      a, '.'
 37+  F4D3 12                       ld      (de),a
 38+  F4D4 13                       inc     de
 39+  F4D5
 40+  F4D5                          ; Копируем до пробела, но не более 3 букв
 41+  F4D5 0E 03                    ld      c, 3
 42+  F4D7              compactName_3:
 43+  F4D7 7E                       ld      a, (hl)
 44+  F4D8 FE 20                    cp      ' '
 45+  F4DA CA E4 F4                 jp z,   compactName_4
 46+  F4DD 12                       ld      (de),a
 47+  F4DE 23                       inc     hl
 48+  F4DF 13                       inc     de
 49+  F4E0 0D                       dec     c
 50+  F4E1 C2 D7 F4                 jp nz,  compactName_3
 51+  F4E4
 52+  F4E4              compactName_4:
 53+  F4E4 EB                       ex      de, hl
 54+  F4E5 F5                       push    af
 55+  F4E6
 56+  F4E6                          ; Если последний символ '.', то удаляем его
 57+  F4E6 2B                       dec     hl
 58+  F4E7 7E                       ld      a, (hl)
 59+  F4E8 FE 2E                    cp      '.'
 60+  F4EA CA EE F4                 jp z,   compactName_5
 61+  F4ED 23                       inc     hl
 62+  F4EE
 63+  F4EE              compactName_5:
 64+  F4EE                          ; Добавляем пробел и конец строки
 65+  F4EE 36 20                    ld      (hl), ' '
 66+  F4F0 23                       inc     hl
 67+  F4F1 36 0D                    ld      (hl), 0Dh
 68+  F4F3 23                       inc     hl
 69+  F4F4 36 00                    ld      (hl), 0
 70+  F4F6
 71+  F4F6                          ; Результат в de
 72+  F4F6 EB                       ex    de, hl
 73+  F4F7
 74+  F4F7                          ; Восстаналиваем регистры и выходим
 75+  F4F7 F1                       pop   af
 76+  F4F8 C1                       pop   bc
 77+  F4F9 E1                       pop   hl
 78+  F4FA C9                       ret
 79+  F4FB
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\compactName.inc
139   F4FB                  INCLUDE "input.inc"
# file opened: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\input.inc
  1+  F4FB              ;----------------------------------------------------------------------------
  2+  F4FB              ; MXOS NC.COM
  3+  F4FB              ; Ввод строки
  4+  F4FB              ;
  5+  F4FB              ; 2013-12-18 Дизассемблировано vinxru
  6+  F4FB              ;----------------------------------------------------------------------------
  7+  F4FB
  8+  F4FB              input:      ; Вывод строки
  9+  F4FB E5                       push    hl
 10+  F4FC 21 1C F8                 ld      hl, vars.input
 11+  F4FF CD 9C EA                 call    printStringInv
 12+  F502 E1                       pop     hl
 13+  F503
 14+  F503                          ; Включаем инверсию
 15+  F503 3E 01                    ld      a, 1
 16+  F505 32 FA 8F                 ld      (bios_vars.inverse),a
 17+  F508
 18+  F508              input_loop: ; Ввод символа
 19+  F508 CD 03 C8                 call  bios_getch
 20+  F50B
 21+  F50B                          ; Enter или ESC
 22+  F50B FE 0D                    cp      0Dh
 23+  F50D CA 40 F5                 jp z,   input_exit
 24+  F510 FE 1B                    cp      1Bh
 25+  F512 CA 40 F5                 jp z,   input_exit
 26+  F515
 27+  F515                          ; Если служебная клавиша или пробел, то пропускаем
 28+  F515 FE 21                    cp      21h
 29+  F517 DA 08 F5                 jp c,   input_loop
 30+  F51A
 31+  F51A                          ; Сохраняем для вывода
 32+  F51A 4F                       ld      c, a
 33+  F51B
 34+  F51B                          ; Помещаем символ в буфер
 35+  F51B 12                       ld      (de),a
 36+  F51C
 37+  F51C                          ; Удаление
 38+  F51C FE 7F                    cp      7Fh
 39+  F51E CA 2E F5                 jp z,   input_bkspc
 40+  F521
 41+  F521                          ; Если переполнение
 42+  F521 3E 33                    ld      a, (vars.input + P_INPUT_WIDTH) & 0FFh  ; a = младший байт адреса пследнего байта буфера
 43+  F523 BB                       cp      e
 44+  F524 CA 08 F5                 jp z,   input_loop
 45+  F527
 46+  F527                          ; Вывод символа на экран
 47+  F527 CD 09 C8                 call    bios_printChar
 48+  F52A
 49+  F52A                          ; Увеличение длины строки
 50+  F52A 13                       inc     de
 51+  F52B
 52+  F52B C3 08 F5                 jp      input_loop
 53+  F52E
 54+  F52E              ; ---------------------------------------------------------------------------
 55+  F52E
 56+  F52E              input_bkspc:
 57+  F52E                          ; Если это начало строки, выходим
 58+  F52E 3E 1C                    ld      a, vars.input & 0FFh
 59+  F530 BB                       cp      e
 60+  F531 CA 08 F5                 jp z,   input_loop
 61+  F534
 62+  F534                          ; Уменьшаем длину строки
 63+  F534 1D                       dec     e
 64+  F535
 65+  F535                          ; Стираем символ с экрана
 66+  F535 E5                       push    hl
 67+  F536 21 03 F6                 ld      hl, asc_DC17
 68+  F539 CD 18 C8                 call    bios_printString
 69+  F53C E1                       pop     hl
 70+  F53D
 71+  F53D C3 08 F5                 jp      input_loop
 72+  F540
 73+  F540              ; ---------------------------------------------------------------------------
 74+  F540
 75+  F540              input_exit:
 76+  F540                          ; Сохраняем ESC или Enter для выхода
 77+  F540 4F                       ld      c, a
 78+  F541
 79+  F541                          ; Записываем в конец строки 0Dh, 0
 80+  F541 EB                       ex      de, hl
 81+  F542 36 0D                    ld      (hl), 0Dh
 82+  F544 23                       inc     hl
 83+  F545 AF                       xor     a
 84+  F546 77                       ld      (hl), a
 85+  F547
 86+  F547                          ; Восстанавливаем инверсию
 87+  F547 32 FA 8F                 ld      (bios_vars.inverse),a
 88+  F54A
 89+  F54A                          ; Выход
 90+  F54A 79                       ld      a, c
 91+  F54B C9                       ret
 92+  F54C
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\input.inc
140   F54C
141   F54C              ;---------------------------------------------------------------------------
142   F54C              ; Константы и переменные
143   F54C              ;---------------------------------------------------------------------------
144   F54C
145   F54C 46 31 20 4C  aF1LeftF2RighF3:    DB "F1 Left F2 Rght F3 Info F4 Edit F5 Copy F6 RMov F7 Load F8 Del",0
145   F550 65 66 74 20
145   F554 46 32 20 52
145   F558 67 68 74 20
145   F55C 46 33 20 49
145   F560 6E 66 6F 20
145   F564 46 34 20 45
145   F568 64 69 74 20
145   F56C 46 35 20 43
145   F570 6F 70 79 20
145   F574 46 36 20 52
145   F578 4D 6F 76 20
145   F57C 46 37 20 4C
145   F580 6F 61 64 20
145   F584 46 38 20 44
145   F588 65 6C 00
146   F58B 43 6F 6D 6D  aCommanderVer:      DB "Commander version 2.0",0
146   F58F 61 6E 64 65
146   F593 72 20 76 65
146   F597 72 73 69 6F
146   F59B 6E 20 32 2E
146   F59F 30 00
147   F5A1 28 43 29 20  aCopyright:         DB "(C) Omsk 1992, SPb 2022",0
147   F5A5 4F 6D 73 6B
147   F5A9 20 31 39 39
147   F5AD 32 2C 20 53
147   F5B1 50 62 20 32
147   F5B5 30 32 32 00
148   F5B9 46 69 6C 65  aFileIsReanOnly:    DB "File is read-only!",0
148   F5BD 20 69 73 20
148   F5C1 72 65 61 64
148   F5C5 2D 6F 6E 6C
148   F5C9 79 21 00
149   F5CC 41 20 20 20  aABCD:              DB "A   B   C   D",0
149   F5D0 42 20 20 20
149   F5D4 43 20 20 20
149   F5D8 44 00
150   F5DA 45 20 20 20  aEFGH:              DB "E   F   G   H",0
150   F5DE 46 20 20 20
150   F5E2 47 20 20 20
150   F5E6 48 00
151   F5E8 43 68 6F 6F  aChooseDrive:       DB "Choose drive:",0
151   F5EC 73 65 20 64
151   F5F0 72 69 76 65
151   F5F4 3A 00
152   F5F6 44 65 6C 65  aDeleteFrom:        DB "Delete from ",0
152   F5FA 74 65 20 66
152   F5FE 72 6F 6D 20
152   F602 00
153   F603 08 20 08 00  asc_DC17:           DB 8, ' ',8, 0
154   F607 43 6F 70 79  aCopyFromTo:        DB "Copy from    to",8,8,8,8,8, 0
154   F60B 20 66 72 6F
154   F60F 6D 20 20 20
154   F613 20 74 6F 08
154   F617 08 08 08 08
154   F61B 00
155   F61C 43 61 6E 27  aCantCreateFile:    DB "Can",39,"t create file!",0
155   F620 74 20 63 72
155   F624 65 61 74 65
155   F628 20 66 69 6C
155   F62C 65 21 00
156   F62F 52 65 6E 61  aRemoveFromTo:      DB "Rename/move from    to",8,8,8,8,8, 0
156   F633 6D 65 2F 6D
156   F637 6F 76 65 20
156   F63B 66 72 6F 6D
156   F63F 20 20 20 20
156   F643 74 6F 08 08
156   F647 08 08 08 00
157   F64B 18 4B 42 20  aKBytesExtMemory:   DB 18h,"KB extended memory",0   ; здесь и далее 18h вместо ведущего пробела,
157   F64F 65 78 74 65
157   F653 6E 64 65 64
157   F657 20 6D 65 6D
157   F65B 6F 72 79 00
158   F65F 18 62 79 74  aKBytesMemory:      DB 18h,"bytes Memory",0         ; чтобы не портить цвет предыдущего символа
158   F663 65 73 20 4D
158   F667 65 6D 6F 72
158   F66B 79 00
159   F66D 18 62 79 74  aKBytesFree:        DB 18h,"bytes Free",0
159   F671 65 73 20 46
159   F675 72 65 65 00
160   F679 18 4B 42 20  aKBytesTotalOnDrv:  DB 18h,"KB total on drive ",0
160   F67D 74 6F 74 61
160   F681 6C 20 6F 6E
160   F685 20 64 72 69
160   F689 76 65 20 00
161   F68D 18 4B 42 20  aKBytesFreeOnDrv:   DB 18h,"KB free  on drive ",0
161   F691 66 72 65 65
161   F695 20 20 6F 6E
161   F699 20 64 72 69
161   F69D 76 65 20 00
162   F6A1 18 66 69 6C  aFilesUse:          DB 18h,"files use ",0
162   F6A5 65 73 20 75
162   F6A9 73 65 20 00
163   F6AD 18 4B 42 20  aKBytesIn:          DB 18h,"KB in ",0
163   F6B1 69 6E 20 00
164   F6B5 56 6F 6C 75  aVolumeLabel:       DB "Volume label: ",0
164   F6B9 6D 65 20 6C
164   F6BD 61 62 65 6C
164   F6C1 3A 20 00
165   F6C4 44 72 69 76  aDrive:             DB "Drive ",0
165   F6C8 65 20 00
166   F6CB 18 68 61 73  aHasNoDriver:       DB 18h,"has no driver",0
166   F6CF 20 6E 6F 20
166   F6D3 64 72 69 76
166   F6D7 65 72 00
167   F6DA 18 69 73 20  aNotFormatted:      DB 18h,"is not formatted",0
167   F6DE 6E 6F 74 20
167   F6E2 66 6F 72 6D
167   F6E6 61 74 74 65
167   F6EA 64 00
168   F6EC 53 61 76 65  aSaveFromToTape:    DB "Save from    to tape",8,8,8,8,8,8,8,8,8,8, 0
168   F6F0 20 66 72 6F
168   F6F4 6D 20 20 20
168   F6F8 20 74 6F 20
168   F6FC 74 61 70 65
168   F700 08 08 08 08
168   F704 08 08 08 08
168   F708 08 08 00
169   F70B 53 61 76 69  aSavingToTape:      DB "Saving to tape",0
169   F70F 6E 67 20 74
169   F713 6F 20 74 61
169   F717 70 65 00
170   F71A 4C 6F 61 64  aLoadingFromTapeTo: DB "Loading from tape to ",0
170   F71E 69 6E 67 20
170   F722 66 72 6F 6D
170   F726 20 74 61 70
170   F72A 65 20 74 6F
170   F72E 20 00
171   F730 45 72 72 6F  aErrorLoadingTa:    DB "Error loading from tape",0
171   F734 72 20 6C 6F
171   F738 61 64 69 6E
171   F73C 67 20 66 72
171   F740 6F 6D 20 74
171   F744 61 70 65 00
172   F748
173   F748                  IF FULL_PANELS==0
174   F748 4E 61 6D 65  aNameName:          DB "Name",0
174   F74C 00
175   F74D                  ENDIF
176   F74D
177   F74D 41 3A 4E 43  aNcExt:             DB "A:NC.EXT",0
177   F751 2E 45 58 54
177   F755 00
178   F756 41 3A 45 2E  aEditor:            DB "A:E.COM",0Dh      ; терминатором тут должно быть 0Dh
178   F75A 43 4F 4D 0D
179   F75E
180   F75E              ;-----------------------------------------------------------------------
181   F75E              ; Описания окон
182   F75E
183   F75E 7F           v_window:   DB 01111111b            ; Верхний левый угол
184   F75F 40                       DB 01000000b
185   F760 5F                       DB 01011111b
186   F761 50                       DB 01010000b            ; Левый край
187   F762 5F                       DB 01011111b            ; Нижний левый угол
188   F763 40                       DB 01000000b
189   F764 7F                       DB 01111111b
190   F765
191   F765 FF                       DB 11111111b            ; Верх окна
192   F766 00                       DB 00000000b
193   F767 FF                       DB 11111111b
194   F768
195   F768 00                       DB 00000000b            ; Содержимое окна
196   F769
197   F769 FF                       DB 11111111b            ; Низ окна
198   F76A 00                       DB 00000000b
199   F76B FF                       DB 11111111b
200   F76C
201   F76C FE                       DB 11111110b            ; Правый верхний угол
202   F76D 02                       DB 00000010b
203   F76E FA                       DB 11111010b
204   F76F 0A                       DB 00001010b            ; Правая граница
205   F770 FA                       DB 11111010b            ; Правый нижний угол
206   F771 02                       DB 00000010b
207   F772 FE                       DB 11111110b
208   F773
209   F773                          MACRO G_WINDOW A,X,Y,W,H
210   F773 ~                            DB A|2, Y, 90h+(X>>3), H-6, (W>>3)-2
211   F773                          ENDM
212   F773
213   F773                          MACRO G_LINE A,X,Y,W
214   F773 ~                            DB A|1, Y, 90h+(X>>3), (((X&7)+W+7)>>3)-2, 0FFh>>(X&7), (0FF00h>>((W+X)&7)) & 0FFh
215   F773                          ENDM
216   F773
217   F773                          MACRO G_VLINE A,X,Y,H
218   F773 ~                            DB A|3, Y, 90h+(X>>3), H, 80h>>(X&7)
219   F773                          ENDM
220   F773
221   F773              g_filePanel:
222   F773                          G_WINDOW 0, 0, 0, 192, 230        ; 2, 0, 90h, 0E0h, 16h
222   F773 02 00 90 E0 >                DB 0|2, 0, 90h+(0>>3), 230-6, (192>>3)-2
222   F777 16          >
223   F778                          G_LINE   0, 4, 208, 184           ; 1, 0D0h, 90h, 16h, 0Fh, 0F0h
223   F778 01 D0 90 16 >                DB 0|1, 208, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
223   F77C 0F F0       >
224   F77E                          G_VLINE  0, 96, 3, 205            ; 3, ?, 9Ch, 0CDh, 80h
224   F77E 03 03 9C CD >                DB 0|3, 3, 90h+(96>>3), 205, 80h>>(96&7)
224   F782 80          >
225   F783 00                       DB 0
226   F784
227   F784              g_infoPanel:
228   F784                          G_WINDOW 0, 0, 0, 192, 230        ; 2, 0, 90h, 0E0h, 16h
228   F784 02 00 90 E0 >                DB 0|2, 0, 90h+(0>>3), 230-6, (192>>3)-2
228   F788 16          >
229   F789                          G_LINE   0, 4, 31, 184            ; 1, 1Fh, 90h, 16h, 0Fh, 0F0h
229   F789 01 1F 90 16 >                DB 0|1, 31, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
229   F78D 0F F0       >
230   F78F                          G_LINE   0, 4, 136, 184           ; 1, 70h, 90h, 16h, 0Fh, 0F0h
230   F78F 01 88 90 16 >                DB 0|1, 136, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
230   F793 0F F0       >
231   F795 00                       DB 0
232   F796
233   F796              g_chooseDrive:
234   F796                          G_WINDOW 0, 40, 85, 112, 50       ; 2, 55h, 95h, 02Ch, 0Ch
234   F796 02 55 95 2C >                DB 0|2, 85, 90h+(40>>3), 50-6, (112>>3)-2
234   F79A 0C          >
235   F79B                          G_LINE   0, 44, 103, 104          ; 1, 67h, 95h, 0Ch, 0Fh, 0F0h
235   F79B 01 67 95 0C >                DB 0|1, 103, 90h+(44>>3), (((44&7)+104+7)>>3)-2, 0FFh>>(44&7), (0FF00h>>((104+44)&7)) & 0FFh
235   F79F 0F F0       >
236   F7A1 00                       DB 0
237   F7A2
238   F7A2              g_window1:
239   F7A2                          G_WINDOW 80h, 112, 80, 160, 37    ; 82h, 50h, 9Eh, 1Fh, 12h
239   F7A2 82 50 9E 1F >                DB 80h|2, 80, 90h+(112>>3), 37-6, (160>>3)-2
239   F7A6 12          >
240   F7A7                          G_LINE   80h, 116, 98, 152        ; 81h, 62h, 9Eh, 12h, 0Fh, 0F0h
240   F7A7 81 62 9E 12 >                DB 80h|1, 98, 90h+(116>>3), (((116&7)+152+7)>>3)-2, 0FFh>>(116&7), (0FF00h>>((152+116)&7)) & 0FFh
240   F7AB 0F F0       >
241   F7AD 00                       DB 0
242   F7AE
243   F7AE              g_window2:
244   F7AE                          G_WINDOW 80h, 104, 114, 176, 37   ; 82h, 72h, 9Dh, 1Fh, 14h
244   F7AE 82 72 9D 1F >                DB 80h|2, 114, 90h+(104>>3), 37-6, (176>>3)-2
244   F7B2 14          >
245   F7B3                          G_LINE   80h, 108, 132, 168       ; 81h, 84h, 9Dh, 14h, 0Fh, 0F0h
245   F7B3 81 84 9D 14 >                DB 80h|1, 132, 90h+(108>>3), (((108&7)+168+7)>>3)-2, 0FFh>>(108&7), (0FF00h>>((168+108)&7)) & 0FFh
245   F7B7 0F F0       >
246   F7B9 00                       DB 0
247   F7BA
248   F7BA              ;-----------------------------------------------------------------------
249   F7BA              ; Размер буфера для листинга директории (штук дескрипторов файлов)
250   F7BA
251   F7BA                  IF FULL_PANELS
252   F7BA ~            FILE_LIST_SIZE    = 40
253   F7BA                  ELSE
254   F7BA              FILE_LIST_SIZE    = 36
255   F7BA                  ENDIF
256   F7BA
257   F7BA              ;-----------------------------------------------------------------------
258   F7BA              ; Коодинаты элементов панелей от левого верхнего угла экрана
259   F7BA              ; x - удвоенные пиксели, y - пиксели
260   F7BA
261   F7BA              P_NAME_X1         = 17  ; Заголовок панели "NAME" (2 колонки)
262   F7BA              P_NAME_X2         = 65
263   F7BA              P_NAME_Y          = 16
264   F7BA
265   F7BA              P_FILE_LIST_X1    = 6   ; Файловая таблица (2 колонки)
266   F7BA              P_FILE_LIST_X2    = 54
267   F7BA
268   F7BA                  IF FULL_PANELS
269   F7BA ~            P_FILE_LIST_Y     = 12
270   F7BA                  ELSE
271   F7BA              P_FILE_LIST_Y     = 32
272   F7BA                  ENDIF
273   F7BA
274   F7BA              P_FILE_LIST_H     = FILE_LIST_SIZE / 2  ; Высота файловой таблицы в строках
275   F7BA              P_FILE_LIST_Y_MAX = P_FILE_LIST_H * 10 + P_FILE_LIST_Y
276   F7BA
277   F7BA              P_DRIVE_LETTER_X  = 9   ; Буква имени диска внизу панели
278   F7BA              P_DRIVE_LETTER_Y  = 222
279   F7BA              P_FILE_NAME_X     = 15  ; Имя файла внизу панели
280   F7BA              P_FILE_NAME_Y     = 222
281   F7BA              P_FILE_DATA_X     = 57  ; Данные о файле (адрес загрузки, размер)
282   F7BA              P_FILE_DATA_Y     = 222
283   F7BA
284   F7BA              P_INPUT_WIDTH     = 23  ; Длина поля ввода имени файла в символах
285   F7BA
286   F7BA              ;-----------------------------------------------------------------------
287   F7BA              ; Переменные
288   F7BA              ;-----------------------------------------------------------------------
289   F7BA
290   F7BA              ; Блок переменных состояния
291   F7BA              ; Сохраняется в неиспользуемом секторе нулевой страницs RAM-диска
292   F7BA
293   F7BA                  STRUCT NC_STATE
294   F7BA ~            initState           DB    5Ah   ; признак, что NC.COM уже запускался
295   F7BA ~            activePanel         DB    0     ; номер активной панели
296   F7BA ~            panelA_info         DB    0     ; 1 = панель A в режиме информации
297   F7BA ~            panelB_info         DB    0     ; 1 = панель B в режиме информации
298   F7BA ~            panelA_drive        DB    0     ; номер диска панели A
299   F7BA ~            panelB_drive        DB    7     ; номер диска панели B
300   F7BA ~            panelA_filesCnt     DB    0     ; количество файлов на панели A
301   F7BA ~            panelB_filesCnt     DB    0     ; количество файлов на панели B
302   F7BA ~            panelA_firstFile    DB    0     ; c какого файла начинается панель A
303   F7BA ~            panelB_firstFile    DB    0     ; c какого файла начинается панель B
304   F7BA ~            panelA_curFile      DB    0     ; на каком файле курсор на панели A
305   F7BA ~            panelB_curFile      DB    0     ; на каком файле курсор на панели B
306   F7BA                  ENDS
307   F7BA
308   F7BA 5A 00 00 00  state   NC_STATE
308   F7BE 00 07 00 00
308   F7C2 00 00 00 00
309   F7C6              stateEnd:           ; адрес конца блока переменных состояния
310   F7C6
311   F7C6              ; Другие переменные - не включены в бинарник (машинный код не
312   F7C6              ; генерируется, при первом запуске переменные могут содержать мусор)
313   F7C6
314   F7C6                  STRUCT NC_VARIABLES
315   F7C6 ~            cmdLinePos      DW    0
316   F7C6 ~            cmdLineEnd      DW    0
317   F7C6 ~            chooseDrive     DB    0
318   F7C6 ~            tapeSaveCRC     DW    0         ; контрольная сумма файла с ленты
319   F7C6 ~            savedSP         DW    0
320   F7C6 ~            tapeLoadAddr    DW    0         ; адрес загрузки файла с ленты
321   F7C6 ~            diskInfoPtr     DW    0         ; адрес структуны DISK_INFO
322   F7C6 ~            cmdLine         BLOCK 59, 0FFh  ; командная строка
323   F7C6 ~            cmdLineCtrl     DB    0FFh      ; контроль переполнения командной строки
324   F7C6 ~                            BLOCK 13, 0FFh
325   F7C6 ~            input           BLOCK 21, 0FFh
326   F7C6 ~                            BLOCK 11
327   F7C6 ~            tempFileDescr   FILE_DESCRIPTOR
328   F7C6                  ENDS
329   F7C6
330   F7C6              vars    NC_VARIABLES = $        ; адрес начала блока переменнных
331   F7C6              varsEnd = vars + NC_VARIABLES   ; адрес конца  блока переменнных
332   F7C6
333   F7C6              ; Адрес буфера для листинга директории (FILE_LIST_SIZE структур FILE_INFO + 1 = 577 байт)
334   F7C6              ;FILE_LIST_BUFFER = 8800h
335   F7C6              FILE_LIST_BUFFER      = varsEnd
336   F7C6              FILE_LIST_BUFFER_SIZE = FILE_LIST_SIZE * FILE_INFO_SIZE + 1
337   F7C6
338   F7C6              ;-----------------------------------------------------------------------
339   F7C6              ; Проверяем, что программа помещается в память вместе со своими буферами
340   F7C6              ;-----------------------------------------------------------------------
341   F7C6
342   F7C6              ; Конец NC.COM после разворачивания в памяти
343   F7C6              NC_END = FILE_LIST_BUFFER + FILE_LIST_BUFFER_SIZE
344   F7C6
345   F7C6              ; Максимальный допустимый размер NC.COM
346   F7C6                  IF NEW_MEMORY_MAP
347   F7C6              NC_END_MAX = FAT_CACHE_ADDR  ; до дискового кэша
348   F7C6                  ELSE
349   F7C6 ~            NC_END_MAX = 0E200h          ; до адреса 0E200h
350   F7C6                  ENDIF
351   F7C6
352   F7C6              ; Проверка
353   F7C6                  IF NC_END >= NC_END_MAX
354   F7C6 ~                    ASSERT 0
355   F7C6 ~                    DISPLAY /l, "Error! NC.COM did not fit (", NC_END, " > ", NC_END_MAX, ")"
356   F7C6                  ENDIF
357   F7C6
358   F7C6                  END
# file closed: D:\Projects\Retro-PC\Specialist\MySoft\MXOS-Z80\nc\NC.asm
