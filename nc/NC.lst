# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\NC.asm
  1   0000              ;----------------------------------------------------------------------------
  2   0000              ; MXOS - Файловый менеджер NC.COM
  3   0000              ;
  4   0000              ; 2013-12-18 Дизассемблировано и доработано vinxru
  5   0000              ; 2022-01-31 Доработано SpaceEngineer
  6   0000              ;----------------------------------------------------------------------------
  7   0000
  8   0000                  INCLUDE "../include/mxos.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\../include/mxos.inc
  1+  0000              ;-----------------------------------------------------------------------
  2+  0000              ; MXOS
  3+  0000              ; Точки входа и настройки сборки MXOS
  4+  0000              ;
  5+  0000              ; Карта памяти:
  6+  0000              ;   8FDF-8FFF - [  32  B] Переменные
  7+  0000              ;   9000-BFFF - [12   KB] Экран
  8+  0000              ;   C000-CFFF - [4    KB] DOS.SYS (в конце чуть чуть свободного места под доработки)
  9+  0000              ;   D000-E1FF - [4.5  KB] NC.COM (в конце место под список файлов и чуть чуть свободного места под доработки)
 10+  0000              ;   E200-E5FF - [1.0  KB] (свободно 1024 байт)
 11+  0000              ;   E600-E7FF - [0.5  KB] Драйвер магнитофона
 12+  0000              ;   E900-F0FF - [2    KB] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
 13+  0000              ;   F100-F8FF - [2.0  KB] FORMAT.COM, FPAGE.COM, MON2.COM и прочие утилиты
 14+  0000              ;   F900-F9FF - [ 256  B] (Свободно 256 байт)
 15+  0000              ;   FA00-FAFF - [ 256  B] Драйвер флеш-диска
 16+  0000              ;   FB00-FDFF - [ 768  B] Дисковый буфер
 17+  0000              ;   FF00-FF81 - [ 129  B] Командная строка. Заполняется функцией bios_fileExec
 18+  0000              ;   FF82-FFBF - [ 130  B] Стек
 19+  0000              ;   FFC0-FFEF - [  32  B] Непереключаемое ОЗУ, драйвера обмена с RAM диском
 20+  0000              ;   FFE0-FFFF - [  32  B] Оборудование
 21+  0000              ;-----------------------------------------------------------------------
 22+  0000
 23+  0000
 24+  0000              ;-----------------------------------------------------------------------
 25+  0000              ; Конфигурация сборки
 26+  0000              ;-----------------------------------------------------------------------
 27+  0000
 28+  0000              RAMD_MAX_PAGE        =  0Fh     ; Максимальное количество страниц RAM диска (до 0Fh)
 29+  0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
 30+  0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
 31+  0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
 32+  0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
 33+  0000              FONT_ADDR            =  0E900h  ; Адрес шрфита
 34+  0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
 35+  0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
 36+  0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
 37+  0000              FAT16                =  1       ; Включить поддержку FAT16
 38+  0000
 39+  0000                  IF  LOAD_FONT
 40+  0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
 41+  0000                  ELSE
 42+  0000 ~            FONT_ADDR_DIV_8 = -1
 43+  0000                  ENDIF
 44+  0000
 45+  0000              ;-----------------------------------------------------------------------
 46+  0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
 47+  0000              ; Доступ к переменным и программ польователя:
 48+  0000              ; ld a, bios_vars.lastKey
 49+  0000              ;-----------------------------------------------------------------------
 50+  0000
 51+  0000                  STRUCT BIOS_VARIABLES
 52+  0000 ~            _reserv_1     DW      -1
 53+  0000 ~            tapeError     DW      0C800h          ; Адрес, куда происходит переход при ошибке чтения с ленты
 54+  0000 ~            tapeAddr      DW      -1              ; Адрес программы загруженной с ленты
 55+  0000 ~            _reserv_2     DW      -1
 56+  0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; Адрес альтернативного знакогенератора /8
 57+  0000 ~            cursorCfg     DB      0A9h            ; Внешний вид курсора (7 - бит видимость, 654 - положение, 3210 - высота)
 58+  0000 ~            koi8          DB      -1              ; 0FFh = включен KOI-8, 0 = включен KOI-7
 59+  0000 ~            escMode       DB      -1              ; Обработка ESC-последовательности
 60+  0000 ~            keyLocks      DB      3Ah
 61+  0000 ~            _reserv_3     DW      -1
 62+  0000 ~            lastLastKey   DB      -1
 63+  0000 ~            lastKey       DB      -1
 64+  0000 ~            beepDuration  DB      5Fh             ; Длительность звукового сигнала
 65+  0000 ~            beepFreq      DB      20h             ; Частота звукового сигнала
 66+  0000 ~            tapeInverse   DB      0FFh
 67+  0000 ~            cursorDelay   DB      020h
 68+  0000 ~            byte_8FF5     DB      0E0h
 69+  0000 ~            oldSP         DW      -1              ; Используется для сохранения SP некоторыми функциями
 70+  0000 ~            maxRamPage    DB      RAMD_MAX_PAGE   ; Максимальный детектированный номер страницы RAM-диска
 71+  0000 ~            flashPage     DB      0               ; Текущий номер страницы флеш-диска
 72+  0000 ~            inverse       DW      0               ; Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
 73+  0000 ~            cursorY       DB      -1              ; Положение курсора по вертикали в пикселях
 74+  0000 ~            cursorX       DB      -1              ; Положение курсора по горизонтали в пикселях / 2
 75+  0000 ~            writeDelay    DB      28h             ; Скорость при записи на ленту
 76+  0000 ~            readDelay     DB      3Ch             ; Скорость при чтении с ленты
 77+  0000                  ENDS
 78+  0000
 79+  0000              ; Адрес структуры BIOS_VARIABLES
 80+  0000
 81+  0000              	ORG 08FDFh
 82+  8FDF
 83+  8FDF              bios_vars   BIOS_VARIABLES = $
 84+  8FDF
 85+  8FDF              ;-----------------------------------------------------------------------
 86+  8FDF              ; Буферы в памяти
 87+  8FDF              ;-----------------------------------------------------------------------
 88+  8FDF
 89+  8FDF              fat              = 0FB00h
 90+  8FDF              diskDirectory    = 0FC00h
 91+  8FDF              diskDirectoryEnd = 0FE00h
 92+  8FDF              v_cmdLine        = 0FF00h
 93+  8FDF              STACK_ADDR       = 0FFC0h
 94+  8FDF
 95+  8FDF              ;-----------------------------------------------------------------------
 96+  8FDF              ; Стандартные точки входа ОС
 97+  8FDF              ; Отмеченные * применять не рекомендуется
 98+  8FDF              ;-----------------------------------------------------------------------
 99+  8FDF
100+  8FDF              bios_init            = 0C000h ; Теплая перезагрузка
101+  8FDF
102+  8FDF              ; Устаревшие точки, лечше не применять
103+  8FDF              bios_keyScanOld      = 0C003h ; * Получить код нажатой клавиши, = bios_keyScan
104+  8FDF              bios_drawCursorOld   = 0C006h ; * Нарисовать/стереть курсор
105+  8FDF              bios_clearScreenOld  = 0C010h ; * Оистка экрана
106+  8FDF              bios_printCharOld    = 0C037h ; * Вывод символа на экран
107+  8FDF              bios_beep_Old        = 0C170h ; * Звуковой сигнал
108+  8FDF              bios_delay_l         = 0C18Fh ; * Задержка
109+  8FDF              bios_getchOld        = 0C337h ; * Ожидание ввода с клавиатуры
110+  8FDF              bios_tapeReadOld     = 0C377h ; * Чтение байта с магнитофона
111+  8FDF              bios_tapeWriteOld    = 0C3D0h ; * Запись байта на магнитофон
112+  8FDF              bios_cmp_hl_de       = 0C427h ; * Сравнить hl и de
113+  8FDF              bios_memcpy_bc_hl    = 0C42Dh ; * Скопировать блок памяти
114+  8FDF              bios_printStringOld  = 0C438h ; * Вывод строки на экран
115+  8FDF
116+  8FDF              bios_reboot          = 0C800h ; Запустить NC.COM
117+  8FDF              bios_getch           = 0C803h ; Ожидание ввода с клавиатуры
118+  8FDF              bios_tapeRead        = 0C806h ; Чтение байта с магнитофона
119+  8FDF              bios_printChar       = 0C809h ; Вывод символа на экран
120+  8FDF              bios_tapeWrite       = 0C80Ch ; Запись байта на магнитофон
121+  8FDF              bios_input           = 0C80Fh ; Ввод строки с клавиатуры
122+  8FDF              bios_keyCheck        = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
123+  8FDF              bios_printHexByte    = 0C815h ; Вывод HEX числа на экран (байт)
124+  8FDF              bios_printString     = 0C818h ; Вывод строки на экран
125+  8FDF              bios_keyScan         = 0C81Bh ; Получить код нажатой клавиши
126+  8FDF              bios_getCursorPos    = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
127+  8FDF              bios_setCursorPos    = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
128+  8FDF              bios_tapeLoad        = 0C824h ; Загрузить программу с магнитофона
129+  8FDF              bios_tapeSave        = 0C827h ; Сохранить программу на магнитофон
130+  8FDF              bios_calcCS          = 0C82Ah ; Расчет контрольной суммы
131+  8FDF              bios_printHexWord    = 0C82Dh ; Вывод HEX числа на экран (слово)
132+  8FDF              bios_getMemTop       = 0C830h ; Получить объем доступной памяти
133+  8FDF              bios_setMemTop       = 0C833h ; Установить объем доступной памяти
134+  8FDF              bios_printer         = 0C836h ; Напечатать байт на принтере
135+  8FDF                  IF RAMFOS_COMPATIBILITY
136+  8FDF              bios_strToHex        = 0C839h ; Преобразвоние строки в HEX формате в число
137+  8FDF                  ELSE
138+  8FDF ~            bios_rebootAlt       = 0C839h ; Запустить NC.COM
139+  8FDF                  ENDIF
140+  8FDF              bios_rebootAlt2      = 0C83Ch ; Запустить NC.COM
141+  8FDF              bios_fileList        = 0C83Fh ; Получить список файлов
142+  8FDF              bios_fileGetSetDrive = 0C842h ; Получить/установить активное устройство
143+  8FDF              bios_fileCreate      = 0C845h ; Создать файл
144+  8FDF              bios_fileLoad        = 0C848h ; Загрузить файл по адресу из заголовка этого файла
145+  8FDF              bios_fileDelete      = 0C84Bh ; Удалить файл
146+  8FDF              bios_fileRename      = 0C84Eh ; Переименовать файл
147+  8FDF              bios_fileLoadInfo    = 0C851h ; Загрузить информацию о файле
148+  8FDF              bios_fileGetSetAddr  = 0C854h ; Получить/установить адрес загрузки файла
149+  8FDF              bios_fileGetSetAttr  = 0C857h ; Получить/установить атрибуты файла
150+  8FDF              bios_fileNamePrepare = 0C85Ah ; Преобразовать имя файла во внутренний формат
151+  8FDF              bios_fileExec        = 0C85Dh ; Запустить файл
152+  8FDF              bios_installDriver   = 0C860h ; Установить драйвер накопителя
153+  8FDF              bios_diskDriver      = 0C863h ; Драйвер выбранного диска
154+  8FDF              bios_fileLoad2       = 0C866h ; Загрузить файл по адресу de
155+  8FDF              bios_printCharReal   = 0C869h ; Вывод символа на экран (только реальные символы)
156+  8FDF              bios_printDecWord    = 0C86Ch ; Вывод числа экран в десятичной форме
157+  8FDF              bios_setRAMDDriver   = 0C86Fh ; Установить драйвр рам-диска
158+  8FDF
159+  8FDF              ;-----------------------------------------------------------------------
160+  8FDF              ; Точки входа драйвера доступа к ДОЗУ
161+  8FDF              ;-----------------------------------------------------------------------
162+  8FDF
163+  8FDF              bios_RAMDRead  = 0FFC0h ; чтение из ДОЗУ
164+  8FDF              bios_RAMDWrite = 0FFD0h ; запись в  ДОЗУ
165+  8FDF
166+  8FDF              ;-----------------------------------------------------------------------
167+  8FDF              ; Адрес таблицы переходов драйвера магнитофона
168+  8FDF              ;-----------------------------------------------------------------------
169+  8FDF
170+  8FDF              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
171+  8FDF
172+  8FDF              ;-----------------------------------------------------------------------
173+  8FDF              ; Порты устройств ПК "Специалист-MX2"
174+  8FDF              ;-----------------------------------------------------------------------
175+  8FDF
176+  8FDF              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
177+  8FDF              IO_KEYB_B       =  0FFE1h
178+  8FDF              IO_KEYB_C       =  0FFE2h
179+  8FDF              IO_KEYB_MODE    =  0FFE3h
180+  8FDF              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
181+  8FDF              IO_PROG_B       =  0FFE5h
182+  8FDF              IO_PROG_C       =  0FFE6h
183+  8FDF              IO_PROG_MODE    =  0FFE7h
184+  8FDF              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
185+  8FDF              IO_FDD_TRACK    =  0FFE9h
186+  8FDF              IO_FDD_SECTOR   =  0FFEAh
187+  8FDF              IO_FDD_DATA     =  0FFEBh
188+  8FDF              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
189+  8FDF              IO_TIMER_CH1    =  0FFEDh
190+  8FDF              IO_TIMER_CH2    =  0FFEEh
191+  8FDF              IO_TIMER_MODE   =  0FFEFh
192+  8FDF              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
193+  8FDF              IO_FDD_MOTOR    =  0FFF1h
194+  8FDF              IO_FDD_SIDE     =  0FFF2h
195+  8FDF              IO_FDD_DRIVE    =  0FFF3h
196+  8FDF              IO_COLOR        =  0FFF8h   ; регистр цвета
197+  8FDF              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
198+  8FDF              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
199+  8FDF              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
200+  8FDF              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
201+  8FDF
202+  8FDF              ;-----------------------------------------------------------------------
203+  8FDF              ; Структура файловой системы
204+  8FDF              ;-----------------------------------------------------------------------
205+  8FDF
206+  8FDF              ; Структура каталога
207+  8FDF
208+  8FDF                  IF FAT16
209+  8FDF
210+  8FDF              DIR_DESCR_SIZE  = 32    ; Размер дескриптора файла в каталоге
211+  8FDF              DIR_MAX_FILES   = 24    ; Максимум файлов в каталоге
212+  8FDF              DIR_NAME_LENGTH = 8     ; Длина имени файла
213+  8FDF
214+  8FDF              ;-----------------------------------------------------------------------
215+  8FDF              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
216+  8FDF              ;-----------------------------------------------------------------------
217+  8FDF
218+  8FDF                  STRUCT FILE_DESCRIPTOR  ; 32 байта
219+  8FDF ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 8 байт  - имя файла
220+  8FDF ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
221+  8FDF ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
222+  8FDF ~            checkSum        BLOCK   1  ; ntRes          ; смещение 0Ch, 1 байт  - контрольная сумма (!!! временный костыль, в FAT32 это ntRes - используются в Windows NT !!!)
223+  8FDF ~            ctrTimeTenth    BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
224+  8FDF ~            ctrTime         BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
225+  8FDF ~            ctrDate         BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
226+  8FDF ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
227+  8FDF ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
228+  8FDF ~            wrtTime         BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
229+  8FDF ~            wrtDate         BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
230+  8FDF ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
231+  8FDF ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
232+  8FDF                  ENDS
233+  8FDF
234+  8FDF              ;-----------------------------------------------------------------------
235+  8FDF              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
236+  8FDF              ;-----------------------------------------------------------------------
237+  8FDF
238+  8FDF                  ELSE
239+  8FDF ~
240+  8FDF ~            DIR_DESCR_SIZE  = 16    ; Размер дескриптора файла в каталоге
241+  8FDF ~            DIR_MAX_FILES   = 48    ; Максимум файлов в каталоге
242+  8FDF ~            DIR_NAME_LENGTH = 6     ; Длина имени файла
243+  8FDF ~
244+  8FDF ~            ;-----------------------------------------------------------------------
245+  8FDF ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
246+  8FDF ~            ;-----------------------------------------------------------------------
247+  8FDF ~
248+  8FDF ~                STRUCT FILE_DESCRIPTOR  ; 16 байт
249+  8FDF ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 6 байт  - имя файла
250+  8FDF ~            ext             BLOCK   3                   ; смещение 06h, 3 байта - расширение имени файла
251+  8FDF ~            attrib          BLOCK   1                   ; смещение 09h, 1 байт  - атрибуты файла: 00h - обычный файл, 01h - системный файл
252+  8FDF ~            loadAddress     BLOCK   2                   ; смещение 0Ah, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый
253+  8FDF ~            size            BLOCK   2                   ; смещение 0Ch, 2 байта - размер файла в байтах - 1
254+  8FDF ~            checkSum        BLOCK   1                   ; смещение 0Eh, 1 байт  - контрольная сумма
255+  8FDF ~            firstCluster    BLOCK   1                   ; смещение 0Fh, 1 байт  - номер первого кластера в FAT
256+  8FDF ~                ENDS
257+  8FDF ~
258+  8FDF ~            ;-----------------------------------------------------------------------
259+  8FDF ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
260+  8FDF ~            ;-----------------------------------------------------------------------
261+  8FDF ~
262+  8FDF                  ENDIF
263+  8FDF
264+  8FDF              ;-----------------------------------------------------------------------
265+  8FDF              ; Всякие полезности
266+  8FDF              ;-----------------------------------------------------------------------
267+  8FDF
268+  8FDF              ; Макрос для заполнения памяти от текущего адреса до указанного
269+  8FDF                  MACRO ORG_PAD adr
270+  8FDF ~                     ; add padding + display warning
271+  8FDF ~                     IF $ > adr
272+  8FDF ~                       ; no padding
273+  8FDF ~                       ASSERT 0
274+  8FDF ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
275+  8FDF ~                     ELSE
276+  8FDF ~                       ; add padding
277+  8FDF ~                       BLOCK adr-$
278+  8FDF ~                     ENDIF
279+  8FDF ~                     ORG adr
280+  8FDF                  ENDM
281+  8FDF
282+  8FDF              ; Макросы для проверки текущего адреса
283+  8FDF                  MACRO ASSERT_EQUAL adr
284+  8FDF ~                     IF $ != adr
285+  8FDF ~                       ASSERT 0
286+  8FDF ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
287+  8FDF ~                     ENDIF
288+  8FDF                  ENDM
289+  8FDF
290+  8FDF                  MACRO ASSERT_DONT_FIT adr
291+  8FDF ~                     IF $ > adr
292+  8FDF ~                       ASSERT 0
293+  8FDF ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
294+  8FDF ~                     ENDIF
295+  8FDF                  ENDM
296+  8FDF
297+  8FDF              ;-----------------------------------------------------------------------
298+  8FDF              ; Конец
299+  8FDF              ;-----------------------------------------------------------------------
300+  8FDF
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\../include/mxos.inc
  9   8FDF
 10   8FDF                    ORG 0D000h
 11   D000
 12   D000              FIX_FREE_SPACE_BUG  =  1 ; Исправить ошибку определения свободного объема
 13   D000              SHOW_F9             =  0 ; Рисовать все кнопки F1...F9 на нижнем тулбаре (иначе F1...F8)
 14   D000
 15   D000              ; Цвета
 16   D000              COLOR_CMDLINE    =  070h        ; Цвет командной строки
 17   D000              COLOR_CMDSCREEN  =  COLOR_BIOS  ; Цвет командного экрана (когда панели спрятаны)
 18   D000              COLOR_BORDER     =  0F1h        ; Цвет рамки
 19   D000              COLOR_PANELNAME  =  0A1h        ; Цвет заголовка панели (NAME)
 20   D000              COLOR_FILE       =  0B1h        ; Цвет файлов
 21   D000              COLOR_INFOLINE   =  0B1h        ; Цвет строки информации о текущем файле
 22   D000              COLOR_CURSOR     =  0B0h        ; Цвет курсора (инверсный)
 23   D000              COLOR_DIALOG     =  007h        ; Цвет окон диалогов F1-F9
 24   D000              COLOR_DIALOG_ERR =  047h        ; Цвет окна с сообщением об ошибке
 25   D000              COLOR_INFOHEADER =  0A1h        ; Заголовок информационной панели
 26   D000              COLOR_INFONUMBER =  0E1h        ; Цифры на информационной панели
 27   D000              COLOR_INFOTEXT   =  0F1h        ; Текст на информационной панели
 28   D000              COLOR_HELP_F     =  040h        ; Цвет функциональных клавиш в строке подсказки
 29   D000              COLOR_HELP_TEXT  =  071h        ; Цвет текста в строке подсказки
 30   D000
 31   D000              ; Коодинаты элементов панелей
 32   D000
 33   D000              P_NAME_X          = 17  ; Заголовок панели "NAME"
 34   D000              P_NAME_Y          = 16
 35   D000
 36   D000                  IF FAT16
 37   D000              P_FILE_LIST_X1    = 6   ; Файловая таблица (2 колонки)
 38   D000              P_FILE_LIST_X2    = 54
 39   D000              P_FILE_LIST_Y     = 32
 40   D000                  ELSE
 41   D000 ~            P_FILE_LIST_X1    = 10  ; Файловая таблица (2 колонки)
 42   D000 ~            P_FILE_LIST_X2    = 57
 43   D000 ~            P_FILE_LIST_Y     = 32
 44   D000                  ENDIF
 45   D000
 46   D000              P_FILE_LIST_H     = 18  ; Высота файловой таблицы в строках
 47   D000              P_FILE_LIST_Y_MAX = P_FILE_LIST_H * 10 + P_FILE_LIST_Y
 48   D000
 49   D000              P_DRIVE_LETTER_X  = 9   ; Буква имени диска внизу панели
 50   D000              P_DRIVE_LETTER_Y  = 222
 51   D000              P_FILE_NAME_X     = 15  ; Имя файла внизу панели
 52   D000              P_FILE_NAME_Y     = 222
 53   D000              P_FILE_DATA_X     = 57  ; Данные о файле (адрес загрузки, размер)
 54   D000              P_FILE_DATA_Y     = 222
 55   D000
 56   D000              P_INPUT_WIDTH     = 23  ; Длина поля ввода имени файла в символах
 57   D000
 58   D000              ;---------------------------------------------------------------------------
 59   D000              ; Макросы
 60   D000              ;---------------------------------------------------------------------------
 61   D000
 62   D000              ; Когда цвет включен, макрос вставляет такой код
 63   D000                  MACRO COLOR x
 64   D000 ~                    IF ENABLE_COLOR
 65   D000 ~                        ld a, x
 66   D000 ~                        ld (IO_COLOR), a
 67   D000 ~                    ENDIF
 68   D000                  ENDM
 69   D000
 70   D000              ; Макрос для нахождения координат строки длиной W, отцентрированной горизонтально
 71   D000                  MACRO CENTER_LINE w, y
 72   D000 ~                    ld  hl, ((60h - w * 3 / 2) << 8) + y
 73   D000 ~                    ld  (bios_vars.cursorY), hl
 74   D000                  ENDM
 75   D000
 76   D000              ;---------------------------------------------------------------------------
 77   D000              ; Код
 78   D000              ;---------------------------------------------------------------------------
 79   D000
 80   D000                  INCLUDE "start.inc"     ; Продолжается в main
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\start.inc
  1+  D000              ;----------------------------------------------------------------------------
  2+  D000              ; MXOS NC.COM
  3+  D000              ; Запуск
  4+  D000              ;
  5+  D000              ; 2013-12-18 Дизассемблировано vinxru
  6+  D000              ;----------------------------------------------------------------------------
  7+  D000
  8+  D000              Start:      ; Отключаем инверсию
  9+  D000 21 00 00                 ld      hl, 0
 10+  D003 22 FA 8F                 ld      (bios_vars.inverse), hl
 11+  D006
 12+  D006                          ; Загружаем состояние. Если ZF, значит, уже запускали NC.COM.
 13+  D006                          ; Иначе сохраняем состояние.
 14+  D006 CD 24 D2                 call    loadState
 15+  D009 CA 0F D0                 jp z,   formatCalled
 16+  D00C
 17+  D00C                          ; Сохраняем состояние
 18+  D00C CD 08 D2                 call    saveState
 19+  D00F
 20+  D00F              ; ---------------------------------------------------------------------------
 21+  D00F
 22+  D00F              formatCalled:
 23+  D00F                          ; Выводим строку с кнопками
 24+  D00F                          COLOR   COLOR_HELP_F
 24+  D00F             >        IF ENABLE_COLOR
 24+  D00F 3E 40       >            ld a, COLOR_HELP_F
 24+  D011 32 F8 FF    >            ld (IO_COLOR), a
 24+  D014             >        ENDIF
 25+  D014 0E 1F                    ld      c, 1Fh  ; очистка экрана
 26+  D016 CD 09 C8                 call    bios_printChar
 27+  D019 21 FF 01                 ld      hl, 1FFh
 28+  D01C 22 FC 8F                 ld      (bios_vars.cursorY), hl
 29+  D01F 21 09 DC                 ld      hl, aF1LeftF2RighF3
 30+  D022 CD 18 C8                 call    bios_printString
 31+  D025
 32+  D025                          ; Раскрашиваем строку с кнопками
 33+  D025                          COLOR   COLOR_HELP_TEXT
 33+  D025             >        IF ENABLE_COLOR
 33+  D025 3E 71       >            ld a, COLOR_HELP_TEXT
 33+  D027 32 F8 FF    >            ld (IO_COLOR), a
 33+  D02A             >        ENDIF
 34+  D02A 21 F7 92                 ld      hl, 92F7h
 35+  D02D                  IF SHOW_F9
 36+  D02D ~                        ld      d, 9
 37+  D02D                  ELSE
 38+  D02D 16 08                    ld      d, 8
 39+  D02F                  ENDIF
 40+  D02F              loc_D049:
 41+  D02F                  IF SHOW_F9
 42+  D02F ~                        ld      b, 3
 43+  D02F                  ELSE
 44+  D02F 06 04                    ld      b, 4
 45+  D031                  ENDIF
 46+  D031 CD 90 D8                 call    inverseRect     ; hl - адрес, b - ширина, высота 9
 47+  D034 24                       inc     h
 48+  D035 24                       inc     h
 49+  D036 15                       dec     d
 50+  D037 C2 2F D0                 jp nz,  loc_D049
 51+  D03A
 52+  D03A                          ; Очищаем командную строку
 53+  D03A CD E7 D7                 call    clearCmdLine
 54+  D03D
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\start.inc
 81   D03D                  INCLUDE "main.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\main.inc
  1+  D03D              ;----------------------------------------------------------------------------
  2+  D03D              ; MXOS NC.COM
  3+  D03D              ; Основной цикл
  4+  D03D              ;
  5+  D03D              ; 2013-12-18 Дизассемблировано vinxru
  6+  D03D              ;----------------------------------------------------------------------------
  7+  D03D
  8+  D03D              mainReload: ; Перерисовываем обе панели
  9+  D03D 3A FA DD                 ld    a, (activePanel)
 10+  D040 A7                       and   a
 11+  D041 C2 4D D0                 jp nz,      mainReload_0
 12+  D044 CD C5 D8                 call  loadAndPrintA
 13+  D047 CD B6 D8                 call  loadAndPrintB
 14+  D04A C3 53 D0                 jp    mainDriveChanged
 15+  D04D CD B6 D8     mainReload_0:     call  loadAndPrintB
 16+  D050 CD C5 D8                 call  loadAndPrintA
 17+  D053
 18+  D053              mainDriveChanged:
 19+  D053                          ; Вывод накопителя в ком строку
 20+  D053                          COLOR   COLOR_CMDLINE
 20+  D053             >        IF ENABLE_COLOR
 20+  D053 3E 70       >            ld a, COLOR_CMDLINE
 20+  D055 32 F8 FF    >            ld (IO_COLOR), a
 20+  D058             >        ENDIF
 21+  D058 21 F3 01                 ld      hl, 1F3h
 22+  D05B 22 FC 8F                 ld      (bios_vars.cursorY), hl
 23+  D05E 21 FD DD                 ld      hl, panelA_drive
 24+  D061 CD 9B DA                 call    readBytePanel
 25+  D064 CD 7F DA                 call    printDrive
 26+  D067
 27+  D067                          ; Вывод информации о файле
 28+  D067 CD 40 D8                 call  printInfoLine
 29+  D06A
 30+  D06A              mainLoop:   ; Рисуем курсор выбранного файла
 31+  D06A                          COLOR   COLOR_CURSOR
 31+  D06A             >        IF ENABLE_COLOR
 31+  D06A 3E B0       >            ld a, COLOR_CURSOR
 31+  D06C 32 F8 FF    >            ld (IO_COLOR), a
 31+  D06F             >        ENDIF
 32+  D06F CD 0E D8                 call  drawCursor
 33+  D072
 34+  D072                          ; Положение курсора в ком строке
 35+  D072 2A 14 DE                 ld    hl, (nc_vars.cmdLinePos)
 36+  D075 22 FC 8F                 ld    (bios_vars.cursorY), hl
 37+  D078
 38+  D078                          ; Ждем нажатия клавиши
 39+  D078                          COLOR   COLOR_CMDLINE
 39+  D078             >        IF ENABLE_COLOR
 39+  D078 3E 70       >            ld a, COLOR_CMDLINE
 39+  D07A 32 F8 FF    >            ld (IO_COLOR), a
 39+  D07D             >        ENDIF
 40+  D07D CD 03 C8                 call  bios_getch
 41+  D080
 42+  D080                          ; Стираем курсор выбранного файла
 43+  D080 F5                       push    af
 44+  D081                          COLOR   COLOR_FILE
 44+  D081             >        IF ENABLE_COLOR
 44+  D081 3E B1       >            ld a, COLOR_FILE
 44+  D083 32 F8 FF    >            ld (IO_COLOR), a
 44+  D086             >        ENDIF
 45+  D086 CD 0E D8                 call    drawCursor
 46+  D089 F1                       pop     af
 47+  D08A
 48+  D08A                          ; Анализ нажатий клавиши
 49+  D08A 4F                       ld    c, a
 50+  D08B DA 5C D2                 jp c, mainLoop_ctrl
 51+  D08E A7                       and   a
 52+  D08F CA 5A D6                 jp z, F1
 53+  D092 3D                       dec   a
 54+  D093 CA 2B D6                 jp z, F2
 55+  D096 3D                       dec   a
 56+  D097 CA 67 D7                 jp z, F3
 57+  D09A 3D                       dec   a
 58+  D09B CA 66 D1                 jp z, F4
 59+  D09E 3D                       dec   a
 60+  D09F CA 16 D5                 jp z, F5
 61+  D0A2 3D                       dec   a
 62+  D0A3 CA AB D4                 jp z, F6
 63+  D0A6 3D                       dec   a
 64+  D0A7 CA F7 D2                 jp z, F7
 65+  D0AA 3D                       dec   a
 66+  D0AB CA B0 D5                 jp z, F8
 67+  D0AE 3D                       dec   a
 68+  D0AF CA B7 D7                 jp z, Left
 69+  D0B2 3D                       dec   a
 70+  D0B3 CA 44 D7                 jp z, Tab
 71+  D0B6 D6 04                    sub   4
 72+  D0B8 CA 76 D1                 jp z, Enter
 73+  D0BB D6 0B                    sub   0Bh
 74+  D0BD CA C9 D7                 jp z, Right
 75+  D0C0 3D                       dec   a
 76+  D0C1 CA A7 D7                 jp z, Up
 77+  D0C4 3D                       dec   a
 78+  D0C5 CA 8F D7                 jp z, Down
 79+  D0C8 3D                       dec   a
 80+  D0C9 CA 18 D1                 jp z, Esc
 81+  D0CC C6 1B                    add   a,1Bh
 82+  D0CE FE 7F                    cp    7Fh
 83+  D0D0 CA FD D0                 jp z, Bkspc
 84+  D0D3 FE 8A                    cp    8Ah
 85+  D0D5 CA F3 D3                 jp z, f9
 86+  D0D8 FE 20        mainLoop_e: cp    ' '
 87+  D0DA DA 6A D0                 jp c, mainLoop
 88+  D0DD
 89+  D0DD                          ; Вывод символов в ком строку
 90+  D0DD 2A 16 DE                 ld    hl, (nc_vars.cmdLineEnd)
 91+  D0E0 4F                       ld    c, a
 92+  D0E1 77                       ld  (hl), a
 93+  D0E2
 94+  D0E2                          ; Если ком строка переполнена, выходим
 95+  D0E2 3E 5A                    ld    a, nc_vars.cmdLineCtrl & 0FFh
 96+  D0E4 BD                       cp    l
 97+  D0E5 CA 6A D0                 jp z, mainLoop
 98+  D0E8
 99+  D0E8                          ; Увеличиваем длину
100+  D0E8 23                       inc   hl
101+  D0E9 22 16 DE                 ld    (nc_vars.cmdLineEnd), hl
102+  D0EC
103+  D0EC                          ; Выводим символ на экран
104+  D0EC                          COLOR   COLOR_CMDLINE
104+  D0EC             >        IF ENABLE_COLOR
104+  D0EC 3E 70       >            ld a, COLOR_CMDLINE
104+  D0EE 32 F8 FF    >            ld (IO_COLOR), a
104+  D0F1             >        ENDIF
105+  D0F1 CD 09 C8                 call  bios_printChar
106+  D0F4
107+  D0F4              mainLoop_savePos: ; ?
108+  D0F4 2A FC 8F                 ld    hl, (bios_vars.cursorY)
109+  D0F7 22 14 DE                 ld    (nc_vars.cmdLinePos), hl
110+  D0FA
111+  D0FA C3 6A D0                 jp    mainLoop
112+  D0FD
113+  D0FD              ; ---------------------------------------------------------------------------
114+  D0FD
115+  D0FD              Bkspc:            ; Если ком строка пустая, выходим
116+  D0FD 2A 16 DE                 ld    hl, (nc_vars.cmdLineEnd)
117+  D100 3E 1F                    ld    a, nc_vars.cmdLine & 0FFh
118+  D102 BD                       cp    l
119+  D103 CA 6A D0                 jp z, mainLoop
120+  D106
121+  D106                          ; Удаляем один символ
122+  D106 2B                       dec   hl
123+  D107 22 16 DE                 ld    (nc_vars.cmdLineEnd), hl
124+  D10A
125+  D10A                          ; Стираем символ на экране
126+  D10A                          COLOR   070h
126+  D10A             >        IF ENABLE_COLOR
126+  D10A 3E 70       >            ld a, 070h
126+  D10C 32 F8 FF    >            ld (IO_COLOR), a
126+  D10F             >        ENDIF
127+  D10F 21 B6 DC                 ld      hl, asc_DC17
128+  D112 CD 18 C8                 call    bios_printString
129+  D115
130+  D115 C3 F4 D0                 jp    mainLoop_savePos
131+  D118
132+  D118              ; ---------------------------------------------------------------------------
133+  D118
134+  D118 CD E7 D7     Esc:        call  clearCmdLine
135+  D11B C3 6A D0                 jp    mainLoop
136+  D11E
137+  D11E              ; ---------------------------------------------------------------------------
138+  D11E
139+  D11E              ctrlEnter:  ; Если файл не выбран, выход
140+  D11E CD A2 D8                 call  getSelectedFile
141+  D121 7E                       ld  a, (hl)
142+  D122 FE FF                    cp    0FFh
143+  D124 CA 6A D0                 jp z, mainLoop
144+  D127
145+  D127 CD 4D D1                 call  selFileToCmdLine
146+  D12A C3 6A D0                 jp    mainLoop
147+  D12D
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\main.inc
 82   D12D                  INCLUDE "selFileToCmdLine.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\selFileToCmdLine.inc
  1+  D12D              ;----------------------------------------------------------------------------
  2+  D12D              ; MXOS NC.COM
  3+  D12D              ; Сформировать строку пути выбраного файла
  4+  D12D              ;
  5+  D12D              ; вход:
  6+  D12D              ;   hl - адрес дескриптора файла
  7+  D12D              ;
  8+  D12D              ; 2013-12-18 Дизассемблировано vinxru
  9+  D12D              ;----------------------------------------------------------------------------
 10+  D12D
 11+  D12D              getSelFilePath:
 12+  D12D EB                   ex      de, hl
 13+  D12E
 14+  D12E                      ; Получаем текущий накопитель
 15+  D12E 21 FD DD             ld      hl, panelA_drive
 16+  D131 CD 9B DA             call    readBytePanel
 17+  D134 C6 41                add     a, 'A'
 18+  D136
 19+  D136                      ; Выводим его в ком строку
 20+  D136 2A 16 DE             ld      hl, (nc_vars.cmdLineEnd)
 21+  D139 77                   ld      (hl), a
 22+  D13A 23                   inc     hl
 23+  D13B
 24+  D13B                      ; Выводим двоеточние
 25+  D13B 36 3A                ld      (hl), ':'
 26+  D13D 23                   inc     hl
 27+  D13E
 28+  D13E                      ; Выводим имя файла
 29+  D13E EB                   ex      de, hl
 30+  D13F CD 66 DB             call    compactName
 31+  D142
 32+  D142                      ; Ограничение длины
 33+  D142 1B                   dec     de
 34+  D143 3E 5A                ld      a, nc_vars.cmdLineCtrl & 0FFh
 35+  D145 BB                   cp      e
 36+  D146 D2 4A D1             jp nc,  loc_D146
 37+  D149 5F                   ld      e, a
 38+  D14A              loc_D146:
 39+  D14A                      ; Терминатор
 40+  D14A AF                   xor     a
 41+  D14B 12                   ld      (de), a
 42+  D14C C9                   ret
 43+  D14D
 44+  D14D              ;----------------------------------------------------------------------------
 45+  D14D              ; MXOS NC.COM
 46+  D14D              ; Поместить выбранный файл в ком строку
 47+  D14D              ;
 48+  D14D              ; вход:
 49+  D14D              ;   hl - адрес дескриптора файла
 50+  D14D              ;
 51+  D14D              ; 2013-12-18 Дизассемблировано vinxru
 52+  D14D              ;----------------------------------------------------------------------------
 53+  D14D
 54+  D14D              selFileToCmdLine:
 55+  D14D CD 2D D1             call    getSelFilePath
 56+  D150
 57+  D150                      ; Вывод
 58+  D150                      COLOR   COLOR_CMDLINE
 58+  D150             >        IF ENABLE_COLOR
 58+  D150 3E 70       >            ld a, COLOR_CMDLINE
 58+  D152 32 F8 FF    >            ld (IO_COLOR), a
 58+  D155             >        ENDIF
 59+  D155 2A 16 DE             ld      hl, (nc_vars.cmdLineEnd)
 60+  D158 CD 18 C8             call    bios_printString
 61+  D15B
 62+  D15B                      ; Дописываем имя файла
 63+  D15B EB                   ex      de, hl
 64+  D15C 22 16 DE             ld      (nc_vars.cmdLineEnd), hl
 65+  D15F
 66+  D15F                      ; Сохраняем новое положение
 67+  D15F 2A FC 8F             ld      hl, (bios_vars.cursorY)
 68+  D162 22 14 DE             ld      (nc_vars.cmdLinePos), hl
 69+  D165 C9                   ret
 70+  D166
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\selFileToCmdLine.inc
 83   D166                  INCLUDE "f4.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f4.inc
  1+  D166              ;----------------------------------------------------------------------------
  2+  D166              ; MXOS NC.COM
  3+  D166              ; Клавиша F4 - запуск редактора
  4+  D166              ;
  5+  D166              ; 2013-12-18 Дизассемблировано vinxru
  6+  D166              ;----------------------------------------------------------------------------
  7+  D166
  8+  D166              F4:     ; Получение кол-ва файлов
  9+  D166 21 FF DD             ld      hl, panelA_filesCnt
 10+  D169 CD 9B DA             call    readBytePanel
 11+  D16C
 12+  D16C                      ; Если файлов нет, выходим
 13+  D16C A7                   and     a
 14+  D16D CA 6A D0             jp z,   mainLoop
 15+  D170
 16+  D170                      ; Запуск редактора
 17+  D170 11 0C DE             ld      de, aEditor   ; "A:E.COM\r"
 18+  D173 C3 BF D1             jp      Enter_5
 19+  D176
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f4.inc
 84   D176                  INCLUDE "enter.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\enter.inc
  1+  D176              ;----------------------------------------------------------------------------
  2+  D176              ; MXOS NC.COM
  3+  D176              ; Клавиша ENTER
  4+  D176              ;
  5+  D176              ; 2013-12-18 Дизассемблировано vinxru
  6+  D176              ;----------------------------------------------------------------------------
  7+  D176
  8+  D176              Enter:      ; Если ком строка не пустая
  9+  D176 2A 16 DE                 ld      hl, (nc_vars.cmdLineEnd)
 10+  D179 3E 1F                    ld      a, nc_vars.cmdLine & 0FFh
 11+  D17B BD                       cp      l
 12+  D17C C2 F0 D1                 jp nz,  EnterCmdLine
 13+  D17F
 14+  D17F                          ; Запомнить текущий диск в регистре b
 15+  D17F 1E 00                    ld      e, 0
 16+  D181 CD 42 C8                 call    bios_fileGetSetDrive
 17+  D184 47                       ld      b, a
 18+  D185
 19+  D185                          ; Подготовить имя файла A:NC.EXT
 20+  D185 21 03 DE                 ld      hl, aNcExt
 21+  D188 11 88 DE                 ld      de, nc_vars.tempFileDescr; nc_vars.tempFileDescr используется как буфер
 22+  D18B CD 5A C8                 call    bios_fileNamePrepare
 23+  D18E EB                       ex      de, hl
 24+  D18F
 25+  D18F                          ; Загрузить файл A:NC.EXT по адресу 0
 26+  D18F 21 88 DE                 ld      hl, nc_vars.tempFileDescr
 27+  D192 11 00 00                 ld      de, 0
 28+  D195 0E 01                    ld      c, 1
 29+  D197 CD 54 C8                 call    bios_fileGetSetAddr ; изменить адрес загрузки файла на de = 0
 30+  D19A CD 48 C8                 call    bios_fileLoad
 31+  D19D DA E5 D1                 jp c,   Enter_stdExec
 32+  D1A0
 33+  D1A0                          ; Переключить диск обратно
 34+  D1A0                          ;mov    a, b
 35+  D1A0                          ;mvi    e, 1
 36+  D1A0                          ;call   bios_fileGetSetDrive
 37+  D1A0
 38+  D1A0                          ; Получить имя выбранного файла
 39+  D1A0 CD A2 D8                 call    getSelectedFile
 40+  D1A3 7E                       ld      a, (hl)
 41+  D1A4 3C                       inc     a
 42+  D1A5 CA 6A D0                 jp z,   mainLoop ; Ничего не выбрано
 43+  D1A8
 44+  D1A8                          ; hl = указатель на расширение файла
 45+  D1A8 11 08 00                 ld      de, FILE_DESCRIPTOR.ext
 46+  D1AB 19                       add     hl, de
 47+  D1AC
 48+  D1AC 11 00 00                 ld      de, 0
 49+  D1AF
 50+  D1AF                          ; Сравниваем с расширеним из файла
 51+  D1AF              Enter_extLoop:
 52+  D1AF 0E 03                    ld      c, 3
 53+  D1B1 E5                       push    hl
 54+  D1B2              Enter_1:
 55+  D1B2 1A                       ld      a, (de)
 56+  D1B3 BE                       cp      (hl)
 57+  D1B4 C2 4D D2                 jp nz,  Enter_nextExt
 58+  D1B7 23                       inc     hl
 59+  D1B8 13                       inc     de
 60+  D1B9 0D                       dec     c
 61+  D1BA C2 B2 D1                 jp nz,  Enter_1
 62+  D1BD E1                       pop     hl
 63+  D1BE 13                       inc     de
 64+  D1BF
 65+  D1BF                          ; Найдено расширение
 66+  D1BF
 67+  D1BF                          ; Копирование имени выбранного файла в ком строку
 68+  D1BF              Enter_5:
 69+  D1BF 21 1F DE                 ld      hl, nc_vars.cmdLine
 70+  D1C2              Enter_4:
 71+  D1C2 1A                       ld      a, (de)
 72+  D1C3 77                       ld      (hl),a
 73+  D1C4 FE 0D                    cp      0Dh
 74+  D1C6 CA D2 D1                 jp z,   Enter_3
 75+  D1C9 3C                       inc     a
 76+  D1CA CA D2 D1                 jp z,   Enter_3
 77+  D1CD 23                       inc     hl
 78+  D1CE 13                       inc     de
 79+  D1CF C3 C2 D1                 jp      Enter_4
 80+  D1D2
 81+  D1D2              ; ---------------------------------------------------------------------------
 82+  D1D2
 83+  D1D2              Enter_3:
 84+  D1D2 36 20                    ld      (hl), ' '
 85+  D1D4 23                       inc     hl
 86+  D1D5 36 00                    ld      (hl), 0
 87+  D1D7 22 16 DE                 ld      (nc_vars.cmdLineEnd), hl
 88+  D1DA
 89+  D1DA                          ; Вывод ком строки на экран
 90+  D1DA                          COLOR   COLOR_CMDSCREEN
 90+  D1DA             >        IF ENABLE_COLOR
 90+  D1DA 3E F0       >            ld a, COLOR_CMDSCREEN
 90+  D1DC 32 F8 FF    >            ld (IO_COLOR), a
 90+  D1DF             >        ENDIF
 91+  D1DF 21 1F DE                 ld      hl, nc_vars.cmdLine
 92+  D1E2 CD 18 C8                 call    bios_printString
 93+  D1E5
 94+  D1E5              Enter_stdExec:    ; Получить выбранный файл
 95+  D1E5 CD A2 D8                 call     getSelectedFile
 96+  D1E8
 97+  D1E8                          ; Ничего не выбрано
 98+  D1E8 7E                       ld      a, (hl)
 99+  D1E9 3C                       inc     a
100+  D1EA CA 6A D0                 jp z,   mainLoop
101+  D1ED
102+  D1ED                          ; ?
103+  D1ED CD 4D D1                 call    selFileToCmdLine
104+  D1F0
105+  D1F0              EnterCmdLine:
106+  D1F0                          ; Очистка экрана
107+  D1F0                          COLOR   COLOR_CMDSCREEN
107+  D1F0             >        IF ENABLE_COLOR
107+  D1F0 3E F0       >            ld a, COLOR_CMDSCREEN
107+  D1F2 32 F8 FF    >            ld (IO_COLOR), a
107+  D1F5             >        ENDIF
108+  D1F5 0E 1F                    ld      c, 1Fh
109+  D1F7 CD 09 C8                 call    bios_printChar
110+  D1FA
111+  D1FA                          ; Помещаем в конец ком строки 0Dh
112+  D1FA 2A 16 DE                 ld      hl, (nc_vars.cmdLineEnd)
113+  D1FD 36 0D                    ld      (hl), 0Dh
114+  D1FF
115+  D1FF                          ; Сохраняем состояние
116+  D1FF CD 08 D2                 call    saveState
117+  D202
118+  D202                          ; Запускаем файл
119+  D202 21 1F DE                 ld      hl, nc_vars.cmdLine
120+  D205 C3 5D C8                 jp      bios_fileExec
121+  D208
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\enter.inc
 85   D208                  INCLUDE "saveState.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\saveState.inc
  1+  D208              ;----------------------------------------------------------------------------
  2+  D208              ; MXOS NC.COM
  3+  D208              ; Cохранение состояния в ДОЗУ
  4+  D208              ;
  5+  D208              ; 2013-12-18 Дизассемблировано vinxru
  6+  D208              ;----------------------------------------------------------------------------
  7+  D208
  8+  D208              saveState:
  9+  D208                          ; Устанавливаем побайтовый драйвер
 10+  D208 06 01                    ld      b, 1
 11+  D20A CD 6F C8                 call    bios_setRAMDDriver
 12+  D20D
 13+  D20D 11 F9 DD                 ld      de, initState   ; откуда (в ОЗУ)
 14+  D210 21 00 FF                 ld      hl, 0FF00h      ; куда (в ДОЗУ)
 15+  D213 06 0A                    ld      b,  10          ; сколько байт байт
 16+  D215
 17+  D215              saveStateLoop:
 18+  D215 1A                       ld      a, (de)
 19+  D216 4F                       ld      c, a            ; записываемый байт в c
 20+  D217 AF                       xor     a               ; 0 страница ДОЗУ
 21+  D218 CD D0 FF                 call    bios_RAMDWrite
 22+  D21B 23                       inc     hl
 23+  D21C 13                       inc     de
 24+  D21D 05                       dec     b
 25+  D21E C2 15 D2                 jp nz,  saveStateLoop
 26+  D221
 27+  D221                          ; Восстанавливаем блочный драйвер
 28+  D221                          ; b уже 0 здесь
 29+  D221 C3 6F C8                 jp      bios_setRAMDDriver
 30+  D224
 31+  D224
 32+  D224              ;----------------------------------------------------------------------------
 33+  D224              ; MXOS NC.COM
 34+  D224              ; Загрузка состояния из ДОЗУ
 35+  D224              ;
 36+  D224              ; выход:
 37+  D224              ;   флаг  z, если в ДОЗУ есть метка "отформатировано"
 38+  D224              ;   флаг nz, если в ДОЗУ нет метки "отформатировано". Дравер не восстанавливается!
 39+  D224              ;
 40+  D224              ; 2022.02.02 SpaceEngineer
 41+  D224              ;----------------------------------------------------------------------------
 42+  D224
 43+  D224              loadState:
 44+  D224                          ; Устанавливаем побайтовый драйвер
 45+  D224 06 01                    ld      b, 1
 46+  D226 CD 6F C8                 call    bios_setRAMDDriver
 47+  D229
 48+  D229                          ; Если в рам-диске по адресу 0FF00h (последний неполный сектор)
 49+  D229                          ; нет специальной метки, значит, не запускали форматирование.
 50+  D229 21 00 FF                 ld      hl, 0FF00h      ; адрес в странице
 51+  D22C AF                       xor     a               ; 0 страница
 52+  D22D CD C0 FF                 call    bios_RAMDRead
 53+  D230 79                       ld      a, c            ; считанный байт в c
 54+  D231 FE 5A                    cp      5Ah
 55+  D233 C0                       ret nz                  ; метки нет - выходим с флагом nz
 56+  D234
 57+  D234                          ; Иначе загружаем состояние
 58+  D234 11 FA DD                 ld      de, activePanel ; куда (в ОЗУ)
 59+  D237 21 01 FF                 ld      hl, 0FF01h      ; откуда (в ДОЗУ)
 60+  D23A 06 09                    ld      b,  9           ; сколько байт байт
 61+  D23C
 62+  D23C              loadStateLoop:
 63+  D23C AF                       xor     a               ; 0 страница ДОЗУ
 64+  D23D CD C0 FF                 call    bios_RAMDRead
 65+  D240 79                       ld      a, c            ; считанный байт в c
 66+  D241 12                       ld      (de), a
 67+  D242 23                       inc     hl
 68+  D243 13                       inc     de
 69+  D244 05                       dec     b
 70+  D245 C2 3C D2                 jp nz,  loadStateLoop
 71+  D248
 72+  D248                          ; Восстанавливаем блочный драйвер
 73+  D248                          ; b уже 0 здесь
 74+  D248 CD 6F C8                 call    bios_setRAMDDriver
 75+  D24B
 76+  D24B AF                       xor     a   ; для выхода с флагом z
 77+  D24C C9                       ret
 78+  D24D
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\saveState.inc
 86   D24D                  INCLUDE "enter2.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\enter2.inc
  1+  D24D              ;----------------------------------------------------------------------------
  2+  D24D              ; MXOS NC.COM
  3+  D24D              ; Клавиша ENTER (продолжение)
  4+  D24D              ;
  5+  D24D              ; 2013-12-18 Дизассемблировано vinxru
  6+  D24D              ;----------------------------------------------------------------------------
  7+  D24D
  8+  D24D              Enter_nextExt:
  9+  D24D E1                 pop   hl
 10+  D24E              Enter_2:
 11+  D24E 1A                 ld    a, (de)
 12+  D24F 13                 inc   de
 13+  D250 FE 0D              cp    0Dh
 14+  D252 CA AF D1           jp z, Enter_extLoop
 15+  D255 3C                 inc   a
 16+  D256 C2 4E D2           jp    nz, Enter_2
 17+  D259 C3 E5 D1           jp    Enter_stdExec
 18+  D25C
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\enter2.inc
 87   D25C                  INCLUDE "main2.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\main2.inc
  1+  D25C              ;----------------------------------------------------------------------------
  2+  D25C              ; MXOS NC.COM
  3+  D25C              ; Основной цикл (продолжение)
  4+  D25C              ;
  5+  D25C              ; 2013-12-18 Дизассемблировано vinxru
  6+  D25C              ;----------------------------------------------------------------------------
  7+  D25C
  8+  D25C FE 0D        mainLoop_ctrl:    cp    0Dh
  9+  D25E CA 1E D1                 jp z, ctrlEnter
 10+  D261 C3 D8 D0                 jp    mainLoop_e
 11+  D264
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\main2.inc
 88   D264                  INCLUDE "drawWindow.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawWindow.inc
  1+  D264              ;----------------------------------------------------------------------------
  2+  D264              ; MXOS NC.COM
  3+  D264              ; Рисование окошек
  4+  D264              ;
  5+  D264              ; 2013-12-18 Дизассемблировано vinxru
  6+  D264              ;----------------------------------------------------------------------------
  7+  D264
  8+  D264              drawWindowIfSel:; Получить кол-во файлов
  9+  D264 21 FF DD             ld      hl, panelA_filesCnt
 10+  D267 CD 9B DA             call    readBytePanel
 11+  D26A
 12+  D26A                      ; Если файлов нет, выходим
 13+  D26A A7                   and     a
 14+  D26B E1                   pop     hl ; Адрес возврата
 15+  D26C CA 53 D0             jp z,   mainDriveChanged
 16+  D26F E5                   push    hl
 17+  D270
 18+  D270
 19+  D270              ; ---------------------------------------------------------------------------
 20+  D270
 21+  D270              drawWindow1:
 22+  D270                      COLOR   COLOR_DIALOG
 22+  D270             >        IF ENABLE_COLOR
 22+  D270 3E 07       >            ld a, COLOR_DIALOG
 22+  D272 32 F8 FF    >            ld (IO_COLOR), a
 22+  D275             >        ENDIF
 23+  D275
 24+  D275                      ; Рисуем окно
 25+  D275 21 E1 DD             ld      hl, g_window1
 26+  D278 CD D0 DA             call    draw
 27+  D27B
 28+  D27B                      ; Рисуем прямоугольник
 29+  D27B 21 66 9F             ld      hl, 9F66h   ; x=120 y=102
 30+  D27E 06 12                ld      b, 18       ; w=144 h=9
 31+  D280 C3 90 D8             jp      inverseRect
 32+  D283
 33+  D283              ; ---------------------------------------------------------------------------
 34+  D283
 35+  D283              drawWindow2:
 36+  D283                      COLOR   COLOR_DIALOG
 36+  D283             >        IF ENABLE_COLOR
 36+  D283 3E 07       >            ld a, COLOR_DIALOG
 36+  D285 32 F8 FF    >            ld (IO_COLOR), a
 36+  D288             >        ENDIF
 37+  D288
 38+  D288                      ; Рисуем окно
 39+  D288 21 ED DD             ld      hl, g_window2
 40+  D28B CD D0 DA             call    draw
 41+  D28E
 42+  D28E                      ; Рисуем прямоугольник
 43+  D28E 21 88 9E             ld      hl, 9E88h   ; x=112 y=136
 44+  D291 06 14                ld      b, 20       ; w=160 h=9
 45+  D293 C3 90 D8             jp      inverseRect
 46+  D296
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawWindow.inc
 89   D296                  INCLUDE "printStringInv.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printStringInv.inc
  1+  D296              ;----------------------------------------------------------------------------
  2+  D296              ; MXOS NC.COM
  3+  D296              ; Вывод инверсной строки
  4+  D296              ;
  5+  D296              ; 2013-12-18 Дизассемблировано vinxru
  6+  D296              ;----------------------------------------------------------------------------
  7+  D296
  8+  D296 3E 01        printStringInv:   ld    a, 1
  9+  D298 32 FA 8F                 ld    (bios_vars.inverse),a
 10+  D29B CD 18 C8                 call  bios_printString
 11+  D29E AF                       xor   a
 12+  D29F 32 FA 8F                 ld    (bios_vars.inverse),a
 13+  D2A2 C9                       ret
 14+  D2A3
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printStringInv.inc
 90   D2A3                  INCLUDE "inputForCopyMove.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inputForCopyMove.inc
  1+  D2A3              ;----------------------------------------------------------------------------
  2+  D2A3              ; MXOS NC.COM
  3+  D2A3              ; Ввод строки в которой изначально содержится имя выбранного файла
  4+  D2A3              ;
  5+  D2A3              ; 2013-12-18 Дизассемблировано vinxru
  6+  D2A3              ;----------------------------------------------------------------------------
  7+  D2A3
  8+  D2A3              inputForCopyMove:
  9+  D2A3                          ; Положение курсора
 10+  D2A3 21 6E 3D                 ld      hl, 3D6Eh
 11+  D2A6 22 FC 8F                 ld      (bios_vars.cursorY), hl
 12+  D2A9
 13+  D2A9                          ; Строка для редактирования
 14+  D2A9 11 68 DE                 ld      de, nc_vars.input
 15+  D2AC
 16+  D2AC                          ; Отображается ли панель?
 17+  D2AC 21 FB DD                 ld      hl, panelA_info
 18+  D2AF 3A FA DD                 ld      a, (activePanel)
 19+  D2B2 A7                       and     a
 20+  D2B3 C2 B7 D2                 jp nz,      loc_D255
 21+  D2B6 23                       inc     hl
 22+  D2B7 7E           loc_D255:   ld      a, (hl)
 23+  D2B8
 24+  D2B8                          ; Если не отображается, то накопитель в стркоу не помещать
 25+  D2B8 A7                       and     a
 26+  D2B9 C2 C7 D2                 jp nz,      loc_D265
 27+  D2BC
 28+  D2BC                          ; Записываем букву накопителя
 29+  D2BC 23                       inc     hl
 30+  D2BD 23                       inc     hl
 31+  D2BE 7E                       ld      a, (hl)
 32+  D2BF C6 41                    add     a, 'A'
 33+  D2C1 12                       ld      (de),a
 34+  D2C2 13                       inc     de
 35+  D2C3
 36+  D2C3                          ; Записываем ':'
 37+  D2C3 3E 3A                    ld      a, ':'
 38+  D2C5 12                       ld      (de),a
 39+  D2C6 13                       inc     de
 40+  D2C7
 41+  D2C7              loc_D265:   ; Записать выбранный файл
 42+  D2C7 CD A2 D8                 call    getSelectedFile
 43+  D2CA CD 66 DB                 call    compactName
 44+  D2CD
 45+  D2CD                          ; Записать терминатор
 46+  D2CD 1B                       dec     de  ; compactName добавляет в конец строки ' ', 0Dh
 47+  D2CE 1B                       dec     de
 48+  D2CF AF                       xor     a
 49+  D2D0 12                       ld      (de),a
 50+  D2D1
 51+  D2D1                          ; Перейти к редакированию
 52+  D2D1 C3 A3 DB                 jp      input
 53+  D2D4
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inputForCopyMove.inc
 91   D2D4                  INCLUDE "printSelDrive.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSelDrive.inc
  1+  D2D4              ;----------------------------------------------------------------------------
  2+  D2D4              ; MXOS NC.COM
  3+  D2D4              ; Вывод текущего накопителя
  4+  D2D4              ;
  5+  D2D4              ; 2013-12-18 Дизассемблировано vinxru
  6+  D2D4              ;----------------------------------------------------------------------------
  7+  D2D4
  8+  D2D4              ; Печать буквы активного диска
  9+  D2D4
 10+  D2D4 21 FD DD     printSelDrive:    ld    hl, panelA_drive
 11+  D2D7 CD 9B DA                 call  readBytePanel
 12+  D2DA C3 7F DA                 jp    printDrive
 13+  D2DD
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSelDrive.inc
 92   D2DD                  INCLUDE "f7.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f7.inc
  1+  D2DD              ;----------------------------------------------------------------------------
  2+  D2DD              ; MXOS NC.COM
  3+  D2DD              ; Клавиша F7. Загрузка файла с ленты на накопитель
  4+  D2DD              ;
  5+  D2DD              ; 2013-12-18 Дизассемблировано vinxru
  6+  D2DD              ;----------------------------------------------------------------------------
  7+  D2DD
  8+  D2DD              ; Сохранение sp   и установка обр   ошибок.
  9+  D2DD
 10+  D2DD              prepareTapeLoad:
 11+  D2DD 21 00 00                 ld          hl, 0
 12+  D2E0 39                       add         hl, sp
 13+  D2E1 23                       inc         hl
 14+  D2E2 23                       inc         hl
 15+  D2E3 22 1B DE                 ld          (nc_vars.savedSP), hl
 16+  D2E6
 17+  D2E6 21 E6 D3                 ld          hl, tapeErrorHandler
 18+  D2E9 22 E1 8F                 ld          (bios_vars.tapeError), hl
 19+  D2EC
 20+  D2EC 3E 0F                    ld          a, 0Fh
 21+  D2EE 32 E2 FF                 ld          (IO_KEYB_C),a
 22+  D2F1 3E FE                    ld          a, 0FEh
 23+  D2F3 32 E0 FF                 ld          (IO_KEYB_A),a
 24+  D2F6 C9                       ret
 25+  D2F7
 26+  D2F7              ; ---------------------------------------------------------------------------
 27+  D2F7
 28+  D2F7              F7:         ; Рисуем окно
 29+  D2F7 CD 70 D2                 call        drawWindow1
 30+  D2FA
 31+  D2FA                          ; Выводим "LOADING FROM TAPE TO A:"
 32+  D2FA                          CENTER_LINE 23, 5Eh
 32+  D2FA 21 5E 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 5Eh
 32+  D2FD 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 33+  D300 21 6F DD                 ld          hl, aLoadingFromTapeTo
 34+  D303 CD 18 C8                 call        bios_printString
 35+  D306 CD D4 D2                 call        printSelDrive
 36+  D309
 37+  D309                          ; Сохранение sp и установка обработчика ошибок
 38+  D309 CD DD D2                 call        prepareTapeLoad
 39+  D30C
 40+  D30C              loc_D2AA:
 41+  D30C                          ; Ждем пилот и D9 D9 D9
 42+  D30C 3E FF                    ld          a, 0FFh
 43+  D30E 0E 03                    ld          c, 3
 44+  D310 C3 15 D3                 jp          loc_D2B3
 45+  D313              loc_D2B1:
 46+  D313 3E 08                    ld          a, 8
 47+  D315              loc_D2B3:
 48+  D315 CD 06 C8                 call        bios_tapeRead
 49+  D318 FE D9                    cp          0D9h
 50+  D31A C2 0C D3                 jp nz,      loc_D2AA
 51+  D31D 0D                       dec c
 52+  D31E C2 13 D3                 jp nz,      loc_D2B1
 53+  D321
 54+  D321                          ; Читаем имя
 55+  D321 21 88 DE                 ld          hl, nc_vars.tempFileDescr
 56+  D324 54                       ld          d, h
 57+  D325 5D                       ld          e, l
 58+  D326 0E 0B                    ld          c, DIR_NAME_LENGTH + 3 ; старый формат файла 9 символов, новый - DIR_NAME_LENGTH + 3 символов
 59+  D328              loc_D2C6:
 60+  D328 3E 08                    ld          a, 8
 61+  D32A CD 06 C8                 call        bios_tapeRead
 62+  D32D FE 20                    cp          ' '
 63+  D32F DA DC D3                 jp c,       tapeReadAppendName
 64+  D332 77                       ld          (hl), a
 65+  D333 23                       inc         hl
 66+  D334 0D                       dec         c
 67+  D335 C2 28 D3                 jp nz,      loc_D2C6
 68+  D338
 69+  D338              loc_D2D6:
 70+  D338 36 00                    ld         (hl), 0 ; обнуляем байт атрибута в дескрипторе файла
 71+  D33A
 72+  D33A CD 9D D5                 call        printInvFile
 73+  D33D
 74+  D33D                          ; Пропускаем пилот и читаем начальный адрес загрузки
 75+  D33D 3E FF                    ld          a, 0FFh
 76+  D33F CD D1 D3                 call        tapeReadWord2
 77+  D342 22 1D DE                 ld          (nc_vars.tapeLoadAddr), hl
 78+  D345
 79+  D345                          ; Читаем конечный адрес загрузки
 80+  D345 EB                       ex          de, hl
 81+  D346 CD CF D3                 call        tapeReadWord
 82+  D349
 83+  D349                          ; Считаем размер файла (hl = hl - de)
 84+  D349 7D                       ld          a, l
 85+  D34A 93                       sub         e
 86+  D34B 6F                       ld          l, a
 87+  D34C 7C                       ld          a, h
 88+  D34D 9A                       sbc         d
 89+  D34E 67                       ld          h, a
 90+  D34F 22 A4 DE                 ld          (nc_vars.tempFileDescr.size), hl
 91+  D352
 92+  D352                          ; Читаем данные по адресу 0000
 93+  D352 23                       inc         hl
 94+  D353 EB                       ex          de, hl
 95+  D354 21 00 00                 ld          hl, 0
 96+  D357 22 9A DE                 ld          (nc_vars.tempFileDescr.loadAddress), hl
 97+  D35A 3E 08        loc_D2F8:   ld          a, 8
 98+  D35C CD 06 C8                 call        bios_tapeRead
 99+  D35F 77                       ld          (hl), a
100+  D360 23                       inc         hl
101+  D361 1B                       dec         de
102+  D362 7A                       ld          a, d
103+  D363 B3                       or          e
104+  D364 C2 5A D3                 jp nz,      loc_D2F8
105+  D367
106+  D367                          ; Чиаем CRC
107+  D367 CD CF D3                 call        tapeReadWord
108+  D36A 22 19 DE                 ld          (nc_vars.tapeSaveCRC), hl
109+  D36D
110+  D36D                          ; Считаем CRC
111+  D36D 2A A4 DE                 ld          hl, (nc_vars.tempFileDescr.size)
112+  D370 EB                       ex          de, hl
113+  D371 21 00 00                 ld          hl, 0
114+  D374 19                       add         hl, de
115+  D375 EB                       ex          de, hl
116+  D376 21 00 00                 ld          hl, 0
117+  D379 CD 2A C8                 call        bios_calcCS
118+  D37C 2A 19 DE                 ld          hl, (nc_vars.tapeSaveCRC)
119+  D37F
120+  D37F                          ; Если расчетный CRC не равен реальному, выходим
121+  D37F 78                       ld          a, b
122+  D380 BC                       cp          h
123+  D381 C2 9F D3                 jp nz,      F7_crcError
124+  D384 79                       ld          a, c
125+  D385 BD                       cp          l
126+  D386 C2 9F D3                 jp nz,      F7_crcError
127+  D389
128+  D389                          ; Соханяем файл на текущий диск
129+  D389 CD 95 D3                 call        F7_saveFile
130+  D38C
131+  D38C                          ; Перерисовываем экран и продолжаем загрузку
132+  D38C CD C5 D8                 call        loadAndPrintA
133+  D38F CD B6 D8                 call        loadAndPrintB
134+  D392 C3 F7 D2                 jp          F7
135+  D395
136+  D395              ; ---------------------------------------------------------------------------
137+  D395
138+  D395              F7_saveFile:
139+  D395 2A 1D DE                 ld          hl, (nc_vars.tapeLoadAddr)
140+  D398 E5                       push        hl
141+  D399 21 88 DE                 ld          hl, nc_vars.tempFileDescr
142+  D39C C3 53 D5                 jp          saveFileInt
143+  D39F
144+  D39F              ; ---------------------------------------------------------------------------
145+  D39F
146+  D39F              F7_crcError:
147+  D39F CD 83 D2                 call        drawWindow2
148+  D3A2
149+  D3A2                          ; Вывод "ERROR LOADING FROM TAPE"
150+  D3A2                          COLOR       COLOR_DIALOG_ERR
150+  D3A2             >        IF ENABLE_COLOR
150+  D3A2 3E 47       >            ld a, COLOR_DIALOG_ERR
150+  D3A4 32 F8 FF    >            ld (IO_COLOR), a
150+  D3A7             >        ENDIF
151+  D3A7                          CENTER_LINE 23, 80h
151+  D3A7 21 80 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 80h
151+  D3AA 22 FC 8F    >        ld  (bios_vars.cursorY), hl
152+  D3AD 21 85 DD                 ld          hl, aErrorLoadingTa
153+  D3B0 CD 18 C8                 call        bios_printString
154+  D3B3
155+  D3B3                          ; Вывод строки из nc_vars.input
156+  D3B3                          COLOR       COLOR_DIALOG
156+  D3B3             >        IF ENABLE_COLOR
156+  D3B3 3E 07       >            ld a, COLOR_DIALOG
156+  D3B5 32 F8 FF    >            ld (IO_COLOR), a
156+  D3B8             >        ENDIF
157+  D3B8 21 90 50                 ld          hl, 5090h
158+  D3BB 22 FC 8F                 ld          (bios_vars.cursorY), hl
159+  D3BE 21 68 DE                 ld          hl, nc_vars.input
160+  D3C1 CD 96 D2                 call        printStringInv
161+  D3C4
162+  D3C4              loc_D358:   ; Ждем нажатия ESC
163+  D3C4 CD 1B C8                 call        bios_keyScan
164+  D3C7 FE 1B                    cp          1Bh
165+  D3C9 C2 C4 D3                 jp nz,      loc_D358
166+  D3CC
167+  D3CC C3 3D D0                 jp          mainReload
168+  D3CF
169+  D3CF              ;----------------------------------------------------------------------------
170+  D3CF              ; Чтение слова с ленты
171+  D3CF              ;----------------------------------------------------------------------------
172+  D3CF
173+  D3CF              tapeReadWord:
174+  D3CF 3E 08                    ld          a, 8
175+  D3D1              tapeReadWord2:
176+  D3D1 CD 06 C8                 call        bios_tapeRead
177+  D3D4 6F                       ld          l, a
178+  D3D5 3E 08                    ld          a, 8
179+  D3D7 CD 06 C8                 call        bios_tapeRead
180+  D3DA 67                       ld          h, a
181+  D3DB C9                       ret
182+  D3DC
183+  D3DC
184+  D3DC              ; ---------------------------------------------------------------------------
185+  D3DC
186+  D3DC              ; Если имя файла на ленте было короче, чем DIR_NAME_LENGTH+3, дополняем его пробелами
187+  D3DC              tapeReadAppendName:
188+  D3DC 36 20                    ld          (hl), ' '
189+  D3DE 23                       inc         hl
190+  D3DF 0D                       dec         c
191+  D3E0 C2 DC D3                 jp nz,      tapeReadAppendName
192+  D3E3 C3 38 D3                 jp          loc_D2D6
193+  D3E6
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f7.inc
 93   D3E6                  INCLUDE "tapeErrorHandler.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeErrorHandler.inc
  1+  D3E6              ;----------------------------------------------------------------------------
  2+  D3E6              ; MXOS NC.COM
  3+  D3E6              ; Вызывается при ошибке загрузки с ленты
  4+  D3E6              ;
  5+  D3E6              ; 2013-12-18 Дизассемблировано vinxru
  6+  D3E6              ;----------------------------------------------------------------------------
  7+  D3E6
  8+  D3E6              tapeErrorHandler:
  9+  D3E6                          ; Восстановление обработчика
 10+  D3E6 21 00 C8                 ld    hl, 0C800h
 11+  D3E9 22 E1 8F                 ld    (bios_vars.tapeError), hl
 12+  D3EC
 13+  D3EC                          ; Восстановление стека
 14+  D3EC 2A 1B DE                 ld    hl, (nc_vars.savedSP)
 15+  D3EF F9                       ld    sp, hl
 16+  D3F0
 17+  D3F0                          ; Перезагрузка файлов и продолжение работы
 18+  D3F0 C3 3D D0                 jp    mainReload
 19+  D3F3
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeErrorHandler.inc
 94   D3F3                  INCLUDE "f9.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f9.inc
  1+  D3F3              ;----------------------------------------------------------------------------
  2+  D3F3              ; MXOS NC.COM
  3+  D3F3              ; Клавиша F9 - Сохранение файла на магнитофон
  4+  D3F3              ;
  5+  D3F3              ; 2013-12-18 Дизассемблировано vinxru
  6+  D3F3              ;----------------------------------------------------------------------------
  7+  D3F3
  8+  D3F3              f9:         ; Рисуем окно
  9+  D3F3 CD 64 D2                 call    drawWindowIfSel
 10+  D3F6
 11+  D3F6                          ; Выводим "SAVING FROM A: TO TAPE"
 12+  D3F6                          CENTER_LINE 20, 5Eh
 12+  D3F6 21 5E 42    >        ld  hl, ((60h - 20 * 3 / 2) << 8) + 5Eh
 12+  D3F9 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  D3FC 21 41 DD                 ld      hl, aSaveFromToTape
 14+  D3FF CD 18 C8                 call    bios_printString
 15+  D402 CD D4 D2                 call    printSelDrive
 16+  D405
 17+  D405                          ; ?
 18+  D405 CD 99 D5                 call    printInvSelFile
 19+  D408
 20+  D408                          ; Ждем нажатия Enter или ESC.
 21+  D408 CD 1B C8     loc_D39C:   call    bios_keyScan
 22+  D40B FE 1B                    cp      1Bh
 23+  D40D CA 3D D0                 jp z,   mainReload
 24+  D410 FE 0D                    cp      0Dh
 25+  D412 C2 08 D4                 jp nz,  loc_D39C
 26+  D415
 27+  D415                          ; Сохранение sp   и установка обр   ошибок.
 28+  D415 CD DD D2                 call    prepareTapeLoad
 29+  D418
 30+  D418 CD 64 D2                 call    drawWindowIfSel
 31+  D41B
 32+  D41B                          ; Выводим "SAVING TO TAPE"
 33+  D41B                          CENTER_LINE 14, 5Eh
 33+  D41B 21 5E 4B    >        ld  hl, ((60h - 14 * 3 / 2) << 8) + 5Eh
 33+  D41E 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 34+  D421 21 60 DD                 ld      hl, aSavingToTape
 35+  D424 CD 18 C8                 call    bios_printString
 36+  D427
 37+  D427                          ; Загрузка файла на адрес 0
 38+  D427 CD 36 D5                 call    loadSelFileAt0  ; на выходе de - оригинальный адрес загрузки
 39+  D42A
 40+  D42A                          ; Получение адреса загрузки и размера файла
 41+  D42A D5                       push    de  ; оригинальный адрес загрузки
 42+  D42B E5                       push    hl  ; начало дескриптора
 43+  D42C 11 1C 00                 ld      de, FILE_DESCRIPTOR.size
 44+  D42F 19                       add     hl, de
 45+  D430 5E                       ld      e, (hl)
 46+  D431 23                       inc     hl
 47+  D432 56                       ld      d, (hl) ; de = размер-1
 48+  D433 E1                       pop     hl  ; начало дескриптора
 49+  D434 D5                       push    de  ; размер
 50+  D435 E5                       push    hl  ; начало дескриптора
 51+  D436 21 00 00                 ld      hl, 0   ; файл загружен на адрес 0
 52+  D439 19                       add     hl, de  ; hl = размер-1 + 0
 53+  D43A EB                       ex      de, hl  ; de = размер-1 + 0
 54+  D43B 21 00 00                 ld      hl, 0
 55+  D43E
 56+  D43E                          ; Расчет контрольной суммы от hl до de
 57+  D43E CD 2A C8                 call    bios_calcCS ; bc = crc
 58+  D441 60                       ld      h, b
 59+  D442 69                       ld      l, c
 60+  D443 22 19 DE                 ld      (nc_vars.tapeSaveCRC), hl
 61+  D446
 62+  D446                          ; Пилот-тон
 63+  D446 CD 8E D4                 call    tapeWritePilot  ; 200h нулей, затем E6h
 64+  D449
 65+  D449                          ; Начало файла
 66+  D449 3E D9                    ld      a, 0D9h
 67+  D44B CD 0C C8                 call    bios_tapeWrite  ; три раза 0D9h
 68+  D44E CD 0C C8                 call    bios_tapeWrite
 69+  D451 CD 0C C8                 call    bios_tapeWrite
 70+  D454
 71+  D454                          ; имя файла
 72+  D454 E1                       pop     hl ; начало дескриптра
 73+  D455 01 0A 00                 ld      bc, DIR_NAME_LENGTH+2 ; длина (запишется +1); старый формат - 9 символов, новый - DIR_NAME_LENGTH+3
 74+  D458 CD 7E D4                 call    tapeWriteBlock
 75+  D45B
 76+  D45B                          ; Пилот-тон
 77+  D45B CD 8E D4                 call    tapeWritePilot  ; 200h нулей, затем E6h
 78+  D45E
 79+  D45E C1                       pop     bc ; размер
 80+  D45F E1                       pop     hl ; оригинальный адрес загрузки
 81+  D460 CD 76 D4                 call    tapeWriteWord
 82+  D463
 83+  D463 09                       add     hl, bc ; конечный адрес загрузки
 84+  D464 CD 76 D4                 call    tapeWriteWord
 85+  D467
 86+  D467                          ; Запись файла
 87+  D467 21 00 00                 ld      hl, 0
 88+  D46A CD 7E D4                 call    tapeWriteBlock    ; hl = адрес, bc = размер-1
 89+  D46D
 90+  D46D                          ; Запись контрольной суммы
 91+  D46D 2A 19 DE                 ld      hl, (nc_vars.tapeSaveCRC)
 92+  D470 CD 76 D4                 call    tapeWriteWord
 93+  D473
 94+  D473 C3 3D D0                 jp      mainReload
 95+  D476
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f9.inc
 95   D476                  INCLUDE "tapeWrite.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeWrite.inc
  1+  D476              ;----------------------------------------------------------------------------
  2+  D476              ; MXOS NC.COM
  3+  D476              ; Запись слова на ленту
  4+  D476              ;
  5+  D476              ; 2013-12-18 Дизассемблировано vinxru
  6+  D476              ;----------------------------------------------------------------------------
  7+  D476
  8+  D476              tapeWriteWord:
  9+  D476 7D                       ld    a, l
 10+  D477 CD 0C C8                 call  bios_tapeWrite
 11+  D47A 7C                       ld    a, h
 12+  D47B C3 0C C8                 jp    bios_tapeWrite
 13+  D47E
 14+  D47E              ;----------------------------------------------------------------------------
 15+  D47E              ; Запись блока данных по адресу hl длиной bc+1 на ленту
 16+  D47E              ;----------------------------------------------------------------------------
 17+  D47E
 18+  D47E              tapeWriteBlock:
 19+  D47E 03                       inc    bc
 20+  D47F CD A3 D4     loc_D410:   call   checkBreak
 21+  D482 7E                       ld     a, (hl)
 22+  D483 CD 0C C8                 call   bios_tapeWrite
 23+  D486 23                       inc    hl
 24+  D487 0B                       dec    bc
 25+  D488 78                       ld     a, b
 26+  D489 B1                       or     c
 27+  D48A C2 7F D4                 jp nz, loc_D410
 28+  D48D C9                       ret
 29+  D48E
 30+  D48E              ;----------------------------------------------------------------------------
 31+  D48E              ; Запись пилот тона на ленту
 32+  D48E              ; 200h нулей, затем E6h
 33+  D48E              ;----------------------------------------------------------------------------
 34+  D48E
 35+  D48E              tapeWritePilot:
 36+  D48E 01 00 02                 ld     bc, 200h
 37+  D491 CD A3 D4     loc_D422:   call   checkBreak
 38+  D494 AF                       xor    a
 39+  D495 CD 0C C8                 call   bios_tapeWrite
 40+  D498 0B                       dec    bc
 41+  D499 78                       ld     a, b
 42+  D49A B1                       or     c
 43+  D49B C2 91 D4                 jp nz, loc_D422
 44+  D49E
 45+  D49E 3E E6                    ld    a, 0E6h
 46+  D4A0 C3 0C C8                 jp    bios_tapeWrite
 47+  D4A3
 48+  D4A3              ; ---------------------------------------------------------------------------
 49+  D4A3
 50+  D4A3 3A E1 FF     checkBreak: ld     a, (IO_KEYB_B)
 51+  D4A6 A7                       and    a
 52+  D4A7 F2 E6 D3                 jp p,  tapeErrorHandler
 53+  D4AA C9                       ret
 54+  D4AB
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tapeWrite.inc
 96   D4AB                  INCLUDE "f6.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f6.inc
  1+  D4AB              ;----------------------------------------------------------------------------
  2+  D4AB              ; MXOS NC.COM
  3+  D4AB              ; Клавиша F6 - переименование
  4+  D4AB              ;
  5+  D4AB              ; 2013-12-18 Дизассемблировано vinxru
  6+  D4AB              ;----------------------------------------------------------------------------
  7+  D4AB
  8+  D4AB              F6:         ; Рисуем окно
  9+  D4AB CD 64 D2                 call        drawWindowIfSel
 10+  D4AE
 11+  D4AE                          ; Выводим "REMOVE FROM A: TO"
 12+  D4AE                          CENTER_LINE 23, 5Eh
 12+  D4AE 21 5E 3E    >        ld  hl, ((60h - 23 * 3 / 2) << 8) + 5Eh
 12+  D4B1 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  D4B4 21 E2 DC                 ld          hl, aRemoveFromTo
 14+  D4B7 CD 18 C8                 call        bios_printString
 15+  D4BA CD D4 D2                 call        printSelDrive
 16+  D4BD
 17+  D4BD CD A3 D2                 call        inputForCopyMove
 18+  D4C0 FE 1B                    cp          1Bh
 19+  D4C2 CA 3D D0                 jp z,       mainReload
 20+  D4C5
 21+  D4C5 21 68 DE                 ld          hl, nc_vars.input
 22+  D4C8 11 88 DE                 ld          de, nc_vars.tempFileDescr
 23+  D4CB CD 5A C8                 call        bios_fileNamePrepare
 24+  D4CE
 25+  D4CE 1E 02                    ld          e, 2
 26+  D4D0 CD 42 C8                 call        bios_fileGetSetDrive
 27+  D4D3 4F                       ld          c, a
 28+  D4D4 21 FD DD                 ld          hl, panelA_drive
 29+  D4D7 CD 9B DA                 call        readBytePanel
 30+  D4DA B9                       cp          c
 31+  D4DB C2 EA D4                 jp nz,      loc_D47B
 32+  D4DE CD A2 D8                 call        getSelectedFile
 33+  D4E1 11 88 DE                 ld          de, nc_vars.tempFileDescr
 34+  D4E4 CD 4E C8                 call        bios_fileRename
 35+  D4E7 C3 3D D0                 jp          mainReload
 36+  D4EA              ; ---------------------------------------------------------------------------
 37+  D4EA
 38+  D4EA 1E 01        loc_D47B:   ld          e, 1
 39+  D4EC CD 42 C8                 call        bios_fileGetSetDrive
 40+  D4EF CD A2 D8                 call        getSelectedFile
 41+  D4F2 11 88 DE                 ld          de, nc_vars.tempFileDescr
 42+  D4F5
 43+  D4F5                          ; копируем имя файла
 44+  D4F5 0E 0B                    ld          c, DIR_NAME_LENGTH + 3
 45+  D4F7              loc_D488:
 46+  D4F7 7E                       ld          a, (hl)
 47+  D4F8 12                       ld          (de),a
 48+  D4F9 23                       inc         hl
 49+  D4FA 13                       inc         de
 50+  D4FB 0D                       dec         c
 51+  D4FC C2 F7 D4                 jp nz,      loc_D488
 52+  D4FF
 53+  D4FF CD 47 D5                 call        copyFileInt
 54+  D502 21 FD DD                 ld          hl, panelA_drive
 55+  D505 CD 9B DA                 call        readBytePanel
 56+  D508 1E 01                    ld          e, 1
 57+  D50A CD 42 C8                 call        bios_fileGetSetDrive
 58+  D50D 21 88 DE                 ld          hl, nc_vars.tempFileDescr
 59+  D510 CD 4B C8                 call        bios_fileDelete
 60+  D513 C3 3D D0                 jp          mainReload
 61+  D516
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f6.inc
 97   D516                  INCLUDE "f5.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f5.inc
  1+  D516              ;----------------------------------------------------------------------------
  2+  D516              ; MXOS NC.COM
  3+  D516              ; Клавиша F5 - копирование
  4+  D516              ;
  5+  D516              ; 2013-12-18 Дизассемблировано vinxru
  6+  D516              ;----------------------------------------------------------------------------
  7+  D516
  8+  D516              F5:     ; Рисуем окно
  9+  D516 CD 64 D2             call    drawWindowIfSel
 10+  D519
 11+  D519                      ; ‚ыводм "COPYING FROM A: TO"
 12+  D519                      ; центр экрана это x = 60h
 13+  D519                      ; половина ширина строки w = 15*3/2 = 22
 14+  D519                      ; координата строки x = 60h-22 = 4Ah
 15+  D519 21 5E 4A             ld      hl, 4A5Eh
 16+  D51C 22 FC 8F             ld      (bios_vars.cursorY), hl
 17+  D51F 21 BA DC             ld      hl, aCopyFromTo
 18+  D522 CD 18 C8             call    bios_printString
 19+  D525 CD D4 D2             call    printSelDrive
 20+  D528
 21+  D528 CD A3 D2             call    inputForCopyMove
 22+  D52B FE 1B                cp      1Bh
 23+  D52D CA 3D D0             jp z,   mainReload
 24+  D530
 25+  D530 CD 47 D5             call    copyFileInt
 26+  D533 C3 3D D0             jp      mainReload
 27+  D536
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f5.inc
 98   D536                  INCLUDE "loadSelFileAt0.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadSelFileAt0.inc
  1+  D536              ;----------------------------------------------------------------------------
  2+  D536              ; MXOS NC.COM
  3+  D536              ; Загрузить выбранный файл по адресу 0
  4+  D536              ;
  5+  D536              ; выход:
  6+  D536              ;   de = оригинальный адрес загруки
  7+  D536              ;
  8+  D536              ; 2013-12-18 Дизассемблировано vinxru
  9+  D536              ;----------------------------------------------------------------------------
 10+  D536
 11+  D536              loadSelFileAt0:
 12+  D536 CD A2 D8                 call  getSelectedFile
 13+  D539
 14+  D539                          ; Получаем адрес загрузки файла
 15+  D539 0E 02                    ld    c, 2
 16+  D53B CD 54 C8                 call  bios_fileGetSetAddr
 17+  D53E D5                       push  de
 18+  D53F
 19+  D53F                          ; Загружаем файл в начало памяти
 20+  D53F 11 00 00                 ld    de, 0
 21+  D542 CD 66 C8                 call  bios_fileLoad2
 22+  D545
 23+  D545 D1                       pop   de
 24+  D546 C9                       ret
 25+  D547
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadSelFileAt0.inc
 99   D547                  INCLUDE "copyFileInt.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\copyFileInt.inc
  1+  D547              ;----------------------------------------------------------------------------
  2+  D547              ; MXOS NC.COM
  3+  D547              ; Общая функция для копирования и переноса файла
  4+  D547              ;
  5+  D547              ; 2013-12-18 Дизассемблировано vinxru
  6+  D547              ;----------------------------------------------------------------------------
  7+  D547
  8+  D547              copyFileInt:
  9+  D547                          ; Загрузка выбранного файла в память
 10+  D547 CD 36 D5                 call  loadSelFileAt0
 11+  D54A D5                       push  de    ; Тут реальный адрес
 12+  D54B
 13+  D54B                          ; Подготавливаем имя
 14+  D54B EB                       ex    de, hl
 15+  D54C 21 68 DE                 ld    hl, nc_vars.input
 16+  D54F CD 5A C8                 call  bios_fileNamePrepare
 17+  D552 EB                       ex    de, hl
 18+  D553
 19+  D553              saveFileInt:
 20+  D553                          ; hl = адрес дескриптора файла
 21+  D553 E5                       push  hl
 22+  D554
 23+  D554                          ; Устанавливаем адрес сохраняемого файла
 24+  D554 11 12 00                 ld    de, FILE_DESCRIPTOR.loadAddress   ; смещение поля адреса относительно начала дескриптора
 25+  D557 19                       add   hl, de
 26+  D558 11 00 00                 ld    de, 0     ; записываем 0 в поле loadAddress дескриптора
 27+  D55B 73                       ld    (hl), e
 28+  D55C 23                       inc   hl
 29+  D55D 72                       ld    (hl), d
 30+  D55E
 31+  D55E                          ; Сохраняем файл
 32+  D55E E1                       pop   hl
 33+  D55F CD 45 C8                 call  bios_fileCreate
 34+  D562
 35+  D562                          ; Изменяем адрес загрузки файла
 36+  D562 D1                       pop   de
 37+  D563 0E 01                    ld    c, 1
 38+  D565 CD 54 C8                 call  bios_fileGetSetAddr
 39+  D568
 40+  D568                          ; Выходим, если нет ошибки
 41+  D568 D0                       ret nc
 42+  D569
 43+  D569                          ; Рисуем окно
 44+  D569 CD 83 D2                 call  drawWindow2
 45+  D56C
 46+  D56C                          ; Вывод "CAN'T CREATE FILE"
 47+  D56C                          COLOR   COLOR_DIALOG_ERR
 47+  D56C             >        IF ENABLE_COLOR
 47+  D56C 3E 47       >            ld a, COLOR_DIALOG_ERR
 47+  D56E 32 F8 FF    >            ld (IO_COLOR), a
 47+  D571             >        ENDIF
 48+  D571                          CENTER_LINE 18, 80h
 48+  D571 21 80 45    >        ld  hl, ((60h - 18 * 3 / 2) << 8) + 80h
 48+  D574 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 49+  D577 21 CF DC                 ld    hl, aCantCreateFile
 50+  D57A CD 18 C8                 call  bios_printString
 51+  D57D
 52+  D57D                          ; Вывод имени
 53+  D57D                          COLOR COLOR_DIALOG
 53+  D57D             >        IF ENABLE_COLOR
 53+  D57D 3E 07       >            ld a, COLOR_DIALOG
 53+  D57F 32 F8 FF    >            ld (IO_COLOR), a
 53+  D582             >        ENDIF
 54+  D582 21 90 50                 ld    hl, 5090h
 55+  D585 22 FC 8F                 ld    (bios_vars.cursorY), hl
 56+  D588 21 68 DE                 ld    hl, nc_vars.input
 57+  D58B CD 96 D2                 call  printStringInv
 58+  D58E
 59+  D58E              anyKey:           ; Ждем нажатия любой клавиши
 60+  D58E CD 1B C8                 call  bios_keyScan
 61+  D591 3C                       inc   a
 62+  D592 CA 8E D5                 jp z, anyKey
 63+  D595
 64+  D595                          ; Выход
 65+  D595 E1                       pop   hl
 66+  D596 C3 3D D0                 jp    mainReload
 67+  D599
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\copyFileInt.inc
100   D599                  INCLUDE "printInvSelFile.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInvSelFile.inc
  1+  D599              ;----------------------------------------------------------------------------
  2+  D599              ; MXOS NC.COM
  3+  D599              ; Инверсный вывод имени выбранного файла
  4+  D599              ;
  5+  D599              ; 2013-12-18 Дизассемблировано vinxru
  6+  D599              ;----------------------------------------------------------------------------
  7+  D599
  8+  D599              printInvSelFile:
  9+  D599 CD A2 D8                 call  getSelectedFile
 10+  D59C EB                       ex    de, hl
 11+  D59D 21 6E 50     printInvFile:     ld    hl, 506Eh
 12+  D5A0 22 FC 8F                 ld    (bios_vars.cursorY), hl
 13+  D5A3 EB                       ex    de, hl
 14+  D5A4 11 68 DE                 ld    de, nc_vars.input
 15+  D5A7 CD 66 DB                 call  compactName
 16+  D5AA 21 68 DE                 ld    hl, nc_vars.input
 17+  D5AD C3 96 D2                 jp    printStringInv
 18+  D5B0
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInvSelFile.inc
101   D5B0                  INCLUDE "f8.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f8.inc
  1+  D5B0              ;----------------------------------------------------------------------------
  2+  D5B0              ; MXOS NC.COM
  3+  D5B0              ; Клавиша F8 - удаление файла
  4+  D5B0              ;
  5+  D5B0              ; 2013-12-18 Дизассемблировано vinxru
  6+  D5B0              ;----------------------------------------------------------------------------
  7+  D5B0
  8+  D5B0              F8:         ; Рисуем окно
  9+  D5B0 CD 64 D2                 call    drawWindowIfSel
 10+  D5B3
 11+  D5B3                          ; Выводим "DELETE FROM A:"
 12+  D5B3                          CENTER_LINE 14, 5Eh
 12+  D5B3 21 5E 4B    >        ld  hl, ((60h - 14 * 3 / 2) << 8) + 5Eh
 12+  D5B6 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 13+  D5B9 21 A9 DC                 ld          hl, aDeleteFrom
 14+  D5BC CD 18 C8                 call        bios_printString
 15+  D5BF CD D4 D2                 call        printSelDrive
 16+  D5C2
 17+  D5C2 CD 99 D5                 call        printInvSelFile
 18+  D5C5
 19+  D5C5              loc_D54C:   ; Ждем нажатия Enter или ESC
 20+  D5C5 CD 1B C8                 call        bios_keyScan
 21+  D5C8 FE 1B                    cp          1Bh
 22+  D5CA CA 3D D0                 jp z,       mainReload
 23+  D5CD FE 0D                    cp          0Dh
 24+  D5CF C2 C5 D5                 jp nz,      loc_D54C
 25+  D5D2
 26+  D5D2                          ; Если файл только для чтения
 27+  D5D2 CD A2 D8                 call        getSelectedFile
 28+  D5D5 11 0B 00                 ld          de, FILE_DESCRIPTOR.attrib
 29+  D5D8 19                       add         hl, de
 30+  D5D9 7E                       ld          a, (hl)
 31+  D5DA E6 01                    and         1
 32+  D5DC CA 18 D6                 jp z,       loc_D595
 33+  D5DF
 34+  D5DF CD 83 D2                 call        drawWindow2
 35+  D5E2
 36+  D5E2                          ; Выводим текст "FILE IS READ-ONLY"
 37+  D5E2                          COLOR       COLOR_DIALOG_ERR
 37+  D5E2             >        IF ENABLE_COLOR
 37+  D5E2 3E 47       >            ld a, COLOR_DIALOG_ERR
 37+  D5E4 32 F8 FF    >            ld (IO_COLOR), a
 37+  D5E7             >        ENDIF
 38+  D5E7                          CENTER_LINE 18, 80h
 38+  D5E7 21 80 45    >        ld  hl, ((60h - 18 * 3 / 2) << 8) + 80h
 38+  D5EA 22 FC 8F    >        ld  (bios_vars.cursorY), hl
 39+  D5ED 21 6C DC                 ld          hl, aFileIsReanOnly
 40+  D5F0 CD 18 C8                 call        bios_printString
 41+  D5F3
 42+  D5F3                          ; Выводим nc_vars.input
 43+  D5F3                          COLOR       COLOR_DIALOG
 43+  D5F3             >        IF ENABLE_COLOR
 43+  D5F3 3E 07       >            ld a, COLOR_DIALOG
 43+  D5F5 32 F8 FF    >            ld (IO_COLOR), a
 43+  D5F8             >        ENDIF
 44+  D5F8 21 90 50                 ld          hl, 5090h
 45+  D5FB 22 FC 8F                 ld          (bios_vars.cursorY), hl
 46+  D5FE 21 68 DE                 ld          hl, nc_vars.input
 47+  D601 CD 96 D2                 call        printStringInv
 48+  D604
 49+  D604              loc_D581:   ; CODE XREF: drawWindowIfSel+379j
 50+  D604 CD 1B C8                 call        bios_keyScan
 51+  D607 3C                       inc         a
 52+  D608 C2 04 D6                 jp nz,      loc_D581
 53+  D60B
 54+  D60B              loc_D588:   ; CODE XREF: drawWindowIfSel+386j
 55+  D60B CD 1B C8                 call        bios_keyScan
 56+  D60E FE 1B                    cp          1Bh
 57+  D610 CA 3D D0                 jp z,       mainReload
 58+  D613 FE 0D                    cp          0Dh
 59+  D615 C2 0B D6                 jp nz,      loc_D588
 60+  D618
 61+  D618              loc_D595:   ; Удаляем текущий файл
 62+  D618 CD A2 D8                 call        getSelectedFile
 63+  D61B CD 4B C8                 call        bios_fileDelete
 64+  D61E
 65+  D61E                          ; Уменьшаем счетчик файлов
 66+  D61E 21 FF DD                 ld          hl, panelA_filesCnt
 67+  D621 CD 9B DA                 call        readBytePanel
 68+  D624 3D                       dec         a
 69+  D625 CD 8A DA                 call        writeBytePanel
 70+  D628
 71+  D628 C3 3D D0                 jp          mainReload
 72+  D62B
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f8.inc
102   D62B                  INCLUDE "f2.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f2.inc
  1+  D62B              ;----------------------------------------------------------------------------
  2+  D62B              ; MXOS NC.COM
  3+  D62B              ; Клавиши F1, F2. Выбор накопителя для панели
  4+  D62B              ;
  5+  D62B              ; 2013-12-18 Дизассемблировано vinxru
  6+  D62B              ;----------------------------------------------------------------------------
  7+  D62B
  8+  D62B              F2:         ; Временно устанавливаем activePanel=1
  9+  D62B 3A FA DD                 ld    a, (activePanel)
 10+  D62E F5                       push  af
 11+  D62F 3E 01                    ld    a, 1
 12+  D631 32 FA DD                 ld    (activePanel),a
 13+  D634
 14+  D634                          ; Диалог
 15+  D634 CD 8C D6                 call  chooseDrive
 16+  D637
 17+  D637                          ; Если выбрали устройство, то сохраняем его.
 18+  D637 FE FF                    cp    0FFh
 19+  D639 CA 46 D6                 jp z, loc_D5C3
 20+  D63C 32 FE DD                 ld    (panelB_drive),a
 21+  D63F
 22+  D63F                          ; А так же делаем панель видимой и перемещаем курсор в начало
 23+  D63F AF                       xor   a
 24+  D640 32 FC DD                 ld    (panelB_info),a
 25+  D643 32 02 DE                 ld    (panelB_curFile),a
 26+  D646
 27+  D646              loc_D5C3:   ; Восстанавливаем activePanel
 28+  D646 F1                       pop   af
 29+  D647 32 FA DD                 ld    (activePanel),a
 30+  D64A
 31+  D64A                          ; Перезагружаем и перерисовываем вторую панель
 32+  D64A CD B6 D8                 call  loadAndPrintB
 33+  D64D
 34+  D64D                          ; Перезагружаем и перерисовываем первую панель, только если она отображается
 35+  D64D 3A FB DD                 ld    a, (panelA_info)
 36+  D650 A7                       and   a
 37+  D651 CA 86 D6                 jp z, loc_D603
 38+  D654 CD C5 D8                 call  loadAndPrintA
 39+  D657
 40+  D657                          ; Сохраняем состояние и выходим
 41+  D657 C3 86 D6                 jp    loc_D603
 42+  D65A
 43+  D65A              ; ---------------------------------------------------------------------------
 44+  D65A
 45+  D65A              F1:         ; Временно устанавливаем activePanel=02
 46+  D65A 3A FA DD                 ld    a, (activePanel)
 47+  D65D F5                       push  af
 48+  D65E 3E 00                    ld    a, 0
 49+  D660 32 FA DD                 ld    (activePanel),a
 50+  D663
 51+  D663                          ; Диалог
 52+  D663 CD 8C D6                 call  chooseDrive
 53+  D666
 54+  D666                          ; Если выбрали устройство, то сохраняем его.
 55+  D666 FE FF                    cp    0FFh
 56+  D668 CA 75 D6                 jp z, loc_D5F2
 57+  D66B 32 FD DD                 ld    (panelA_drive),a
 58+  D66E
 59+  D66E                          ; А так же делаем панель видимой и перемещаем курсор в начало
 60+  D66E AF                       xor   a
 61+  D66F 32 FB DD                 ld    (panelA_info),a
 62+  D672 32 01 DE                 ld    (panelA_curFile),a
 63+  D675
 64+  D675              loc_D5F2:   ; Восстанавливаем activePanel
 65+  D675 F1                       pop   af
 66+  D676 32 FA DD                 ld    (activePanel),a
 67+  D679
 68+  D679                          ; Перезагружаем и перерисовываем первую панель
 69+  D679 CD C5 D8                 call  loadAndPrintA
 70+  D67C
 71+  D67C                          ; Перезагружаем и перерисовываем вторую панель, только если она отображается
 72+  D67C 3A FC DD                 ld    a, (panelB_info)
 73+  D67F A7                       and   a
 74+  D680 CA 86 D6                 jp z, loc_D603
 75+  D683 CD B6 D8                 call  loadAndPrintB
 76+  D686
 77+  D686              loc_D603:   ; Сохраняем состояние и выходим
 78+  D686 CD 08 D2                 call  saveState
 79+  D689 C3 53 D0                 jp    mainDriveChanged
 80+  D68C
 81+  D68C              ; ---------------------------------------------------------------------------
 82+  D68C
 83+  D68C              chooseDrive:
 84+  D68C                      COLOR   COLOR_DIALOG
 84+  D68C             >        IF ENABLE_COLOR
 84+  D68C 3E 07       >            ld a, COLOR_DIALOG
 84+  D68E 32 F8 FF    >            ld (IO_COLOR), a
 84+  D691             >        ENDIF
 85+  D691
 86+  D691 21 D5 DD                 ld    hl, g_chooseDrive
 87+  D694 CD D0 DA                 call  draw
 88+  D697
 89+  D697                          ; Выводим текст "CHOOSE DRIVE:"
 90+  D697 21 63 1E                 ld    hl, 1E63h
 91+  D69A CD BD DA                 call  setCursorPosPanel
 92+  D69D 21 9B DC                 ld    hl, aChooseDrive
 93+  D6A0 CD 18 C8                 call  bios_printString
 94+  D6A3
 95+  D6A3                          ; Выводим текст "A   B   C   D"
 96+  D6A3 21 74 1C                 ld    hl, 1C74h
 97+  D6A6 CD BD DA                 call  setCursorPosPanel
 98+  D6A9 21 7F DC                 ld    hl, aABCD
 99+  D6AC CD 18 C8                 call  bios_printString
100+  D6AF
101+  D6AF                          ; Выводим текст "E   F   G   H"
102+  D6AF 21 7F 1C                 ld    hl, 1C7Fh
103+  D6B2 CD BD DA                 call  setCursorPosPanel
104+  D6B5 21 8D DC                 ld    hl, aEFGH
105+  D6B8 CD 18 C8                 call  bios_printString
106+  D6BB
107+  D6BB                          ; Меняем вид курсора
108+  D6BB 3A E9 8F                 ld    a, (bios_vars.cursorCfg)
109+  D6BE F5                       push  af
110+  D6BF AF                       xor   a
111+  D6C0 32 E9 8F                 ld    (bios_vars.cursorCfg), a
112+  D6C3
113+  D6C3                          ; Сохраняем текущее устройство
114+  D6C3 21 FD DD                 ld    hl, panelA_drive
115+  D6C6 CD 9B DA                 call  readBytePanel
116+  D6C9 32 18 DE                 ld    (nc_vars.chooseDrive), a
117+  D6CC
118+  D6CC              loc_D644:   ; Рисуем курсор
119+  D6CC CD 24 D7                 call  chooseDrive_draw
120+  D6CF
121+  D6CF                          ; Ждем нажатия клавиши
122+  D6CF CD 03 C8                 call  bios_getch
123+  D6D2
124+  D6D2                          ; Стираем курсор
125+  D6D2 F5                       push  af
126+  D6D3 CD 24 D7                 call  chooseDrive_draw
127+  D6D6 F1                       pop   af
128+  D6D7
129+  D6D7 0E 01                    ld    c, 1
130+  D6D9 FE 18                    cp    18h
131+  D6DB CA 18 D7                 jp z, loc_D690
132+  D6DE 0E 07                    ld    c, 7
133+  D6E0 FE 08                    cp    8
134+  D6E2 CA 18 D7                 jp z, loc_D690
135+  D6E5 0E 04                    ld    c, 4
136+  D6E7 FE 1A                    cp    1Ah
137+  D6E9 CA 18 D7                 jp z, loc_D690
138+  D6EC FE 19                    cp    19h
139+  D6EE CA 18 D7                 jp z, loc_D690
140+  D6F1 FE 0D                    cp    0Dh
141+  D6F3 CA 10 D7                 jp z, loc_D688
142+  D6F6 FE 1B                    cp    1Bh
143+  D6F8 CA 09 D7                 jp z, loc_D681
144+  D6FB
145+  D6FB                          ; Выбор диска нажатием на a-h
146+  D6FB D6 41                    sub   41h
147+  D6FD FE 08                    cp    8
148+  D6FF D2 CC D6                 jp nc,      loc_D644
149+  D702 4F                       ld    c, a
150+  D703
151+  D703                          ; Восстанавливаем вид курсора
152+  D703 F1                       pop   af
153+  D704 32 E9 8F                 ld    (bios_vars.cursorCfg),a
154+  D707 79                       ld    a, c
155+  D708 C9                       ret
156+  D709
157+  D709              ; ---------------------------------------------------------------------------
158+  D709
159+  D709              loc_D681:   ; Восстанавливаем вид курсора
160+  D709 F1                       pop   af
161+  D70A 32 E9 8F                 ld    (bios_vars.cursorCfg),a
162+  D70D
163+  D70D                          ; Ничего не выбрано
164+  D70D 3E FF                    ld    a, 0FFh
165+  D70F C9                       ret
166+  D710
167+  D710              ; ---------------------------------------------------------------------------
168+  D710
169+  D710              loc_D688:   ; Восстанавливаем вид курсора
170+  D710 F1                       pop   af
171+  D711 32 E9 8F                 ld    (bios_vars.cursorCfg),a
172+  D714                          ; Выбрали
173+  D714 3A 18 DE                 ld    a, (nc_vars.chooseDrive)
174+  D717 C9                       ret
175+  D718
176+  D718              ; ---------------------------------------------------------------------------
177+  D718
178+  D718 3A 18 DE     loc_D690:   ld    a, (nc_vars.chooseDrive)
179+  D71B 81                       add   a, c
180+  D71C E6 07                    and   7
181+  D71E 32 18 DE                 ld    (nc_vars.chooseDrive),a
182+  D721 C3 CC D6                 jp    loc_D644
183+  D724
184+  D724              ; ---------------------------------------------------------------------------
185+  D724
186+  D724              chooseDrive_draw:
187+  D724                          ; Выбранное устройство
188+  D724 3A 18 DE                 ld    a, (nc_vars.chooseDrive)
189+  D727
190+  D727                          ; Координаты курсора
191+  D727 21 6C 97                 ld    hl, 976Ch
192+  D72A
193+  D72A                          ; Вторая строка
194+  D72A FE 04                    cp    4
195+  D72C DA 37 D7                 jp c, chooseDrive_draw2
196+  D72F D6 04                    sub  4
197+  D731 4F                       ld   c, a
198+  D732 7D                       ld   a, l
199+  D733 C6 0B                    add  a,0Bh
200+  D735 6F                       ld   l, a
201+  D736 79                       ld   a, c
202+  D737              chooseDrive_draw2:
203+  D737                          ; Рисуем
204+  D737 4F                       ld    c, a
205+  D738 87                       add   a, a
206+  D739 81                       add   a, c
207+  D73A 84                       add   a, h
208+  D73B 67                       ld    h, a
209+  D73C CD 0F DB                 call  activePanelPos
210+  D73F 06 01                    ld    b, 1        ; ширина 8 пикселей
211+  D741 C3 90 D8                 jp    inverseRect ; hl - адрес
212+  D744
213+  D744
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f2.inc
103   D744                  INCLUDE "tab.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tab.inc
  1+  D744              ;----------------------------------------------------------------------------
  2+  D744              ; MXOS NC.COM
  3+  D744              ; Клавиша TAB - Смена активной панели
  4+  D744              ;
  5+  D744              ; 2013-12-18 Дизассемблировано vinxru
  6+  D744              ;----------------------------------------------------------------------------
  7+  D744
  8+  D744              Tab:        ; Получаем видимость панели
  9+  D744 21 FB DD                 ld    hl, panelA_info
 10+  D747 3A FA DD                 ld    a, (activePanel)
 11+  D74A A7                       and   a
 12+  D74B C2 4F D7                 jp nz,  loc_D6C7
 13+  D74E 23                       inc   hl
 14+  D74F 4F           loc_D6C7:   ld    c, a
 15+  D750 7E                       ld  a, (hl)
 16+  D751
 17+  D751                          ; Панель не видима, выходим
 18+  D751 A7                       and   a
 19+  D752 C2 53 D0                 jp nz,  mainDriveChanged
 20+  D755
 21+  D755                          ; Меняем активную панель на противоположную
 22+  D755 79                       ld    a, c
 23+  D756 EE 01                    xor   1
 24+  D758 32 FA DD                 ld    (activePanel),a
 25+  D75B
 26+  D75B                          ; Перезагружаем списк файлов
 27+  D75B 21 FD DD                 ld    hl, panelA_drive
 28+  D75E CD 9B DA                 call  readBytePanel
 29+  D761 CD F5 D8                 call  loadFiles   ; На входе нужен a=накопитель
 30+  D764
 31+  D764 C3 86 D6                 jp    loc_D603
 32+  D767
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\tab.inc
104   D767                  INCLUDE "f3.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f3.inc
  1+  D767              ;----------------------------------------------------------------------------
  2+  D767              ; MXOS NC.COM
  3+  D767              ; Клавиша F3 - отобразить информацию о накопителе
  4+  D767              ;
  5+  D767              ; 2013-12-18 Дизассемблировано vinxru
  6+  D767              ;----------------------------------------------------------------------------
  7+  D767
  8+  D767              F3:         ; Временный выбор противоположной панели
  9+  D767 3A FA DD                 ld    a, (activePanel)
 10+  D76A F5                       push  af
 11+  D76B EE 01                    xor   1
 12+  D76D 32 FA DD                 ld    (activePanel),a
 13+  D770
 14+  D770                          ; Меняем видимость панели
 15+  D770 21 FB DD                 ld    hl, panelA_info
 16+  D773 CD 9B DA                 call  readBytePanel
 17+  D776 EE 01                    xor   1
 18+  D778 CD 8A DA                 call  writeBytePanel
 19+  D77B
 20+  D77B                          ; Восстанавлаием активную панель
 21+  D77B F1                       pop   af
 22+  D77C 32 FA DD                 ld    (activePanel),a
 23+  D77F A7                       and   a
 24+  D780 CA 89 D7                 jp z, loc_D701
 25+  D783
 26+  D783                          ; Перерисовываем панель
 27+  D783 CD C5 D8                 call  loadAndPrintA
 28+  D786
 29+  D786 C3 86 D6                 jp    loc_D603
 30+  D789
 31+  D789              ; ---------------------------------------------------------------------------
 32+  D789
 33+  D789 CD B6 D8     loc_D701:   call  loadAndPrintB
 34+  D78C C3 86 D6                 jp    loc_D603
 35+  D78F
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\f3.inc
105   D78F                  INCLUDE "upDownLeftRight.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\upDownLeftRight.inc
  1+  D78F              ;----------------------------------------------------------------------------
  2+  D78F              ; MXOS NC.COM
  3+  D78F              ; Клавиши перемещения курсора
  4+  D78F              ;
  5+  D78F              ; 2013-12-18 Дизассемблировано vinxru
  6+  D78F              ;----------------------------------------------------------------------------
  7+  D78F
  8+  D78F              Down:       ; Если curFile+1 < filesCnt, то curFile = curFile+1
  9+  D78F 21 FF DD                 ld    hl, panelA_filesCnt
 10+  D792 CD 9B DA                 call  readBytePanel
 11+  D795 4F                       ld    c, a
 12+  D796 21 01 DE                 ld    hl, panelA_curFile
 13+  D799 CD 9B DA                 call  readBytePanel
 14+  D79C 3C                       inc   a
 15+  D79D B9                       cp    c
 16+  D79E CA 53 D0                 jp z, mainDriveChanged
 17+  D7A1 CD 8A DA                 call  writeBytePanel
 18+  D7A4 C3 53 D0                 jp    mainDriveChanged
 19+  D7A7
 20+  D7A7              ; ---------------------------------------------------------------------------
 21+  D7A7
 22+  D7A7              Up:         ; Если curFile > 0, то curFile = curFile-1
 23+  D7A7 21 01 DE                 ld    hl, panelA_curFile
 24+  D7AA CD 9B DA                 call  readBytePanel
 25+  D7AD 3D                       dec   a
 26+  D7AE FA 53 D0                 jp M, mainDriveChanged
 27+  D7B1 CD 8A DA                 call  writeBytePanel
 28+  D7B4 C3 53 D0                 jp    mainDriveChanged
 29+  D7B7
 30+  D7B7              ; ---------------------------------------------------------------------------
 31+  D7B7
 32+  D7B7              Left:       ; Если curFile > 18, то curFile = curFile-18, иначе curFile = 0
 33+  D7B7 21 01 DE                 ld    hl, panelA_curFile
 34+  D7BA CD 9B DA                 call  readBytePanel
 35+  D7BD D6 12                    sub   18
 36+  D7BF F2 C3 D7                 jp p, Left_1
 37+  D7C2 AF                       xor   a
 38+  D7C3 CD 8A DA     Left_1:           call  writeBytePanel
 39+  D7C6 C3 53 D0                 jp    mainDriveChanged
 40+  D7C9
 41+  D7C9              ; ---------------------------------------------------------------------------
 42+  D7C9
 43+  D7C9 21 FF DD     Right:            ld    hl, panelA_filesCnt
 44+  D7CC CD 9B DA                 call  readBytePanel
 45+  D7CF 4F                       ld    c, a
 46+  D7D0 0D                       dec   c
 47+  D7D1 CA 53 D0                 jp z, mainDriveChanged
 48+  D7D4 21 01 DE                 ld    hl, panelA_curFile
 49+  D7D7 CD 9B DA                 call  readBytePanel
 50+  D7DA C6 12                    add   a,18
 51+  D7DC B9                       cp    c
 52+  D7DD DA E1 D7                 jp c, Right_1
 53+  D7E0 79                       ld    a, c
 54+  D7E1 CD 8A DA     Right_1:    call  writeBytePanel
 55+  D7E4 C3 53 D0                 jp    mainDriveChanged
 56+  D7E7
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\upDownLeftRight.inc
106   D7E7                  INCLUDE "clearCmdLine.inc"    ; Продолжается в printSpaces
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\clearCmdLine.inc
  1+  D7E7              ;----------------------------------------------------------------------------
  2+  D7E7              ; MXOS NC.COM
  3+  D7E7              ; Очистка ком строки
  4+  D7E7              ;
  5+  D7E7              ; 2013-12-18 Дизассемблировано vinxru
  6+  D7E7              ;----------------------------------------------------------------------------
  7+  D7E7
  8+  D7E7              clearCmdLine:
  9+  D7E7 21 F3 07                 ld    hl, 7F3h
 10+  D7EA 22 FC 8F                 ld    (bios_vars.cursorY), hl
 11+  D7ED
 12+  D7ED 26 0A                    ld    h, 10
 13+  D7EF 22 14 DE                 ld    (nc_vars.cmdLinePos), hl
 14+  D7F2
 15+  D7F2                          COLOR   COLOR_CMDLINE
 15+  D7F2             >        IF ENABLE_COLOR
 15+  D7F2 3E 70       >            ld a, COLOR_CMDLINE
 15+  D7F4 32 F8 FF    >            ld (IO_COLOR), a
 15+  D7F7             >        ENDIF
 16+  D7F7
 17+  D7F7 0E 5C                    ld    c, 92 ; '\'
 18+  D7F9 CD 09 C8                 call  bios_printChar
 19+  D7FC
 20+  D7FC 21 1F DE                 ld    hl, nc_vars.cmdLine
 21+  D7FF 22 16 DE                 ld    (nc_vars.cmdLineEnd), hl
 22+  D802
 23+  D802 06 3C                    ld    b, 60
 24+  D804
 25+  D804                          ; Продолжение на printSpaces
 26+  D804
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\clearCmdLine.inc
107   D804                  INCLUDE "printSpaces.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSpaces.inc
  1+  D804              ;----------------------------------------------------------------------------
  2+  D804              ; MXOS NC.COM
  3+  D804              ; Вывод пробелов
  4+  D804              ;
  5+  D804              ; b - кол-во пробелов
  6+  D804              ;
  7+  D804              ; 2013-12-18 Дизассемблировано vinxru
  8+  D804              ;----------------------------------------------------------------------------
  9+  D804
 10+  D804              printSpaces:
 11+  D804 0E 20                    ld    c, ' '
 12+  D806              printSpaces_1:
 13+  D806 CD 09 C8                 call  bios_printChar
 14+  D809 05                       dec   b
 15+  D80A C2 06 D8                 jp nz,  printSpaces_1
 16+  D80D C9                       ret
 17+  D80E
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printSpaces.inc
108   D80E                  INCLUDE "drawCursor.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawCursor.inc
  1+  D80E              ;----------------------------------------------------------------------------
  2+  D80E              ; MXOS NC.COM
  3+  D80E              ; Рисование курсора
  4+  D80E              ;
  5+  D80E              ; 2013-12-18 Дизассемблировано vinxru
  6+  D80E              ;----------------------------------------------------------------------------
  7+  D80E
  8+  D80E              drawCursor: ; Цвет устаналвиается перед выводом
  9+  D80E
 10+  D80E                          ; Если файлов нет, выходим
 11+  D80E 21 FF DD                 ld    hl, panelA_filesCnt
 12+  D811 CD 9B DA                 call  readBytePanel
 13+  D814 A7                       and   a
 14+  D815                  IF ENABLE_COLOR
 15+  D815 C8                       ret Z
 16+  D816                  ELSE
 17+  D816 ~                        jp z, drawCursor_0
 18+  D816                  ENDIF
 19+  D816                          ; Номер выбранного файла
 20+  D816 21 01 DE                 ld    hl, panelA_curFile
 21+  D819 CD 9B DA                 call  readBytePanel
 22+  D81C
 23+  D81C                          ; Рассчиытваем координату X (h = a < 18 ? 0x91 : 0x9D)
 24+  D81C 26 91                    ld    h, 91h
 25+  D81E FE 12                    cp    18
 26+  D820 DA 27 D8                 jp c, drawCursor_1
 27+  D823 D6 12                    sub   18
 28+  D825 26 9D                    ld    h, 9Dh
 29+  D827
 30+  D827              drawCursor_1:     ; Рассчиытваем координату Y (l = a * 10 + 18h)
 31+  D827 87                       add   a, a
 32+  D828 4F                       ld    c, a
 33+  D829 87                       add   a, a
 34+  D82A 87                       add   a, a
 35+  D82B 81                       add   a, c
 36+  D82C C6 18                    add   a,24
 37+  D82E 6F                       ld    l, a
 38+  D82F
 39+  D82F                          ; Ширина
 40+  D82F 06 0A                    ld    b, 10
 41+  D831
 42+  D831                          ; Если правая панель, сдвигаем курсор на пол экрана
 43+  D831 3A FA DD     drawCursor_2:     ld    a, (activePanel)
 44+  D834 A7                       and   a
 45+  D835 CA 3A D8                 jp z, drawCursor_3
 46+  D838 3E 18                    ld    a, 18h
 47+  D83A 84           drawCursor_3:     add   a, h
 48+  D83B 67                       ld    h, a
 49+  D83C
 50+  D83C                          ; Рисуем курсор (hl - адрес, b - ширина, высота 9)
 51+  D83C CD 90 D8                 call  inverseRect
 52+  D83F C9                       ret
 53+  D840
 54+  D840              ; ---------------------------------------------------------------------------
 55+  D840
 56+  D840                  IF ENABLE_COLOR==0
 57+  D840 ~            drawCursor_0:     ld    hl, 92D6h
 58+  D840 ~                        ld    b, 2
 59+  D840 ~                        jp    drawCursor_2
 60+  D840                  ENDIF
 61+  D840
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\drawCursor.inc
109   D840                  INCLUDE "printInfoLine.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoLine.inc
  1+  D840              ;----------------------------------------------------------------------------
  2+  D840              ; MXOS NC.COM
  3+  D840              ; Вывод инфомарции о файле внизу окна
  4+  D840              ;
  5+  D840              ; 2013-12-18 Дизассемблировано vinxru
  6+  D840              ;----------------------------------------------------------------------------
  7+  D840
  8+  D840              printInfoLine:
  9+  D840                      ; Если файлов нет, выходим
 10+  D840 21 FF DD             ld      hl, panelA_filesCnt
 11+  D843 CD 9B DA             call    readBytePanel
 12+  D846 A7                   and     a
 13+  D847 C8                   ret z
 14+  D848
 15+  D848                      COLOR   COLOR_INFOLINE
 15+  D848             >        IF ENABLE_COLOR
 15+  D848 3E B1       >            ld a, COLOR_INFOLINE
 15+  D84A 32 F8 FF    >            ld (IO_COLOR), a
 15+  D84D             >        ENDIF
 16+  D84D
 17+  D84D 21 DE 0F             ld      hl, (P_FILE_NAME_X << 8) + P_FILE_NAME_Y
 18+  D850 CD BD DA             call    setCursorPosPanel
 19+  D853
 20+  D853                      ; ld      c, '\'
 21+  D853                      ; call    bios_printChar
 22+  D853
 23+  D853                      ; Устанавливаем hl на дескриптор файла
 24+  D853 CD A2 D8             call    getSelectedFile
 25+  D856 E5                   push    hl
 26+  D857
 27+  D857                      ; Печатаем имя файла в компактном виде
 28+  D857 11 88 DE             ld      de, nc_vars.tempFileDescr  ; буфер
 29+  D85A CD 66 DB             call    compactName
 30+  D85D 21 88 DE             ld      hl, nc_vars.tempFileDescr
 31+  D860 06 0E                ld      b, DIR_NAME_LENGTH + 6  ; макс длина строки (name.ext + ' ' + терминатор)
 32+  D862 0E 14                ld      c, 20                   ; терминатор - пробел или меньше
 33+  D864 CD A7 DA             call    printString2
 34+  D867
 35+  D867                      ; После имени файла, если оно короткие, надо напечатать
 36+  D867                      ; пробелы, чтобы стереть предыдущий текст. После работы
 37+  D867                      ; printString2 у нас в b как раз количество символов,
 38+  D867                      ; оставшихся до DIR_NAME_LENGTH + 6
 39+  D867 CD 04 D8     		call    printSpaces	; b - кол-во пробелов
 40+  D86A
 41+  D86A                      ; Смещаем курсор
 42+  D86A 21 DE 39             ld      hl, (P_FILE_DATA_X << 8) + P_FILE_DATA_Y
 43+  D86D CD BD DA             call    setCursorPosPanel
 44+  D870
 45+  D870                      ; Устанавливаем hl на поле адреса загрузки
 46+  D870 E1                   pop     hl
 47+  D871 E5                   push    hl
 48+  D872 01 13 00             ld      bc, FILE_DESCRIPTOR.loadAddress + 1 ; bc = смещение
 49+  D875 09                   add     hl, bc
 50+  D876
 51+  D876                      ; Читаем старший и младший байты адреса загрузки
 52+  D876                      ; и тут же печатаем их в HEX форме
 53+  D876 7E                   ld      a, (hl)
 54+  D877 CD 15 C8             call    bios_printHexByte
 55+  D87A 2B                   dec     hl
 56+  D87B 7E                   ld      a, (hl)
 57+  D87C CD 15 C8             call    bios_printHexByte
 58+  D87F
 59+  D87F                      ; Смещаем курсор
 60+  D87F 0E 18        		LD 	    c, 18h  ; код символа "вправо"
 61+  D881 CD 09 C8     		call	bios_printChar
 62+  D884
 63+  D884                      ; Устанавливаем hl на поле размера файла
 64+  D884 E1                   pop     hl
 65+  D885 01 1C 00             ld      bc, FILE_DESCRIPTOR.size ; bc = смещение
 66+  D888 09                   add     hl, bc
 67+  D889
 68+  D889                      ; Читаем размер файла в de и печатаем в десятичной форме
 69+  D889 5E                   ld      e, (hl)
 70+  D88A 23                   inc     hl
 71+  D88B 56                   ld      d, (hl)
 72+  D88C 13                   inc     de          ; в дескрипторе файла хранится размер-1
 73+  D88D C3 6C C8             jp      bios_printDecWord
 74+  D890
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoLine.inc
110   D890                  INCLUDE "inverseRect.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inverseRect.inc
  1+  D890              ;----------------------------------------------------------------------------
  2+  D890              ; MXOS NC.COM
  3+  D890              ; Инвертирвоание прямоугольной области на экране
  4+  D890              ;
  5+  D890              ; hl - адрес, b   - ширина в байтах, высота всегда 9 пикселей
  6+  D890              ;
  7+  D890              ; 2013-12-18 Дизассемблировано vinxru
  8+  D890              ;----------------------------------------------------------------------------
  9+  D890
 10+  D890              inverseRect:
 11+  D890 0E 09                    ld      c, 9
 12+  D892 E5                       push    hl
 13+  D893 7E           loc_D7F3:   ld      a, (hl)
 14+  D894 2F                       cpl
 15+  D895 77                       ld      (hl), a
 16+  D896 23                       inc     hl
 17+  D897 0D                       dec     c
 18+  D898 C2 93 D8                 jp nz,  loc_D7F3
 19+  D89B E1                       pop     hl
 20+  D89C 24                       inc     h
 21+  D89D 05                       dec     b
 22+  D89E C2 90 D8                 jp nz,  inverseRect
 23+  D8A1 C9                       ret
 24+  D8A2
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\inverseRect.inc
111   D8A2                  INCLUDE "getSelectedFile.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\getSelectedFile.inc
  1+  D8A2              ;----------------------------------------------------------------------------
  2+  D8A2              ; MXOS NC.COM
  3+  D8A2              ; Получить имя выбранного файла
  4+  D8A2              ;
  5+  D8A2              ; выход:
  6+  D8A2              ;   hl - адрес дескриптора файла
  7+  D8A2              ;
  8+  D8A2              ; 2013-12-18 Дизассемблировано vinxru
  9+  D8A2              ;----------------------------------------------------------------------------
 10+  D8A2
 11+  D8A2              getSelectedFile:
 12+  D8A2 D5                   push    de
 13+  D8A3
 14+  D8A3                      ; Получить номер текущего файла
 15+  D8A3 21 01 DE             ld      hl, panelA_curFile
 16+  D8A6 CD 9B DA             call    readBytePanel
 17+  D8A9
 18+  D8A9                      ; Получить имя (адрес) текущего файла
 19+  D8A9                      ; nc_vars.tempFileDescr += DIR_DESCR_SIZE * curFile[activePanel];
 20+  D8A9 21 88 DE             ld      hl, nc_vars.tempFileDescr
 21+  D8AC 11 20 00             ld      de, DIR_DESCR_SIZE
 22+  D8AF              loc_D80F:
 23+  D8AF 19                   add     hl, de
 24+  D8B0 3D                   dec     a
 25+  D8B1 F2 AF D8             jp p,   loc_D80F
 26+  D8B4
 27+  D8B4 D1                   pop     de
 28+  D8B5 C9                   ret
 29+  D8B6
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\getSelectedFile.inc
112   D8B6                  INCLUDE "loadAndPrint.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadAndPrint.inc
  1+  D8B6              ;----------------------------------------------------------------------------
  2+  D8B6              ; MXOS NC.COM
  3+  D8B6              ; Загрузить файлы и нарисовать
  4+  D8B6              ;
  5+  D8B6              ; 2013-12-18 Дизассемблировано vinxru
  6+  D8B6              ;----------------------------------------------------------------------------
  7+  D8B6
  8+  D8B6              loadAndPrintB:    ; Времено меняем активную панель на правую
  9+  D8B6 3A FA DD                 ld      a, (activePanel)
 10+  D8B9 F5                       push    af
 11+  D8BA 3E 01                    ld      a, 1
 12+  D8BC 32 FA DD                 ld      (activePanel),a
 13+  D8BF
 14+  D8BF                          ; Переходим к общему коду
 15+  D8BF 3A FC DD                 ld      a, (panelB_info)
 16+  D8C2 C3 D1 D8                 jp      loadAndPrint
 17+  D8C5
 18+  D8C5              ; ---------------------------------------------------------------------------
 19+  D8C5
 20+  D8C5              loadAndPrintA:    ; Времено меняем активную панель на левую
 21+  D8C5 3A FA DD                 ld      a, (activePanel)
 22+  D8C8 F5                       push    af
 23+  D8C9 3E 00                    ld      a, 0
 24+  D8CB 32 FA DD                 ld      (activePanel),a
 25+  D8CE
 26+  D8CE                          ; Панель видима?
 27+  D8CE 3A FB DD                 ld      a, (panelA_info)
 28+  D8D1              loadAndPrint:
 29+  D8D1 A7                       and     a
 30+  D8D2 C2 E4 D8                 jp nz,  loadAndPrint_2
 31+  D8D5
 32+  D8D5                          ; Загружаем список файлов
 33+  D8D5 21 FD DD                 ld      hl, panelA_drive
 34+  D8D8 CD 9B DA                 call    readBytePanel
 35+  D8DB CD F5 D8                 call    loadFiles   ; На входе a должен содержать номер накопителя
 36+  D8DE
 37+  D8DE                          ; Выводим список файлов
 38+  D8DE CD E9 D9                 call    printFilePanel
 39+  D8E1
 40+  D8E1 C3 E7 D8                 jp      loadAndPrint_3
 41+  D8E4
 42+  D8E4              ; ---------------------------------------------------------------------------
 43+  D8E4
 44+  D8E4              loadAndPrint_2:   ; Рисуем панель информации
 45+  D8E4 CD 00 D9                 call    printInfoPanel
 46+  D8E7
 47+  D8E7              loadAndPrint_3:   ; Восстанавливаем активную панель
 48+  D8E7 F1                       pop     af
 49+  D8E8 32 FA DD                 ld      (activePanel),a
 50+  D8EB
 51+  D8EB                          ; Загружаем список файлов
 52+  D8EB 21 FD DD                 ld      hl, panelA_drive
 53+  D8EE CD 9B DA                 call    readBytePanel
 54+  D8F1 CD F5 D8                 call    loadFiles   ; На входе a должен содержать номер накопителя
 55+  D8F4 C9                       ret
 56+  D8F5
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadAndPrint.inc
113   D8F5                  INCLUDE "loadFiles.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadFiles.inc
  1+  D8F5              ;----------------------------------------------------------------------------
  2+  D8F5              ; MXOS NC.COM
  3+  D8F5              ; Загрузить файлы
  4+  D8F5              ;
  5+  D8F5              ; 2013-12-18 Дизассемблировано vinxru
  6+  D8F5              ;----------------------------------------------------------------------------
  7+  D8F5
  8+  D8F5 1E 01        loadFiles:  ld    e, 1
  9+  D8F7 CD 42 C8                 call  bios_fileGetSetDrive
 10+  D8FA 21 A8 DE                 ld    hl, nc_vars.fileListBuffer
 11+  D8FD C3 3F C8                 jp    bios_fileList
 12+  D900
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\loadFiles.inc
114   D900                  INCLUDE "printInfoPanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoPanel.inc
  1+  D900              ;----------------------------------------------------------------------------
  2+  D900              ; MXOS NC.COM
  3+  D900              ; Рисование информационной панели
  4+  D900              ;
  5+  D900              ; 2013-12-18 Дизассемблировано vinxru
  6+  D900              ;----------------------------------------------------------------------------
  7+  D900
  8+  D900              printInfoPanel:
  9+  D900                          COLOR   COLOR_BORDER
  9+  D900             >        IF ENABLE_COLOR
  9+  D900 3E F1       >            ld a, COLOR_BORDER
  9+  D902 32 F8 FF    >            ld (IO_COLOR), a
  9+  D905             >        ENDIF
 10+  D905
 11+  D905                          ; Рисуем панель
 12+  D905 21 C3 DD                 ld      hl, g_infoPanel
 13+  D908 CD D0 DA                 call    draw
 14+  D90B
 15+  D90B                          COLOR   COLOR_INFOHEADER
 15+  D90B             >        IF ENABLE_COLOR
 15+  D90B 3E A1       >            ld a, COLOR_INFOHEADER
 15+  D90D 32 F8 FF    >            ld (IO_COLOR), a
 15+  D910             >        ENDIF
 16+  D910
 17+  D910                          ; COMMANDER VERSION xxx
 18+  D910 21 10 11                 ld      hl, 1110h
 19+  D913 CD BD DA                 call    setCursorPosPanel
 20+  D916 21 48 DC                 ld      hl, aCommanderVer
 21+  D919 CD 18 C8                 call    bios_printString
 22+  D91C
 23+  D91C                          ; (C) OMSK 1992
 24+  D91C 21 1A 1D                 ld      hl, 1D1Ah
 25+  D91F CD BD DA                 call    setCursorPosPanel
 26+  D922 21 5E DC                 ld      hl, aCOmsk1992
 27+  D925 CD 18 C8                 call    bios_printString
 28+  D928
 29+  D928                          ; Положение курсора
 30+  D928 21 30 16                 ld      hl, 1630h
 31+  D92B CD BD DA                 call    setCursorPosPanel
 32+  D92E
 33+  D92E                          ; Получить размер диска
 34+  D92E 1E 03                    ld      e, 3
 35+  D930 CD 63 C8                 call    bios_diskDriver
 36+  D933                  IF FIX_FREE_SPACE_BUG
 37+  D933 DE 04                    sbc     4
 38+  D935                  ENDIF
 39+  D935 57                       ld      d, a
 40+  D936 1E 00                    ld      e, 0
 41+  D938 D5                       push    de
 42+  D939
 43+  D939                          ; ##### TOTAL BYTES
 44+  D939                          COLOR   COLOR_INFONUMBER
 44+  D939             >        IF ENABLE_COLOR
 44+  D939 3E E1       >            ld a, COLOR_INFONUMBER
 44+  D93B 32 F8 FF    >            ld (IO_COLOR), a
 44+  D93E             >        ENDIF
 45+  D93E CD 6C C8                 call    bios_printDecWord
 46+  D941                          COLOR   COLOR_INFOTEXT
 46+  D941             >        IF ENABLE_COLOR
 46+  D941 3E F1       >            ld a, COLOR_INFOTEXT
 46+  D943 32 F8 FF    >            ld (IO_COLOR), a
 46+  D946             >        ENDIF
 47+  D946 21 2A DD                 ld      hl, aTotalBytes
 48+  D949 CD 18 C8                 call    bios_printString
 49+  D94C
 50+  D94C                          ; ON DRIVE A:
 51+  D94C 21 3C 1F                 ld      hl, 1F3Ch
 52+  D94F CD BD DA                 call    setCursorPosPanel
 53+  D952 21 37 DD                 ld      hl, aOnDrive
 54+  D955 CD 18 C8                 call    bios_printString
 55+  D958                          COLOR   COLOR_INFONUMBER
 55+  D958             >        IF ENABLE_COLOR
 55+  D958 3E E1       >            ld a, COLOR_INFONUMBER
 55+  D95A 32 F8 FF    >            ld (IO_COLOR), a
 55+  D95D             >        ENDIF
 56+  D95D CD 7A DA                 call    printCurDrive
 57+  D960                          COLOR   COLOR_INFOTEXT
 57+  D960             >        IF ENABLE_COLOR
 57+  D960 3E F1       >            ld a, COLOR_INFOTEXT
 57+  D962 32 F8 FF    >            ld (IO_COLOR), a
 57+  D965             >        ENDIF
 58+  D965
 59+  D965                          ; Положение курсора
 60+  D965 21 48 05                 ld      hl, 548h
 61+  D968 CD BD DA                 call    setCursorPosPanel
 62+  D96B
 63+  D96B                          ; Подсчет свободного места на диске
 64+  D96B
 65+  D96B                          ; Читаем FAT
 66+  D96B 21 00 FE                 ld      hl, 0FE00h
 67+  D96E 11 02 00                 ld      de, 2
 68+  D971 CD 63 C8                 call    bios_diskDriver
 69+  D974
 70+  D974                          ; Считаем не занятые кластеры с 4-ого
 71+  D974 5D                       ld      e, l
 72+  D975 2E 04                    ld      l, 4
 73+  D977                  IF FIX_FREE_SPACE_BUG
 74+  D977 AF                       xor     a
 75+  D978 57                       ld      d, a
 76+  D979                  ELSE
 77+  D979 ~                        ld      d, l
 78+  D979                  ENDIF
 79+  D979 7E           loc_D8B8:   ld      a, (hl)
 80+  D97A A7                       and     a
 81+  D97B C2 7F D9                 jp nz,  loc_D8BE
 82+  D97E 14                       inc     d
 83+  D97F 2C           loc_D8BE:   inc     l
 84+  D980 C2 79 D9                 jp nz,  loc_D8B8
 85+  D983
 86+  D983 D5                       push    de
 87+  D984
 88+  D984                          ; ##### BYTES FREE ON DRIVE #:
 89+  D984                          COLOR   COLOR_INFONUMBER
 89+  D984             >        IF ENABLE_COLOR
 89+  D984 3E E1       >            ld a, COLOR_INFONUMBER
 89+  D986 32 F8 FF    >            ld (IO_COLOR), a
 89+  D989             >        ENDIF
 90+  D989 CD 6C C8                 call    bios_printDecWord
 91+  D98C                          COLOR   COLOR_INFOTEXT
 91+  D98C             >        IF ENABLE_COLOR
 91+  D98C 3E F1       >            ld a, COLOR_INFOTEXT
 91+  D98E 32 F8 FF    >            ld (IO_COLOR), a
 91+  D991             >        ENDIF
 92+  D991 21 FE DC                 ld      hl, aBytesFreeOnDrv
 93+  D994 CD 18 C8                 call    bios_printString
 94+  D997 CD 7A DA                 call    printCurDrive
 95+  D99A
 96+  D99A                          ; Положение курсора
 97+  D99A 21 54 0D                 ld      hl, 0D54h
 98+  D99D CD BD DA                 call    setCursorPosPanel
 99+  D9A0
100+  D9A0                          ; de = кол-во файлов
101+  D9A0 21 FF DD                 ld      hl, panelA_filesCnt
102+  D9A3 3A FA DD                 ld      a, (activePanel)
103+  D9A6 A7                       and     a
104+  D9A7 C2 AB D9                 jp nz,  loc_D8E0
105+  D9AA 23                       inc     hl
106+  D9AB 5E           loc_D8E0:   ld      e, (hl)
107+  D9AC 16 00                    ld      d, 0
108+  D9AE
109+  D9AE                          ; ##### FILES USE #####
110+  D9AE                          COLOR   COLOR_INFONUMBER
110+  D9AE             >        IF ENABLE_COLOR
110+  D9AE 3E E1       >            ld a, COLOR_INFONUMBER
110+  D9B0 32 F8 FF    >            ld (IO_COLOR), a
110+  D9B3             >        ENDIF
111+  D9B3 CD 6C C8                 call    bios_printDecWord
112+  D9B6                          COLOR   COLOR_INFOTEXT
112+  D9B6             >        IF ENABLE_COLOR
112+  D9B6 3E F1       >            ld a, COLOR_INFOTEXT
112+  D9B8 32 F8 FF    >            ld (IO_COLOR), a
112+  D9BB             >        ENDIF
113+  D9BB 21 14 DD                 ld      hl, aFilesUse
114+  D9BE CD 18 C8                 call    bios_printString
115+  D9C1 E1                       pop     hl
116+  D9C2 D1                       pop     de
117+  D9C3 7A                       ld      a, d
118+  D9C4 94                       sub     h
119+  D9C5 57                       ld      d, a
120+  D9C6 1E 00                    ld      e, 0
121+  D9C8                          COLOR   COLOR_INFONUMBER
121+  D9C8             >        IF ENABLE_COLOR
121+  D9C8 3E E1       >            ld a, COLOR_INFONUMBER
121+  D9CA 32 F8 FF    >            ld (IO_COLOR), a
121+  D9CD             >        ENDIF
122+  D9CD CD 6C C8                 call    bios_printDecWord
123+  D9D0                          COLOR   COLOR_INFOTEXT
123+  D9D0             >        IF ENABLE_COLOR
123+  D9D0 3E F1       >            ld a, COLOR_INFOTEXT
123+  D9D2 32 F8 FF    >            ld (IO_COLOR), a
123+  D9D5             >        ENDIF
124+  D9D5
125+  D9D5                          ; BYTES IN A:
126+  D9D5 21 60 1F                 ld      hl, 1F60h
127+  D9D8 CD BD DA                 call    setCursorPosPanel
128+  D9DB 21 20 DD                 ld      hl, aBytesIn
129+  D9DE CD 18 C8                 call    bios_printString
130+  D9E1
131+  D9E1                          COLOR   COLOR_INFONUMBER
131+  D9E1             >        IF ENABLE_COLOR
131+  D9E1 3E E1       >            ld a, COLOR_INFONUMBER
131+  D9E3 32 F8 FF    >            ld (IO_COLOR), a
131+  D9E6             >        ENDIF
132+  D9E6 C3 7A DA                 jp      printCurDrive
133+  D9E9
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printInfoPanel.inc
115   D9E9                  INCLUDE "printFilePanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFilePanel.inc
  1+  D9E9              ;----------------------------------------------------------------------------
  2+  D9E9              ; MXOS NC.COM
  3+  D9E9              ; Вывод списка файлов на панель
  4+  D9E9              ;
  5+  D9E9              ; 2013-12-18 Дизассемблировано vinxru
  6+  D9E9              ;----------------------------------------------------------------------------
  7+  D9E9
  8+  D9E9              printFilePanel:
  9+  D9E9                      COLOR   COLOR_BORDER
  9+  D9E9             >        IF ENABLE_COLOR
  9+  D9E9 3E F1       >            ld a, COLOR_BORDER
  9+  D9EB 32 F8 FF    >            ld (IO_COLOR), a
  9+  D9EE             >        ENDIF
 10+  D9EE
 11+  D9EE 21 B2 DD             ld      hl, g_filePanel
 12+  D9F1 CD D0 DA             call    draw
 13+  D9F4
 14+  D9F4                      COLOR   COLOR_PANELNAME
 14+  D9F4             >        IF ENABLE_COLOR
 14+  D9F4 3E A1       >            ld a, COLOR_PANELNAME
 14+  D9F6 32 F8 FF    >            ld (IO_COLOR), a
 14+  D9F9             >        ENDIF
 15+  D9F9
 16+  D9F9                      ; Вывод NAME
 17+  D9F9 21 10 11             ld      hl, (P_NAME_X << 8) + P_NAME_Y
 18+  D9FC CD BD DA             call    setCursorPosPanel
 19+  D9FF 21 F4 DB             ld      hl, aNameName
 20+  DA02 CD 18 C8             call    bios_printString
 21+  DA05
 22+  DA05                      COLOR   COLOR_INFOLINE
 22+  DA05             >        IF ENABLE_COLOR
 22+  DA05 3E B1       >            ld a, COLOR_INFOLINE
 22+  DA07 32 F8 FF    >            ld (IO_COLOR), a
 22+  DA0A             >        ENDIF
 23+  DA0A
 24+  DA0A                      ; Вывод буквы диска
 25+  DA0A 21 FD DD             ld      hl, panelA_drive
 26+  DA0D CD 9B DA             call    readBytePanel
 27+  DA10 21 DE 09             ld      hl, (P_DRIVE_LETTER_X << 8) + P_DRIVE_LETTER_Y
 28+  DA13 CD BD DA             call    setCursorPosPanel
 29+  DA16 CD 7F DA             call    printDrive
 30+  DA19
 31+  DA19                      COLOR   COLOR_FILE
 31+  DA19             >        IF ENABLE_COLOR
 31+  DA19 3E B1       >            ld a, COLOR_FILE
 31+  DA1B 32 F8 FF    >            ld (IO_COLOR), a
 31+  DA1E             >        ENDIF
 32+  DA1E
 33+  DA1E                      ; Вывод всех файлов
 34+  DA1E 21 A8 DE             ld      hl, nc_vars.fileListBuffer
 35+  DA21 11 20 06             ld      de, (P_FILE_LIST_X1 << 8) + P_FILE_LIST_Y
 36+  DA24 0E 00                ld      c,  0
 37+  DA26
 38+  DA26
 39+  DA26              printFilesLoop:
 40+  DA26                      ; Установка положения курсора
 41+  DA26 EB                   ex      de, hl
 42+  DA27 CD BD DA             call    setCursorPosPanel
 43+  DA2A EB                   ex      de, hl
 44+  DA2B
 45+  DA2B                      ; Файл существует?
 46+  DA2B 7E                   ld      a, (hl)
 47+  DA2C 3C                   inc     a
 48+  DA2D CA 66 DA             jp z,   loc_D94E
 49+  DA30
 50+  DA30 C5                   push    bc
 51+  DA31 D5                   push    de
 52+  DA32
 53+  DA32                      ; Печать имени файла
 54+  DA32 E5                   push    hl
 55+  DA33 06 08                ld      b, DIR_NAME_LENGTH  ; длина имени
 56+  DA35 CD A7 DA             call    printString2
 57+  DA38 E1                   pop     hl
 58+  DA39
 59+  DA39                      ; Курсор на столбец, где выводятся расширения
 60+  DA39 7A                   ld      a, d
 61+  DA3A C6 1B                add     a, (DIR_NAME_LENGTH + 1) * 3
 62+  DA3C 57                   ld      d, a
 63+  DA3D EB                   ex      de, hl
 64+  DA3E CD BD DA             call    setCursorPosPanel
 65+  DA41 EB                   ex      de, hl
 66+  DA42
 67+  DA42                      ; Печать расширения имени файла
 68+  DA42 E5                   push    hl
 69+  DA43 01 08 00             ld      bc, DIR_NAME_LENGTH  ; длина имени
 70+  DA46 09                   add     hl, bc    ; перемещаем hl на начло расширения
 71+  DA47 06 03                ld      b, 3      ; длина расширения
 72+  DA49 CD A7 DA             call    printString2
 73+  DA4C E1                   pop     hl
 74+  DA4D
 75+  DA4D D1                   pop     de
 76+  DA4E
 77+  DA4E                      ; Следующий файл
 78+  DA4E 01 20 00             ld      bc, DIR_DESCR_SIZE
 79+  DA51 09                   add     hl, bc
 80+  DA52
 81+  DA52 C1                   pop     bc
 82+  DA53
 83+  DA53                      ; Счетчик
 84+  DA53 0C                   inc     c
 85+  DA54
 86+  DA54                      ; Курсор на следующую строку
 87+  DA54 7B                   ld      a, e
 88+  DA55 C6 0A                add     a, 10
 89+  DA57 5F                   ld      e, a
 90+  DA58
 91+  DA58                      ; Курсор на следующий столбец
 92+  DA58 FE D4                cp      P_FILE_LIST_Y_MAX
 93+  DA5A DA 26 DA             jp c,   printFilesLoop
 94+  DA5D 7A                   ld      a, d
 95+  DA5E 11 20 36             ld      de, (P_FILE_LIST_X2 << 8) + P_FILE_LIST_Y
 96+  DA61 FE 14                cp      20
 97+  DA63 DA 26 DA             jp c,   printFilesLoop
 98+  DA66
 99+  DA66              loc_D94E:
100+  DA66                      ; Сохранение кол-ва файлов
101+  DA66 21 FF DD             ld      hl, panelA_filesCnt
102+  DA69 79                   ld      a, c
103+  DA6A CD 8A DA             call    writeBytePanel
104+  DA6D
105+  DA6D                      ; Если курсор больше максимума
106+  DA6D 21 01 DE             ld      hl, panelA_curFile
107+  DA70 CD 9B DA             call    readBytePanel
108+  DA73 B9                   cp      c
109+  DA74 D8                   ret c
110+  DA75
111+  DA75                      ; То изменить на максимум
112+  DA75 3D                   dec     a
113+  DA76 F8                   ret m
114+  DA77 C3 8A DA             jp      writeBytePanel
115+  DA7A
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFilePanel.inc
116   DA7A                  INCLUDE "printCurDrive.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printCurDrive.inc
  1+  DA7A              ;----------------------------------------------------------------------------
  2+  DA7A              ; MXOS NC.COM
  3+  DA7A              ; Вывод текущего накопителя
  4+  DA7A              ;
  5+  DA7A              ; 2013-12-18 Дизассемблировано vinxru
  6+  DA7A              ;----------------------------------------------------------------------------
  7+  DA7A
  8+  DA7A              printCurDrive:    ; Узнаем активное устройство
  9+  DA7A 1E 02                    ld    e, 2
 10+  DA7C CD 42 C8                 call  bios_fileGetSetDrive
 11+  DA7F
 12+  DA7F              printDrive: ; Выводим его букву на экран
 13+  DA7F C6 41                    add   a, 'A'
 14+  DA81 4F                       ld    c, a
 15+  DA82 CD 09 C8                 call  bios_printChar
 16+  DA85
 17+  DA85                          ; Выводим ':'
 18+  DA85 0E 3A                    ld    c, ':'
 19+  DA87 C3 09 C8                 jp    bios_printChar
 20+  DA8A
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printCurDrive.inc
117   DA8A                  INCLUDE "rwBytePanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\rwBytePanel.inc
  1+  DA8A              ;----------------------------------------------------------------------------
  2+  DA8A              ; MXOS NC.COM
  3+  DA8A              ; Реализация индексной адресации
  4+  DA8A              ;
  5+  DA8A              ; 2013-12-18 Дизассемблировано vinxru
  6+  DA8A              ;----------------------------------------------------------------------------
  7+  DA8A
  8+  DA8A              ; [hl + activePanel] = a
  9+  DA8A
 10+  DA8A C5           writeBytePanel:   push  bc
 11+  DA8B E5                       push  hl
 12+  DA8C F5                       push  af
 13+  DA8D 4F                       ld    c, a
 14+  DA8E 3A FA DD                 ld    a, (activePanel)
 15+  DA91 A7                       and   a
 16+  DA92 CA 96 DA                 jp z, loc_D97E
 17+  DA95 23                       inc   hl
 18+  DA96 71           loc_D97E:   ld  (hl), c
 19+  DA97 F1                       pop   af
 20+  DA98 E1                       pop   hl
 21+  DA99 C1                       pop   bc
 22+  DA9A C9                       ret
 23+  DA9B
 24+  DA9B              ; a = [hl + activePanel]
 25+  DA9B
 26+  DA9B E5           readBytePanel:    push  hl
 27+  DA9C 3A FA DD                 ld    a, (activePanel)
 28+  DA9F A7                       and   a
 29+  DAA0 CA A4 DA                 jp z, loc_D98C
 30+  DAA3 23                       inc   hl
 31+  DAA4 7E           loc_D98C:   ld  a, (hl)
 32+  DAA5 E1                       pop   hl
 33+  DAA6 C9                       ret
 34+  DAA7
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\rwBytePanel.inc
118   DAA7                  INCLUDE "printFileName.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFileName.inc
  1+  DAA7              ;----------------------------------------------------------------------------
  2+  DAA7              ; MXOS NC.COM
  3+  DAA7              ; Вывод имени файла в обычном виде с точкой
  4+  DAA7              ;
  5+  DAA7              ; вход:
  6+  DAA7              ;   hl - адрес дескриптора файла
  7+  DAA7              ;
  8+  DAA7              ; выход:
  9+  DAA7              ;   hl - указывает на следующее за расширением поле в дескрипторе файла
 10+  DAA7              ;
 11+  DAA7              ; 2022-01-31 SpaceEngineer
 12+  DAA7              ;----------------------------------------------------------------------------
 13+  DAA7
 14+  DAA7              ;printFileName:
 15+  DAA7              ;        push  bc
 16+  DAA7              ;        ld    c, ' '               ; прерываем печать имени по пробелу
 17+  DAA7              ;        ld    b, DIR_NAME_LENGTH   ; длина имени
 18+  DAA7              ;        call  printString2
 19+  DAA7              ;        ld    c, '.'
 20+  DAA7              ;        call  bios_printChar       ; печатаем точку
 21+  DAA7              ;        ld    b, 3                 ; длина расширения
 22+  DAA7              ;        call  printString2
 23+  DAA7              ;        pop   bc
 24+  DAA7              ;        ret
 25+  DAA7              ;
 26+  DAA7
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printFileName.inc
119   DAA7                  INCLUDE "printString2.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printString2.inc
  1+  DAA7              ;----------------------------------------------------------------------------
  2+  DAA7              ; MXOS NC.COM
  3+  DAA7              ; Вывод строки по адресу hl длиной b или до терминатора.
  4+  DAA7              ; Выводит только реальные символы, чтобы не портить экран при
  5+  DAA7              ; неотформатированном или повреждённом диске.
  6+  DAA7              ;
  7+  DAA7              ; вход:
  8+  DAA7              ;   hl - адрес строки
  9+  DAA7              ;   b  - макс. длина печати
 10+  DAA7              ;   c  - терминатор
 11+  DAA7              ;
 12+  DAA7              ; 2022-01-31 SpaceEngineer
 13+  DAA7              ;----------------------------------------------------------------------------
 14+  DAA7
 15+  DAA7              printString2:
 16+  DAA7 F5               push    af
 17+  DAA8 D5               push    de
 18+  DAA9
 19+  DAA9              printString2loop:
 20+  DAA9 7E               ld      a, (hl)
 21+  DAAA B9               cp      c
 22+  DAAB DA BA DA         jp c,   printString2exit
 23+  DAAE
 24+  DAAE C5               push    bc
 25+  DAAF E5               push    hl
 26+  DAB0
 27+  DAB0 CD 69 C8         call    bios_printCharReal
 28+  DAB3
 29+  DAB3 E1               pop     hl
 30+  DAB4 C1               pop     bc
 31+  DAB5
 32+  DAB5 23               inc     hl
 33+  DAB6 05               dec     b
 34+  DAB7 C2 A9 DA         jp nz,  printString2loop
 35+  DABA
 36+  DABA              printString2exit:
 37+  DABA D1               pop     de
 38+  DABB F1               pop     af
 39+  DABC C9               ret
 40+  DABD
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\printString2.inc
120   DABD                  INCLUDE "setCursorPosPanel.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\setCursorPosPanel.inc
  1+  DABD              ;----------------------------------------------------------------------------
  2+  DABD              ; MXOS NC.COM
  3+  DABD              ; Установка положения курсора с учетом активной панели
  4+  DABD              ; вход:
  5+  DABD              ;   hl - координаты курсора на панели
  6+  DABD              ;
  7+  DABD              ; 2013-12-18 Дизассемблировано vinxru
  8+  DABD              ;----------------------------------------------------------------------------
  9+  DABD
 10+  DABD              setCursorPosPanel:
 11+  DABD                          ; Сохраняем регистры
 12+  DABD E5                       push  hl
 13+  DABE F5                       push  af
 14+  DABF
 15+  DABF 3A FA DD                 ld    a, (activePanel)
 16+  DAC2 A7                       and   a
 17+  DAC3 CA C8 DA                 jp z, loc_D9BA
 18+  DAC6 3E 60                    ld    a, 96       ; Половина экрана
 19+  DAC8 84           loc_D9BA:   add   a, h
 20+  DAC9 67                       ld    h, a
 21+  DACA 22 FC 8F                 ld    (bios_vars.cursorY), hl
 22+  DACD
 23+  DACD                          ; Восстанавливаем регистры
 24+  DACD F1                       pop   af
 25+  DACE E1                       pop   hl
 26+  DACF C9                       ret
 27+  DAD0
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\setCursorPosPanel.inc
121   DAD0                  INCLUDE "draw.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\draw.inc
  1+  DAD0              ;----------------------------------------------------------------------------
  2+  DAD0              ; MXOS NC.COM
  3+  DAD0              ; Рисование окошек
  4+  DAD0              ;
  5+  DAD0              ; 2013-12-18 Дизассемблировано vinxru
  6+  DAD0              ;----------------------------------------------------------------------------
  7+  DAD0
  8+  DAD0              draw:       ; Читаем 5 байт из hl в a, hl, c, b.
  9+  DAD0                          ; При этом de = hl+5
 10+  DAD0 7E                       ld  a, (hl)
 11+  DAD1 23                       inc   hl
 12+  DAD2 5E                       ld  e, (hl)
 13+  DAD3 23                       inc   hl
 14+  DAD4 56                       ld  d, (hl)
 15+  DAD5 23                       inc   hl
 16+  DAD6 4E                       ld  c, (hl)
 17+  DAD7 23                       inc   hl
 18+  DAD8 46                       ld  b, (hl)
 19+  DAD9 23                       inc   hl
 20+  DADA EB                       ex    de, hl
 21+  DADB
 22+  DADB                          ; Если a=0 (первый байт), то выйти
 23+  DADB A7                       and   a
 24+  DADC C8                       ret Z
 25+  DADD
 26+  DADD                          ; Если не установлен 7-ой бит и активная панель правая, то X += 192
 27+  DADD FA E3 DA                 jp M, draw_0
 28+  DAE0 CD 0F DB                 call  activePanelPos
 29+  DAE3              draw_0:
 30+  DAE3
 31+  DAE3                          ; Если a&0xF==3, то заполнить c байт памяти байтом b
 32+  DAE3 E6 0F                    and   0Fh
 33+  DAE5 FE 03                    cp    3
 34+  DAE7 CA F6 DA                 jp z, draw3
 35+  DAEA
 36+  DAEA                          ; Если a&0xF==1, то нарисовать веритикальную линию
 37+  DAEA                          ; b-первый байт, c-средняя длина, *de++ - последний байт
 38+  DAEA FE 01                    cp    1
 39+  DAEC CA FD DA                 jp z, draw1
 40+  DAEF
 41+  DAEF                          ; Нарисовать окно
 42+  DAEF CD 1D DB                 call  draw_window
 43+  DAF2
 44+  DAF2              draw_next:  ; hl=de и следующий цикл
 45+  DAF2 EB                       ex    de, hl
 46+  DAF3 C3 D0 DA                 jp    draw
 47+  DAF6
 48+  DAF6              ; ---------------------------------------------------------------------------
 49+  DAF6              ; Заполнить c байт памяти байтом b
 50+  DAF6
 51+  DAF6 78           draw3:            ld    a, b
 52+  DAF7 CD 52 DB                 call  memset_hl_a_c
 53+  DAFA C3 F2 DA                 jp    draw_next
 54+  DAFD
 55+  DAFD              ; ---------------------------------------------------------------------------
 56+  DAFD              ; Линия hl-адрес, b-первый байт, c-средняя длина, *de++ - последний байт
 57+  DAFD
 58+  DAFD              draw1:            ; *hl++ |= b
 59+  DAFD 78                       ld    a, b
 60+  DAFE B6                       or    (hl)
 61+  DAFF 77                       ld  (hl), a
 62+  DB00 24                       inc   h
 63+  DB01
 64+  DB01              loc_D9F3:
 65+  DB01 36 FF                ld  (hl), 0FFh
 66+  DB03 24                       inc   h
 67+  DB04 0D                       dec   c
 68+  DB05 C2 01 DB                 jp nz,      loc_D9F3
 69+  DB08
 70+  DB08                          ; hl |= *de++
 71+  DB08 1A                       ld    a, (de)
 72+  DB09 13                       inc   de
 73+  DB0A B6                       or    (hl)
 74+  DB0B 77                       ld  (hl), a
 75+  DB0C
 76+  DB0C C3 F2 DA                 jp    draw_next
 77+  DB0F
 78+  DB0F              ; ---------------------------------------------------------------------------
 79+  DB0F              ; Если активная правая панель, сдвинуть адрес на пол экрана
 80+  DB0F
 81+  DB0F              activePanelPos:
 82+  DB0F F5                   push      af
 83+  DB10 3A FA DD                 ld    a, (activePanel)
 84+  DB13 A7                       and   a
 85+  DB14 CA 19 DB                 jp z, loc_DA0B
 86+  DB17 3E 18                    ld    a, 24
 87+  DB19 84           loc_DA0B:   add   a, h
 88+  DB1A 67                       ld    h, a
 89+  DB1B F1                       pop   af
 90+  DB1C C9                       ret
 91+  DB1D
 92+  DB1D              ; ---------------------------------------------------------------------------
 93+  DB1D              ; Рисуем окно (b=ширина-2, с=высота-6)
 94+  DB1D
 95+  DB1D              draw_window:      ; Если h - 90h + b >= 0x2F, то есть X + b + 2 > ширина экрана, то выйти
 96+  DB1D 7C                       ld    a, h
 97+  DB1E D6 90                    sub   90h
 98+  DB20 80                       add   a, b
 99+  DB21 FE 2F                    cp    2Fh
100+  DB23 D0                       ret nc
101+  DB24
102+  DB24                          ; Сохранить регистры
103+  DB24 E5                       push  hl
104+  DB25 C5                       push  bc
105+  DB26 D5                       push  de
106+  DB27
107+  DB27                          ; Линия
108+  DB27 11 9D DD                 ld    de, v_window
109+  DB2A CD 41 DB                 call  line313
110+  DB2D
111+  DB2D                          ; Повтор b раз
112+  DB2D D5           draw_window_2:    push  de
113+  DB2E CD 41 DB                 call  line313
114+  DB31 05                       dec   b
115+  DB32 CA 39 DB                 jp z, draw_window_3
116+  DB35 D1                       pop   de
117+  DB36 C3 2D DB                 jp    draw_window_2
118+  DB39
119+  DB39              ; ---------------------------------------------------------------------------
120+  DB39
121+  DB39              draw_window_3:
122+  DB39 F1                   pop af
123+  DB3A
124+  DB3A                          ; Линия
125+  DB3A CD 41 DB                 call  line313
126+  DB3D
127+  DB3D                          ; Восстановить регистры и выйти
128+  DB3D D1                       pop   de
129+  DB3E C1                       pop   bc
130+  DB3F E1                       pop   hl
131+  DB40 C9                       ret
132+  DB41
133+  DB41              ; ---------------------------------------------------------------------------
134+  DB41              ; Вертикальная линия. Задается три верхних байта, заполнитель и три нижних
135+  DB41
136+  DB41              line313:    ; Сохраняем регистры
137+  DB41 C5                       push  bc
138+  DB42 E5                       push  hl
139+  DB43
140+  DB43                          ; Копируем 3 байта (сверху-вниз)
141+  DB43 CD 59 DB                 call  memcpy_hl_de_3
142+  DB46
143+  DB46                          ; 4 ый байт повторяем С-раз (сверху-вниз)
144+  DB46 1A                       ld    a, (de)
145+  DB47 CD 52 DB                 call  memset_hl_a_c
146+  DB4A 13                       inc   de
147+  DB4B
148+  DB4B                          ; Копируем 3 байта (сверху-вниз)
149+  DB4B CD 59 DB                 call  memcpy_hl_de_3
150+  DB4E
151+  DB4E                          ; Восстаналиваем регистры
152+  DB4E E1                       pop   hl
153+  DB4F C1                       pop   bc
154+  DB50
155+  DB50                          ; Вправо
156+  DB50 24                       inc   h
157+  DB51 C9                       ret
158+  DB52
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\draw.inc
122   DB52                  INCLUDE "memset_hl_a_c.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\memset_hl_a_c.inc
  1+  DB52              ;----------------------------------------------------------------------------
  2+  DB52              ; MXOS NC.COM
  3+  DB52              ; Заполнение памяти по адресу hl байтом a длинной c
  4+  DB52              ;
  5+  DB52              ; 2013-12-18 Дизассемблировано vinxru
  6+  DB52              ;----------------------------------------------------------------------------
  7+  DB52
  8+  DB52              memset_hl_a_c:
  9+  DB52 77                   ld      (hl), a
 10+  DB53 23                   inc     hl
 11+  DB54 0D                   dec     c
 12+  DB55 C2 52 DB             jp nz,  memset_hl_a_c
 13+  DB58 C9                   ret
 14+  DB59
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\memset_hl_a_c.inc
123   DB59                  INCLUDE "memcpy_hl_de_3.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\memcpy_hl_de_3.inc
  1+  DB59              ;----------------------------------------------------------------------------
  2+  DB59              ; MXOS NC.COM
  3+  DB59              ; Копирвоание 3-х байт из адреса de в адрес hl
  4+  DB59              ;
  5+  DB59              ; 2013-12-18 Дизассемблировано vinxru
  6+  DB59              ;----------------------------------------------------------------------------
  7+  DB59
  8+  DB59              memcpy_hl_de_3:
  9+  DB59 1A                   ld    a, (de)
 10+  DB5A 77                   ld    (hl), a
 11+  DB5B 23                   inc   hl
 12+  DB5C 13                   inc   de
 13+  DB5D
 14+  DB5D 1A                   ld    a, (de)
 15+  DB5E 77                   ld    (hl), a
 16+  DB5F 23                   inc   hl
 17+  DB60 13                   inc   de
 18+  DB61
 19+  DB61 1A                   ld    a, (de)
 20+  DB62 77                   ld    (hl), a
 21+  DB63 23                   inc   hl
 22+  DB64 13                   inc   de
 23+  DB65
 24+  DB65 C9                   ret
 25+  DB66
 26+  DB66              ;----------------------------------------------------------------------------
 27+  DB66              ; MXOS NC.COM
 28+  DB66              ; hl = hl - de
 29+  DB66              ;
 30+  DB66              ; SpaceEngineer
 31+  DB66              ;----------------------------------------------------------------------------
 32+  DB66
 33+  DB66              ;sub_hl_de
 34+  DB66              ;        ld    a, l
 35+  DB66              ;        sub   e
 36+  DB66              ;        ld    l, a
 37+  DB66              ;        ld    a, h
 38+  DB66              ;        sbc   d
 39+  DB66              ;        ld    h, a
 40+  DB66              ;        ret
 41+  DB66
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\memcpy_hl_de_3.inc
124   DB66                  INCLUDE "compactName.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\compactName.inc
  1+  DB66              ;----------------------------------------------------------------------------
  2+  DB66              ; MXOS NC.COM
  3+  DB66              ; Убрать из имени пробелы
  4+  DB66              ;
  5+  DB66              ; вход:
  6+  DB66              ;   hl - откуда
  7+  DB66              ;   de - куда
  8+  DB66              ;
  9+  DB66              ; сохраняемые регистры:
 10+  DB66              ;   hl, bc
 11+  DB66              ;
 12+  DB66              ; 2013-12-18 Дизассемблировано vinxru
 13+  DB66              ;----------------------------------------------------------------------------
 14+  DB66
 15+  DB66              compactName:
 16+  DB66                          ; Сохраняем регистры
 17+  DB66 E5                       push    hl
 18+  DB67 C5                       push    bc
 19+  DB68
 20+  DB68                          ; Копируем до пробела, но не более DIR_NAME_LENGTH букв
 21+  DB68 01 08 00                 ld      bc, DIR_NAME_LENGTH
 22+  DB6B 7E           compactName_1:      ld  a, (hl)
 23+  DB6C FE 20                    cp      ' '
 24+  DB6E CA 78 DB                 jp z,   compactName_2
 25+  DB71 12                       ld      (de),a
 26+  DB72 23                       inc     hl
 27+  DB73 13                       inc     de
 28+  DB74 0D                       dec     c
 29+  DB75 C2 6B DB                 jp nz,  compactName_1
 30+  DB78
 31+  DB78              compactName_2:
 32+  DB78                          ; Пропущенные символы исходной строки
 33+  DB78 09                       add     hl, bc
 34+  DB79
 35+  DB79                          ; Точка
 36+  DB79 3E 2E                    ld      a, '.'
 37+  DB7B 12                       ld      (de),a
 38+  DB7C 13                       inc     de
 39+  DB7D
 40+  DB7D                          ; Копируем до пробела, но не более 3 букв
 41+  DB7D 0E 03                    ld      c, 3
 42+  DB7F              compactName_3:
 43+  DB7F 7E                       ld      a, (hl)
 44+  DB80 FE 20                    cp      ' '
 45+  DB82 CA 8C DB                 jp z,   compactName_4
 46+  DB85 12                       ld      (de),a
 47+  DB86 23                       inc     hl
 48+  DB87 13                       inc     de
 49+  DB88 0D                       dec     c
 50+  DB89 C2 7F DB                 jp nz,  compactName_3
 51+  DB8C
 52+  DB8C              compactName_4:
 53+  DB8C EB                       ex      de, hl
 54+  DB8D F5                       push    af
 55+  DB8E
 56+  DB8E                          ; Если последний символ '.', то удаляем его
 57+  DB8E 2B                       dec     hl
 58+  DB8F 7E                       ld      a, (hl)
 59+  DB90 FE 2E                    cp      '.'
 60+  DB92 CA 96 DB                 jp z,   compactName_5
 61+  DB95 23                       inc     hl
 62+  DB96
 63+  DB96              compactName_5:
 64+  DB96                          ; Добавляем пробел и конец строки
 65+  DB96 36 20                    ld      (hl), ' '
 66+  DB98 23                       inc     hl
 67+  DB99 36 0D                    ld      (hl), 0Dh
 68+  DB9B 23                       inc     hl
 69+  DB9C 36 00                    ld      (hl), 0
 70+  DB9E
 71+  DB9E                          ; Результат в de
 72+  DB9E EB                       ex    de, hl
 73+  DB9F
 74+  DB9F                          ; Восстаналиваем регистры и выходим
 75+  DB9F F1                       pop   af
 76+  DBA0 C1                       pop   bc
 77+  DBA1 E1                       pop   hl
 78+  DBA2 C9                       ret
 79+  DBA3
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\compactName.inc
125   DBA3                  INCLUDE "input.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\input.inc
  1+  DBA3              ;----------------------------------------------------------------------------
  2+  DBA3              ; MXOS NC.COM
  3+  DBA3              ; Ввод строки
  4+  DBA3              ;
  5+  DBA3              ; 2013-12-18 Дизассемблировано vinxru
  6+  DBA3              ;----------------------------------------------------------------------------
  7+  DBA3
  8+  DBA3              input:      ; Вывод строки
  9+  DBA3 E5                       push    hl
 10+  DBA4 21 68 DE                 ld      hl, nc_vars.input
 11+  DBA7 CD 96 D2                 call    printStringInv
 12+  DBAA E1                       pop     hl
 13+  DBAB
 14+  DBAB                          ; Включаем инверсию
 15+  DBAB 3E 01                    ld      a, 1
 16+  DBAD 32 FA 8F                 ld      (bios_vars.inverse),a
 17+  DBB0
 18+  DBB0              input_loop: ; Ввод символа
 19+  DBB0 CD 03 C8                 call  bios_getch
 20+  DBB3
 21+  DBB3                          ; Enter или ESC
 22+  DBB3 FE 0D                    cp      0Dh
 23+  DBB5 CA E8 DB                 jp z,   input_exit
 24+  DBB8 FE 1B                    cp      1Bh
 25+  DBBA CA E8 DB                 jp z,   input_exit
 26+  DBBD
 27+  DBBD                          ; Если служебная клавиша или пробел, то пропускаем
 28+  DBBD FE 21                    cp      21h
 29+  DBBF DA B0 DB                 jp c,   input_loop
 30+  DBC2
 31+  DBC2                          ; Сохраняем для вывода
 32+  DBC2 4F                       ld      c, a
 33+  DBC3
 34+  DBC3                          ; Помещаем символ в буфер
 35+  DBC3 12                       ld      (de),a
 36+  DBC4
 37+  DBC4                          ; Удаление
 38+  DBC4 FE 7F                    cp      7Fh
 39+  DBC6 CA D6 DB                 jp z,   input_bkspc
 40+  DBC9
 41+  DBC9                          ; Если переполнение
 42+  DBC9 3E 7F                    ld      a, (nc_vars.input + P_INPUT_WIDTH) & 0FFh  ; a = младший байт адреса пследнего байта буфера
 43+  DBCB BB                       cp      e
 44+  DBCC CA B0 DB                 jp z,   input_loop
 45+  DBCF
 46+  DBCF                          ; Вывод символа на экран
 47+  DBCF CD 09 C8                 call    bios_printChar
 48+  DBD2
 49+  DBD2                          ; Увеличение длины строки
 50+  DBD2 13                       inc     de
 51+  DBD3
 52+  DBD3 C3 B0 DB                 jp      input_loop
 53+  DBD6
 54+  DBD6              ; ---------------------------------------------------------------------------
 55+  DBD6
 56+  DBD6              input_bkspc:
 57+  DBD6                          ; Если это начало строки, выходим
 58+  DBD6 3E 68                    ld      a, nc_vars.input & 0FFh
 59+  DBD8 BB                       cp      e
 60+  DBD9 CA B0 DB                 jp z,   input_loop
 61+  DBDC
 62+  DBDC                          ; Уменьшаем длину строки
 63+  DBDC 1D                       dec     e
 64+  DBDD
 65+  DBDD                          ; Стираем символ с экрана
 66+  DBDD E5                       push    hl
 67+  DBDE 21 B6 DC                 ld      hl, asc_DC17
 68+  DBE1 CD 18 C8                 call    bios_printString
 69+  DBE4 E1                       pop     hl
 70+  DBE5
 71+  DBE5 C3 B0 DB                 jp      input_loop
 72+  DBE8
 73+  DBE8              ; ---------------------------------------------------------------------------
 74+  DBE8
 75+  DBE8              input_exit:
 76+  DBE8                          ; Сохраняем ESC или Enter для выхода
 77+  DBE8 4F                       ld      c, a
 78+  DBE9
 79+  DBE9                          ; Записываем в конец строки 0Dh, 0
 80+  DBE9 EB                       ex      de, hl
 81+  DBEA 36 0D                    ld      (hl), 0Dh
 82+  DBEC 23                       inc     hl
 83+  DBED AF                       xor     a
 84+  DBEE 77                       ld      (hl), a
 85+  DBEF
 86+  DBEF                          ; Восстанавливаем инверсию
 87+  DBEF 32 FA 8F                 ld      (bios_vars.inverse),a
 88+  DBF2
 89+  DBF2                          ; Выход
 90+  DBF2 79                       ld      a, c
 91+  DBF3 C9                       ret
 92+  DBF4
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\input.inc
126   DBF4
127   DBF4              ;---------------------------------------------------------------------------
128   DBF4              ; Константы и переменные
129   DBF4              ;---------------------------------------------------------------------------
130   DBF4
131   DBF4 4E 41 4D 45  aNameName:          DB "NAME",18h,18h,18h,18h,18h,18h,18h,18h,18h,18h,18h,18h,"NAME",0
131   DBF8 18 18 18 18
131   DBFC 18 18 18 18
131   DC00 18 18 18 18
131   DC04 4E 41 4D 45
131   DC08 00
132   DC09                  IF SHOW_F9
133   DC09 ~            aF1LeftF2RighF3:    DB "F1 L F2 R F3 INF F4 EDIT F5 COPY F6 RMOV F7 LOAD F8 DEL F9 SAVE",0
134   DC09                  ELSE
135   DC09 46 31 20 4C  aF1LeftF2RighF3:    DB "F1 LEFT F2 RIGH F3 INFO F4 EDIT F5 COPY F6 RMOV F7 LOAD F8 DEL",0
135   DC0D 45 46 54 20
135   DC11 46 32 20 52
135   DC15 49 47 48 20
135   DC19 46 33 20 49
135   DC1D 4E 46 4F 20
135   DC21 46 34 20 45
135   DC25 44 49 54 20
135   DC29 46 35 20 43
135   DC2D 4F 50 59 20
135   DC31 46 36 20 52
135   DC35 4D 4F 56 20
135   DC39 46 37 20 4C
135   DC3D 4F 41 44 20
135   DC41 46 38 20 44
135   DC45 45 4C 00
136   DC48                  ENDIF
137   DC48 43 4F 4D 4D  aCommanderVer:      DB "COMMANDER VERSION 1.6",0
137   DC4C 41 4E 44 45
137   DC50 52 20 56 45
137   DC54 52 53 49 4F
137   DC58 4E 20 31 2E
137   DC5C 36 00
138   DC5E 28 43 29 20  aCOmsk1992:         DB "(C) OMSK 1992",0
138   DC62 4F 4D 53 4B
138   DC66 20 31 39 39
138   DC6A 32 00
139   DC6C 46 49 4C 45  aFileIsReanOnly:    DB "FILE IS READ ONLY!",0
139   DC70 20 49 53 20
139   DC74 52 45 41 44
139   DC78 20 4F 4E 4C
139   DC7C 59 21 00
140   DC7F 41 20 20 20  aABCD:              DB "A   B   C   D",0
140   DC83 42 20 20 20
140   DC87 43 20 20 20
140   DC8B 44 00
141   DC8D 45 20 20 20  aEFGH:              DB "E   F   G   H",0
141   DC91 46 20 20 20
141   DC95 47 20 20 20
141   DC99 48 00
142   DC9B 43 48 4F 4F  aChooseDrive:       DB "CHOOSE DRIVE:",0
142   DC9F 53 45 20 44
142   DCA3 52 49 56 45
142   DCA7 3A 00
143   DCA9 44 45 4C 45  aDeleteFrom:        DB "DELETE FROM ",0
143   DCAD 54 45 20 46
143   DCB1 52 4F 4D 20
143   DCB5 00
144   DCB6 08 20 08 00  asc_DC17:           DB 8, ' ',8, 0
145   DCBA 43 4F 50 59  aCopyFromTo:        DB "COPY FROM    TO",8,8,8,8,8, 0
145   DCBE 20 46 52 4F
145   DCC2 4D 20 20 20
145   DCC6 20 54 4F 08
145   DCCA 08 08 08 08
145   DCCE 00
146   DCCF 43 41 4E 27  aCantCreateFile:    DB "CAN",39,"T CREATE FILE!",0
146   DCD3 54 20 43 52
146   DCD7 45 41 54 45
146   DCDB 20 46 49 4C
146   DCDF 45 21 00
147   DCE2 52 45 4E 41  aRemoveFromTo:      DB "RENAME/MOVE FROM    TO",8,8,8,8,8, 0
147   DCE6 4D 45 2F 4D
147   DCEA 4F 56 45 20
147   DCEE 46 52 4F 4D
147   DCF2 20 20 20 20
147   DCF6 54 4F 08 08
147   DCFA 08 08 08 00
148   DCFE 20 42 59 54  aBytesFreeOnDrv:    DB " BYTES FREE ON DRIVE ",0
148   DD02 45 53 20 46
148   DD06 52 45 45 20
148   DD0A 4F 4E 20 44
148   DD0E 52 49 56 45
148   DD12 20 00
149   DD14 20 46 49 4C  aFilesUse:          DB " FILES USE ",0
149   DD18 45 53 20 55
149   DD1C 53 45 20 00
150   DD20 42 59 54 45  aBytesIn:           DB "BYTES IN ",0
150   DD24 53 20 49 4E
150   DD28 20 00
151   DD2A 20 54 4F 54  aTotalBytes:        DB " TOTAL BYTES",0
151   DD2E 41 4C 20 42
151   DD32 59 54 45 53
151   DD36 00
152   DD37 4F 4E 20 44  aOnDrive:           DB "ON DRIVE ",0
152   DD3B 52 49 56 45
152   DD3F 20 00
153   DD41 53 41 56 45  aSaveFromToTape:    DB "SAVE FROM    TO TAPE",8,8,8,8,8,8,8,8,8,8, 0
153   DD45 20 46 52 4F
153   DD49 4D 20 20 20
153   DD4D 20 54 4F 20
153   DD51 54 41 50 45
153   DD55 08 08 08 08
153   DD59 08 08 08 08
153   DD5D 08 08 00
154   DD60 53 41 56 49  aSavingToTape:      DB "SAVING TO TAPE",0
154   DD64 4E 47 20 54
154   DD68 4F 20 54 41
154   DD6C 50 45 00
155   DD6F 4C 4F 41 44  aLoadingFromTapeTo: DB "LOADING FROM TAPE TO ",0
155   DD73 49 4E 47 20
155   DD77 46 52 4F 4D
155   DD7B 20 54 41 50
155   DD7F 45 20 54 4F
155   DD83 20 00
156   DD85 45 52 52 4F  aErrorLoadingTa:    DB "ERROR LOADING FROM TAPE",0
156   DD89 52 20 4C 4F
156   DD8D 41 44 49 4E
156   DD91 47 20 46 52
156   DD95 4F 4D 20 54
156   DD99 41 50 45 00
157   DD9D
158   DD9D              ; Описания окон
159   DD9D
160   DD9D 7F           v_window:   DB 01111111b            ; Верхний левый угол
161   DD9E 40                       DB 01000000b
162   DD9F 5F                       DB 01011111b
163   DDA0 50                       DB 01010000b            ; Левый край
164   DDA1 5F                       DB 01011111b            ; Нижний левый угол
165   DDA2 40                       DB 01000000b
166   DDA3 7F                       DB 01111111b
167   DDA4
168   DDA4 FF                       DB 11111111b            ; Верх окна
169   DDA5 00                       DB 00000000b
170   DDA6 FF                       DB 11111111b
171   DDA7
172   DDA7 00                       DB 00000000b            ; Содержимое окна
173   DDA8
174   DDA8 FF                       DB 11111111b            ; Низ окна
175   DDA9 00                       DB 00000000b
176   DDAA FF                       DB 11111111b
177   DDAB
178   DDAB FE                       DB 11111110b            ; Правый верхний угол
179   DDAC 02                       DB 00000010b
180   DDAD FA                       DB 11111010b
181   DDAE 0A                       DB 00001010b            ; Правая граница
182   DDAF FA                       DB 11111010b            ; Правый нижний угол
183   DDB0 02                       DB 00000010b
184   DDB1 FE                       DB 11111110b
185   DDB2
186   DDB2                          MACRO G_WINDOW A,X,Y,W,H
187   DDB2 ~                            DB A|2, Y, 90h+(X>>3), H-6, (W>>3)-2
188   DDB2                          ENDM
189   DDB2
190   DDB2                          MACRO G_LINE A,X,Y,W
191   DDB2 ~                            DB A|1, Y, 90h+(X>>3), (((X&7)+W+7)>>3)-2, 0FFh>>(X&7), (0FF00h>>((W+X)&7)) & 0FFh
192   DDB2                          ENDM
193   DDB2
194   DDB2                          MACRO G_VLINE A,X,Y,H
195   DDB2 ~                            DB A|3, Y, 90h+(X>>3), H, 80h>>(X&7)
196   DDB2                          ENDM
197   DDB2
198   DDB2              g_filePanel:
199   DDB2                          G_WINDOW 0, 0, 0, 192, 230        ; 2, 0, 90h, 0E0h, 16h
199   DDB2 02 00 90 E0 >                DB 0|2, 0, 90h+(0>>3), 230-6, (192>>3)-2
199   DDB6 16          >
200   DDB7                          G_LINE   0, 4, 208, 184           ; 1, 0D0h, 90h, 16h, 0Fh, 0F0h
200   DDB7 01 D0 90 16 >                DB 0|1, 208, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
200   DDBB 0F F0       >
201   DDBD                          G_VLINE  0, 96, 3, 205            ; 3, ?, 9Ch, 0CDh, 80h
201   DDBD 03 03 9C CD >                DB 0|3, 3, 90h+(96>>3), 205, 80h>>(96&7)
201   DDC1 80          >
202   DDC2 00                       DB 0
203   DDC3
204   DDC3              g_infoPanel:
205   DDC3                          G_WINDOW 0, 0, 0, 192, 230        ; 2, 0, 90h, 0E0h, 16h
205   DDC3 02 00 90 E0 >                DB 0|2, 0, 90h+(0>>3), 230-6, (192>>3)-2
205   DDC7 16          >
206   DDC8                          G_LINE   0, 4, 31, 184            ; 1, 1Fh, 90h, 16h, 0Fh, 0F0h
206   DDC8 01 1F 90 16 >                DB 0|1, 31, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
206   DDCC 0F F0       >
207   DDCE                          G_LINE   0, 4, 112, 184           ; 1, 70h, 90h, 16h, 0Fh, 0F0h
207   DDCE 01 70 90 16 >                DB 0|1, 112, 90h+(4>>3), (((4&7)+184+7)>>3)-2, 0FFh>>(4&7), (0FF00h>>((184+4)&7)) & 0FFh
207   DDD2 0F F0       >
208   DDD4 00                       DB 0
209   DDD5
210   DDD5              g_chooseDrive:
211   DDD5                          G_WINDOW 0, 40, 85, 112, 50       ; 2, 55h, 95h, 02Ch, 0Ch
211   DDD5 02 55 95 2C >                DB 0|2, 85, 90h+(40>>3), 50-6, (112>>3)-2
211   DDD9 0C          >
212   DDDA                          G_LINE   0, 44, 103, 104          ; 1, 67h, 95h, 0Ch, 0Fh, 0F0h
212   DDDA 01 67 95 0C >                DB 0|1, 103, 90h+(44>>3), (((44&7)+104+7)>>3)-2, 0FFh>>(44&7), (0FF00h>>((104+44)&7)) & 0FFh
212   DDDE 0F F0       >
213   DDE0 00                       DB 0
214   DDE1
215   DDE1              g_window1:
216   DDE1                          G_WINDOW 80h, 112, 80, 160, 37    ; 82h, 50h, 9Eh, 1Fh, 12h
216   DDE1 82 50 9E 1F >                DB 80h|2, 80, 90h+(112>>3), 37-6, (160>>3)-2
216   DDE5 12          >
217   DDE6                          G_LINE   80h, 116, 98, 152        ; 81h, 62h, 9Eh, 12h, 0Fh, 0F0h
217   DDE6 81 62 9E 12 >                DB 80h|1, 98, 90h+(116>>3), (((116&7)+152+7)>>3)-2, 0FFh>>(116&7), (0FF00h>>((152+116)&7)) & 0FFh
217   DDEA 0F F0       >
218   DDEC 00                       DB 0
219   DDED
220   DDED              g_window2:
221   DDED                          G_WINDOW 80h, 104, 114, 176, 37   ; 82h, 72h, 9Dh, 1Fh, 14h
221   DDED 82 72 9D 1F >                DB 80h|2, 114, 90h+(104>>3), 37-6, (176>>3)-2
221   DDF1 14          >
222   DDF2                          G_LINE   80h, 108, 132, 168       ; 81h, 84h, 9Dh, 14h, 0Fh, 0F0h
222   DDF2 81 84 9D 14 >                DB 80h|1, 132, 90h+(108>>3), (((108&7)+168+7)>>3)-2, 0FFh>>(108&7), (0FF00h>>((168+108)&7)) & 0FFh
222   DDF6 0F F0       >
223   DDF8 00                       DB 0
224   DDF9
225   DDF9 5A           initState:        DB 5Ah
226   DDFA 00           activePanel:      DB 0
227   DDFB 00           panelA_info:      DB 0
228   DDFC 01           panelB_info:      DB 1
229   DDFD 00           panelA_drive:     DB 0
230   DDFE 00           panelB_drive:     DB 0
231   DDFF 00           panelA_filesCnt:  DB 0
232   DE00 00           panelB_filesCnt:  DB 0
233   DE01 00           panelA_curFile:   DB 0
234   DE02 00           panelB_curFile:   DB 0
235   DE03 41 3A 4E 43  aNcExt:           DB "A:NC.EXT",0
235   DE07 2E 45 58 54
235   DE0B 00
236   DE0C 41 3A 45 2E  aEditor:          DB "A:E.COM",0Dh      ; терминатором тут должно быть 0Dh
236   DE10 43 4F 4D 0D
237   DE14
238   DE14              ;-----------------------------------------------------------------------
239   DE14              ; Переменные
240   DE14              ;-----------------------------------------------------------------------
241   DE14
242   DE14                  STRUCT NC_VARIABLES
243   DE14 ~            cmdLinePos      DW    0
244   DE14 ~            cmdLineEnd      DW    0
245   DE14 ~            chooseDrive     DB    0
246   DE14 ~            tapeSaveCRC     DW    0         ; контрольная сумма файла с ленты
247   DE14 ~            savedSP         DW    0
248   DE14 ~            tapeLoadAddr    DW    0         ; адрес загрузки файла с ленты
249   DE14 ~            cmdLine         BLOCK 59, 0FFh  ; командная строка
250   DE14 ~            cmdLineCtrl     DB    0FFh      ; контроль переполнения командной строки
251   DE14 ~                            BLOCK 13, 0FFh
252   DE14 ~            input           BLOCK 21, 0FFh
253   DE14 ~                            BLOCK 11
254   DE14 ~            tempFileDescr   FILE_DESCRIPTOR
255   DE14 ~            fileListBuffer  BLOCK 768       ; Буфер для листинга директории (768 байт = 48 шт FILE_DESCRIPTOR) - не включен в бинарник
256   DE14                  ENDS
257   DE14
258   DE14              ; Установка только значения метки vars (машинный код не генерируется, переменные могут содержать мусор)
259   DE14              nc_vars         NC_VARIABLES = $
260   DE14
261   DE14              ; Максимальный допустимый размер NC.COM - до адреса 0E1FFh
262   DE14
263   DE14                  END
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\nc\NC.asm
