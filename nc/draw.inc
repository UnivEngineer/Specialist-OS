;----------------------------------------------------------------------------
; MXOS NC.COM
; Рисование окошек
;
; 2013-12-18 Дизассемблировано vinxru
;----------------------------------------------------------------------------

draw:		; Читаем 5 байт из HL в A, HL, C, B. 
		; При этом DE = HL+5
		mov	a, m
		inx	h
		mov	e, m
		inx	h
		mov	d, m
		inx	h
		mov	c, m
		inx	h
		mov	b, m
		inx	h		
		xchg

		; Если a=0 (первый байт), то выйти
		ana	a
		rz

		; Если не установлен 7-ой бит и активная панель правая, то X += 192
		jm	draw_0
		call	activePanelPos
draw_0:	

		; Если A&0xF==3, то заполнить C байт памяти байтом B
		ani	0Fh
		cpi	3
		jz	draw3

		; Если A&0xF==1, то нарисовать веритикальную линию
		; B-первый байт, C-средняя длина, *DE++ - последний байт 
		cpi	1
		jz	draw1

		; Нарисовать окно
		call	draw_window

draw_next:	; HL=DE и следующий цикл
		xchg
		jmp	draw

; ---------------------------------------------------------------------------
; Заполнить C байт памяти байтом B

draw3:		mov	a, b
		call	memset_hl_a_c
		jmp	draw_next

; ---------------------------------------------------------------------------
; Линия HL-адрес, B-первый байт, C-средняя длина, *DE++ - последний байт 

draw1:		; *hl++ |= b
		mov	a, b
		ora	m
		mov	m, a
		inr	h
		
loc_D9F3:       mvi	m, 0FFh
		inr	h
		dcr	c
		jnz	loc_D9F3

		; hl |= *de++
		ldax	d
		inx	d
		ora	m
		mov	m, a

		jmp	draw_next

; ---------------------------------------------------------------------------
; Если активная правая панель, сдвинуть адрес на пол экрана

activePanelPos:	push	psw
		lda	activePanel
		ana	a
		jz	loc_DA0B
		mvi	a, 24
loc_DA0B:	add	h
		mov	h, a
		pop	psw
		ret

; ---------------------------------------------------------------------------
; Рисуем окно (b=ширина-2, с=высота-6)

draw_window:	; Если h - 90h + b >= 0x2F, то есть X + B + 2 > ширина экрана, то выйти
		mov	a, h
		sui	90h
		add	b
		cpi	2Fh
		rnc

		; Сохранить регистры
		push	h
		push	b
		push	d

		; Линия
		lxi	d, v_window
		call	line313

		; Повтор B раз
draw_window_2:	push	d
		call	line313
		dcr	b
		jz	draw_window_3
		pop	d		
		jmp	draw_window_2

; ---------------------------------------------------------------------------

draw_window_3:	pop	psw

		; Линия
		call	line313

		; Восстановить регистры и выйти
		pop	d
		pop	b
		pop	h
		ret

; ---------------------------------------------------------------------------
; Вертикальная линия. Задается три верхних байта, заполнитель и три нижних

line313:	; Сохраняем регистры
		push	b
		push	h

		; Копируем 3 байта (сверху-вниз)
		call	memcpy_hl_de_3

		; 4 ый байт повторяем С-раз (сверху-вниз)
		ldax	d
		call	memset_hl_a_c
		inx	d

		; Копируем 3 байта (сверху-вниз)
		call	memcpy_hl_de_3
		 	
		; Восстаналиваем регистры
		pop	h
		pop	b

		; Вправо
		inr	h
		ret

