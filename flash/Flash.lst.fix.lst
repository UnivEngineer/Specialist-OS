  1   0000              ;----------------------------------------------------------------------------
  2   0000              ; MXOS
  3   0000              ; FLASH.COM - драйвер флеш-диска на AT29C040A
  4   0000              ;
  5   0000              ; Драйвер имеет три функции (номер передаётся в регистре b):
  6   0000              ;   b == 1 - записать кластер (256 байт, номер кластера в de, адрес буфера в hl);
  7   0000              ;   b == 2 - считать  кластер (256 байт, номер кластера в de, адрес буфера в hl);
  8   0000              ;   b == 3 - выдать размер диска (в кластерах, резльтат в de).
  9   0000              ;
 10   0000              ; Поддерживается флеш-память AT29C040A
 11   0000              ;
 12   0000              ; 2022-01-25 Разработано SpaceEngineer
 13   0000              ;----------------------------------------------------------------------------
 14   0000
 15   0000                  INCLUDE "../include/mxos.inc"
  1+  0000              ;-----------------------------------------------------------------------
  2+  0000              ; MXOS
  3+  0000              ; Точки входа и настройки сборки MXOS
  4+  0000              ;
  5+  0000              ; Карта памяти:
  6+  0000              ;   8FDF-8FFF - [  32 B] Переменные
  7+  0000              ;   9000-BFFF - [12  KB] Экран
  8+  0000              ;   C000-CFFF - [4096 B] DOS.SYS (в конце чуть чуть свободного места под доработки)
  9+  0000              ;   D000-E1FF - [4607 B] NC.COM (в конце место под список файлов и чуть чуть свободного места под доработки)
 10+  0000              ;   E200-E5FF - [1024 B] (свободно 1024 байт)
 11+  0000              ;   E600-E7FF - [ 512 B] Драйвер магнитофона
 12+  0000              ;   E900-F0FF - [2048 B] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
 13+  0000              ;   F100-F8FF - [2048 B] FORMAT.COM, FPAGE.COM, MON2.COM и прочие утилиты
 14+  0000              ;   F900-F9FF - [ 256 B] (Свободно 256 байт)
 15+  0000              ;   FA00-FAFF - [ 256 B] Драйвер флеш-диска
 16+  0000              ;   FB00-FEFF - [1024 B] Дисковый буфер
 17+  0000              ;   FF00-FF81 - [ 129 B] Командная строка. Заполняется функцией bios_fileExec
 18+  0000              ;   FF82-FFBF - [ 130 B] Стек
 19+  0000              ;   FFC0-FFEF - [  32 B] Непереключаемое ОЗУ, драйвера обмена с RAM диском
 20+  0000              ;   FFE0-FFFF - [  32 B] Оборудование
 21+  0000              ;-----------------------------------------------------------------------
 22+  0000
 23+  0000
 24+  0000              ;-----------------------------------------------------------------------
 25+  0000              ; Конфигурация сборки
 26+  0000              ;-----------------------------------------------------------------------
 27+  0000
 28+  0000              RAMD_MAX_PAGE        =  16      ; Максимальное количество страниц RAM диска
 29+  0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
 30+  0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
 31+  0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
 32+  0000              EMBED_FONT           =  0       ; Встроить шрифт в программу (при запуске шрифт копируется на FONT_ADDR)
 33+  0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
 34+  0000              FONT_ADDR            =  0E900h  ; Адрес шрфита
 35+  0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
 36+  0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
 37+  0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
 38+  0000              FAT16                =  1       ; Включить поддержку FAT16
 39+  0000
 40+  0000                  IF  LOAD_FONT
 41+  0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
 42+  0000                  ELSE
 43+  0000 ~            FONT_ADDR_DIV_8 = -1
 44+  0000                  ENDIF
 45+  0000
 46+  0000              ;-----------------------------------------------------------------------
 47+  0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
 48+  0000              ; Доступ к переменным и программ польователя:
 49+  0000              ; ld a, bios_vars.lastKey
 50+  0000              ;-----------------------------------------------------------------------
 51+  0000
 52+  0000                  STRUCT BIOS_VARIABLES
 53+  0000 ~            _reserv_1     DW      -1              ; 8FDFh -
 54+  0000 ~            tapeError     DW      0C800h          ; 8FE1h - Адрес, куда происходит переход при ошибке чтения с ленты
 55+  0000 ~            tapeAddr      DW      -1              ; 8FE3h - Адрес программы загруженной с ленты
 56+  0000 ~            _reserv_2     DW      -1              ; 8FE5h -
 57+  0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; 8FE7h - Адрес альтернативного знакогенератора / 8
 58+  0000 ~            cursorCfg     DB      11h ; 0A9h      ; 8FE9h - Внешний вид курсора (биты: 7 - мигание (если 0), 654 - положение (Y) от низа строки, 3210 - размер по высоте)
 59+  0000 ~            koi8          DB      -1              ; 8FEAh - 0FFh = включен KOI-8, 0 = включен KOI-7
 60+  0000 ~            escMode       DB      -1              ; 8FEBh - Обработка ESC-последовательности
 61+  0000 ~            keyLocks      DB      3Ah             ; 8FECh -
 62+  0000 ~            _reserv_3     DW      -1              ; 8FEDh -
 63+  0000 ~            lastLastKey   DB      -1              ; 8FEFh - Предпоследняя нажатая клавиша
 64+  0000 ~            lastKey       DB      -1              ; 8FF0h - Последняя нажатая клавиша
 65+  0000 ~            beepFreq      DB      5Fh             ; 8FF1h - Частота звукового сигнала (также влияет на длительность)
 66+  0000 ~            beepDuration  DB      20h             ; 8FF2h - Длительность звукового сигнала (сколько раз повторять посылку)
 67+  0000 ~            tapeInverse   DB      0FFh            ; 8FF3h - Признак инверсии данных с ленты
 68+  0000 ~            cursorDelay   DB      020h            ; 8FF4h -
 69+  0000 ~            byte_8FF5     DB      0E0h            ; 8FF5h -
 70+  0000 ~            oldSP         DW      -1              ; 8FF6h - Используется для сохранения SP некоторыми функциями
 71+  0000 ~            ramPageCount  DB      RAMD_MAX_PAGE   ; 8FF8h - Количество детектированных 64кб страниц RAM-диска
 72+  0000 ~            flashPage     DB      0               ; 8FF9h - Текущий номер страницы флеш-диска
 73+  0000 ~            inverse       DW      0               ; 8FFAh - Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
 74+  0000 ~            cursorY       DB      -1              ; 8FFCh - Положение курсора по вертикали в пикселях
 75+  0000 ~            cursorX       DB      -1              ; 8FFDh - Положение курсора по горизонтали в пикселях / 2
 76+  0000 ~            writeDelay    DB      28h             ; 8FFEh - Скорость при записи на ленту
 77+  0000 ~            readDelay     DB      3Ch             ; 8FFFh - Скорость при чтении с ленты
 78+  0000                  ENDS
 79+  0000
 80+  0000              ; Блок переменных BIOS начинается с адреса 8FDFh
 81+  0000              bios_vars   BIOS_VARIABLES = 8FDFh
 82+  0000
 83+  0000              ;-----------------------------------------------------------------------
 84+  0000              ; Стандартные точки входа ОС
 85+  0000              ; Отмеченные * применять не рекомендуется
 86+  0000              ;-----------------------------------------------------------------------
 87+  0000
 88+  0000              bios_init            = 0C000h ; Теплая перезагрузка
 89+  0000
 90+  0000              ; Устаревшие точки, лечше не применять
 91+  0000              bios_keyScanOld      = 0C003h ; * Получить код нажатой клавиши, = bios_keyScan
 92+  0000              bios_drawCursorOld   = 0C006h ; * Нарисовать/стереть курсор
 93+  0000              bios_clearScreenOld  = 0C010h ; * Оистка экрана
 94+  0000              bios_printCharOld    = 0C037h ; * Вывод символа на экран
 95+  0000              bios_beep_Old        = 0C170h ; * Звуковой сигнал
 96+  0000              bios_delay_l         = 0C18Fh ; * Задержка l циклов
 97+  0000              bios_delay_b         = 0C190h ; * Задержка b циклов
 98+  0000              bios_getchOld        = 0C337h ; * Ожидание ввода с клавиатуры
 99+  0000              bios_tapeReadOld     = 0C377h ; * Чтение байта с магнитофона
100+  0000              bios_tapeWriteOld    = 0C3D0h ; * Запись байта на магнитофон
101+  0000              bios_cmp_hl_de       = 0C427h ; * Сравнить hl и de
102+  0000              bios_memcpy_bc_hl    = 0C42Dh ; * Скопировать блок памяти
103+  0000              bios_printStringOld  = 0C438h ; * Вывод строки на экран
104+  0000
105+  0000              bios_reboot          = 0C800h ; Запустить NC.COM
106+  0000              bios_getch           = 0C803h ; Ожидание ввода с клавиатуры
107+  0000              bios_tapeRead        = 0C806h ; Чтение байта с магнитофона
108+  0000              bios_printChar       = 0C809h ; Вывод символа на экран
109+  0000              bios_tapeWrite       = 0C80Ch ; Запись байта на магнитофон
110+  0000              bios_input           = 0C80Fh ; Ввод строки с клавиатуры
111+  0000              bios_keyCheck        = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
112+  0000              bios_printHexByte    = 0C815h ; Вывод HEX числа на экран (байт)
113+  0000              bios_printString     = 0C818h ; Вывод строки на экран
114+  0000              bios_keyScan         = 0C81Bh ; Получить код нажатой клавиши
115+  0000              bios_getCursorPos    = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
116+  0000              bios_setCursorPos    = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
117+  0000              bios_tapeLoad        = 0C824h ; Загрузить программу с магнитофона
118+  0000              bios_tapeSave        = 0C827h ; Сохранить программу на магнитофон
119+  0000              bios_calcCS          = 0C82Ah ; Расчет контрольной суммы
120+  0000              bios_printHexWord    = 0C82Dh ; Вывод HEX числа на экран (слово)
121+  0000              bios_getMemTop       = 0C830h ; Получить объем доступной памяти
122+  0000              bios_setMemTop       = 0C833h ; Установить объем доступной памяти
123+  0000              bios_printer         = 0C836h ; Напечатать байт на принтере
124+  0000                  IF RAMFOS_COMPATIBILITY
125+  0000              bios_strToHex        = 0C839h ; Преобразвоние строки в HEX формате в число
126+  0000                  ELSE
127+  0000 ~            bios_rebootAlt       = 0C839h ; Запустить NC.COM
128+  0000                  ENDIF
129+  0000              bios_rebootAlt2      = 0C83Ch ; Запустить NC.COM
130+  0000              bios_fileList        = 0C83Fh ; Получить список файлов
131+  0000              bios_fileGetSetDrive = 0C842h ; Получить/установить активное устройство
132+  0000              bios_fileCreate      = 0C845h ; Создать файл
133+  0000              bios_fileLoad        = 0C848h ; Загрузить файл по адресу из заголовка этого файла
134+  0000              bios_fileDelete      = 0C84Bh ; Удалить файл
135+  0000              bios_fileRename      = 0C84Eh ; Переименовать файл
136+  0000              bios_fileLoadInfo    = 0C851h ; Загрузить информацию о файле
137+  0000              bios_fileGetSetAddr  = 0C854h ; Получить/установить адрес загрузки файла
138+  0000              bios_fileGetSetAttr  = 0C857h ; Получить/установить атрибуты файла
139+  0000              bios_fileNamePrepare = 0C85Ah ; Преобразовать имя файла во внутренний формат
140+  0000              bios_fileExec        = 0C85Dh ; Запустить файл
141+  0000              bios_installDriver   = 0C860h ; Установить драйвер накопителя
142+  0000              bios_diskDriver      = 0C863h ; Драйвер выбранного диска
143+  0000              bios_fileLoad2       = 0C866h ; Загрузить файл по адресу de
144+  0000              bios_printCharReal   = 0C869h ; Вывод символа на экран (только реальные символы)
145+  0000              bios_printDecWord    = 0C86Ch ; Вывод числа экран в десятичной форме
146+  0000              bios_setRAMDDriver   = 0C86Fh ; Установить драйвр рам-диска
147+  0000
148+  0000              ;-----------------------------------------------------------------------
149+  0000              ; Точки входа драйвера доступа к ДОЗУ
150+  0000              ;-----------------------------------------------------------------------
151+  0000
152+  0000              bios_RAMDRead  = 0FFC0h ; чтение из ДОЗУ
153+  0000              bios_RAMDWrite = 0FFD0h ; запись в  ДОЗУ
154+  0000
155+  0000              ;-----------------------------------------------------------------------
156+  0000              ; Адрес таблицы переходов драйвера магнитофона
157+  0000              ;-----------------------------------------------------------------------
158+  0000
159+  0000              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
160+  0000
161+  0000              ;-----------------------------------------------------------------------
162+  0000              ; Порты устройств ПК "Специалист-MX2"
163+  0000              ;-----------------------------------------------------------------------
164+  0000
165+  0000              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
166+  0000              IO_KEYB_B       =  0FFE1h
167+  0000              IO_KEYB_C       =  0FFE2h
168+  0000              IO_KEYB_MODE    =  0FFE3h
169+  0000              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
170+  0000              IO_PROG_B       =  0FFE5h
171+  0000              IO_PROG_C       =  0FFE6h
172+  0000              IO_PROG_MODE    =  0FFE7h
173+  0000              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
174+  0000              IO_FDD_TRACK    =  0FFE9h
175+  0000              IO_FDD_SECTOR   =  0FFEAh
176+  0000              IO_FDD_DATA     =  0FFEBh
177+  0000              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
178+  0000              IO_TIMER_CH1    =  0FFEDh
179+  0000              IO_TIMER_CH2    =  0FFEEh
180+  0000              IO_TIMER_MODE   =  0FFEFh
181+  0000              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
182+  0000              IO_FDD_MOTOR    =  0FFF1h
183+  0000              IO_FDD_SIDE     =  0FFF2h
184+  0000              IO_FDD_DRIVE    =  0FFF3h
185+  0000              IO_COLOR        =  0FFF8h   ; регистр цвета
186+  0000              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
187+  0000              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
188+  0000              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
189+  0000              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
190+  0000
191+  0000              ;-----------------------------------------------------------------------
192+  0000              ; Структура файловой системы
193+  0000              ;-----------------------------------------------------------------------
194+  0000
195+  0000              ; Структура каталога
196+  0000
197+  0000                  IF FAT16
198+  0000
199+  0000              DIR_DESCR_SIZE  = 32    ; Размер дескриптора файла в каталоге (байт)
200+  0000              DIR_NAME_LENGTH = 8     ; Длина имени файла  (байт)
201+  0000              FAT_ITEM_SIZE   = 2     ; Размер записи в таблице FAT (байт)
202+  0000
203+  0000              ;-----------------------------------------------------------------------
204+  0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
205+  0000              ;-----------------------------------------------------------------------
206+  0000
207+  0000                  STRUCT FILE_DESCRIPTOR  ; 32 байта
208+  0000 ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 8 байт  - имя файла
209+  0000 ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
210+  0000 ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
211+  0000 ~            checkSum        BLOCK   1  ; ntRes          ; смещение 0Ch, 1 байт  - контрольная сумма (!!! временный костыль, в FAT32 это ntRes - используются в Windows NT !!!)
212+  0000 ~            ctrTimeTenth    BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
213+  0000 ~            ctrTime         BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
214+  0000 ~            ctrDate         BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
215+  0000 ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
216+  0000 ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
217+  0000 ~            wrtTime         BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
218+  0000 ~            wrtDate         BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
219+  0000 ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
220+  0000 ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
221+  0000                  ENDS
222+  0000
223+  0000              ;-----------------------------------------------------------------------
224+  0000              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
225+  0000              ;-----------------------------------------------------------------------
226+  0000
227+  0000                  ELSE
228+  0000 ~
229+  0000 ~            DIR_DESCR_SIZE  = 16    ; Размер дескриптора файла в каталоге
230+  0000 ~            DIR_NAME_LENGTH = 6     ; Длина имени файла (байт)
231+  0000 ~            FAT_ITEM_SIZE   = 1     ; Размер записи в таблице FAT (байт)
232+  0000 ~
233+  0000 ~            ;-----------------------------------------------------------------------
234+  0000 ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
235+  0000 ~            ;-----------------------------------------------------------------------
236+  0000 ~
237+  0000 ~                STRUCT FILE_DESCRIPTOR  ; 16 байт
238+  0000 ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 6 байт  - имя файла
239+  0000 ~            ext             BLOCK   3                   ; смещение 06h, 3 байта - расширение имени файла
240+  0000 ~            attrib          BLOCK   1                   ; смещение 09h, 1 байт  - атрибуты файла: 00h - обычный файл, 01h - системный файл
241+  0000 ~            loadAddress     BLOCK   2                   ; смещение 0Ah, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый
242+  0000 ~            size            BLOCK   2                   ; смещение 0Ch, 2 байта - размер файла в байтах - 1
243+  0000 ~            checkSum        BLOCK   1                   ; смещение 0Eh, 1 байт  - контрольная сумма
244+  0000 ~            firstCluster    BLOCK   1                   ; смещение 0Fh, 1 байт  - номер первого кластера в FAT
245+  0000 ~                ENDS
246+  0000 ~
247+  0000 ~            ;-----------------------------------------------------------------------
248+  0000 ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
249+  0000 ~            ;-----------------------------------------------------------------------
250+  0000 ~
251+  0000                  ENDIF
252+  0000
253+  0000              ;-----------------------------------------------------------------------
254+  0000              ; Буферы в памяти
255+  0000              ;-----------------------------------------------------------------------
256+  0000
257+  0000              CLUSTER_SIZE     = 00100h                   ; размер кластера 256 байт
258+  0000              CLUSTERS_IN_BANK = 10000h / CLUSTER_SIZE    ; сколько кластеров в 64 кб банке
259+  0000
260+  0000                  IF FAT16
261+  0000
262+  0000              FAT_CLUSTERS  = 16      ; сколько кластеров занимает таблица fat
263+  0000              DIR_CLUSTERS  = 4       ; сколько кластеров занимает корневой каталог
264+  0000              FAT_BUFFER    = 8000h - (FAT_CLUSTERS + DIR_CLUSTERS) * CLUSTER_SIZE; адрес буфера таблицы fat в памяти
265+  0000
266+  0000                  ELSE
267+  0000 ~
268+  0000 ~            FAT_CLUSTERS  = 1       ; сколько кластеров занимает таблица fat
269+  0000 ~            DIR_CLUSTERS  = 3       ; сколько кластеров занимает корневой каталог
270+  0000 ~            FAT_BUFFER    = 0FB00h  ; адрес буфера таблицы fat в памяти
271+  0000 ~
272+  0000                  ENDIF
273+  0000
274+  0000              FAT_SIZE      = FAT_CLUSTERS * CLUSTER_SIZE  ; размер таблицы fat в байтах
275+  0000              DIR_SIZE      = DIR_CLUSTERS * CLUSTER_SIZE  ; размер корневого каталога в байтах
276+  0000
277+  0000              DIR_BUFFER    = FAT_BUFFER + FAT_SIZE         ; адрес буфера корневого каталога в памяти
278+  0000
279+  0000              DIR_MAX_FILES = DIR_CLUSTERS * 256 / DIR_DESCR_SIZE    ; Максимум файлов в каталоге
280+  0000
281+  0000              BAT_BUFFER    = 0FC00h  ; буфер для загрузки BAT файла
282+  0000              CMD_LINE      = 0FF00h  ; 192 байта, но в конце стек
283+  0000              STACK_ADDR    = 0FFC0h  ; стек
284+  0000
285+  0000              ;-----------------------------------------------------------------------
286+  0000              ; Всякие полезности
287+  0000              ;-----------------------------------------------------------------------
288+  0000
289+  0000              ; Макрос для заполнения памяти от текущего адреса до указанного
290+  0000                  MACRO ORG_PAD adr
291+  0000 ~                     IF $ > adr
292+  0000 ~                       ; вывод сообщения об ошибке
293+  0000 ~                       ASSERT 0
294+  0000 ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
295+  0000 ~                     ELSE
296+  0000 ~                       ; заполнение памяти
297+  0000 ~                       BLOCK adr-$, 0FFh
298+  0000 ~                     ENDIF
299+  0000 ~                     ORG adr
300+  0000                  ENDM
301+  0000
302+  0000                  MACRO ORG_PAD0 adr
303+  0000 ~                     IF $ > adr
304+  0000 ~                       ; вывод сообщения об ошибке
305+  0000 ~                       ASSERT 0
306+  0000 ~                       DISPLAY /l, "Error! ORG_PAD0 failed! ", $, " is more than ", adr
307+  0000 ~                     ELSE
308+  0000 ~                       ; заполнение памяти
309+  0000 ~                       BLOCK adr-$, 0
310+  0000 ~                     ENDIF
311+  0000 ~                     ORG adr
312+  0000                  ENDM
313+  0000
314+  0000              ; Макросы для проверки текущего адреса
315+  0000                  MACRO ASSERT_EQUAL adr
316+  0000 ~                     IF $ != adr
317+  0000 ~                       ASSERT 0
318+  0000 ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
319+  0000 ~                     ENDIF
320+  0000                  ENDM
321+  0000
322+  0000                  MACRO ASSERT_DONT_FIT adr
323+  0000 ~                     IF $ > adr
324+  0000 ~                       ASSERT 0
325+  0000 ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
326+  0000 ~                     ENDIF
327+  0000                  ENDM
328+  0000
329+  0000              ;-----------------------------------------------------------------------
330+  0000              ; Конец
331+  0000              ;-----------------------------------------------------------------------
332+  0000
 16   0000
 17   0000              ; Команды для дрыгания ножками ВВ55
 18   0000              LATCH_0 = 0Ah   ; пин защёлки ИР22 = 0
 19   0000              LATCH_1 = 0Bh   ; пин защёлки ИР22 = 1
 20   0000              WRITE_0 = 0Ch   ; пин записи = 0
 21   0000              WRITE_1 = 0Dh   ; пин записи = 1
 22   0000              READ_0  = 0Eh   ; пин чтения = 0
 23   0000              READ_1  = 0Fh   ; пин чтения = 1
 24   0000
 25   0000              ; Маски управляющих пинов ВВ55
 26   0000              MASK_STADBY = 0C0h  ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
 27   0000              MASK_READ   = 040h  ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 0
 28   0000
 29   0000              ; Накопитель, куда назначается драйвер
 30   0000              DRIVE       = 7     ; "H"
 31   0000
 32   0000              ; Размер флеш-диска в кластерах по 256 байт
 33   0000              DRIVE_SIZE  = 0800h ; 512 кб
 34   0000
 35   0000              ; Схема флеш-диска:
 36   0000              ; Порт A - данные
 37   0000              ; Порт B - адрес [A0-A7] или [A8-A15]
 38   0000              ; Порт C0...C4 - адрес [A17-A20]
 39   0000              ; Порт С5 - строб защёлки адреса [A8-A15] в ИР22 (лог. 1)
 40   0000              ; Порт С6 - строб записи в  ПЗУ (лог. 0)
 41   0000              ; Порт С7 - строб чтения из ПЗУ (лог. 0)
 42   0000
 43   0000              ;----------------------------------------------------------------------------
 44   0000
 45   0000                  ORG     0FA00h
 46   FA00
 47   FA00                  ; Установить драйвер для накопителя 7 ("H")
 48   FA00 3E 07            ld      a, DRIVE
 49   FA02 21 0F FA         ld      hl, Driver
 50   FA05 C3 60 C8         jp      bios_installDriver
 51   FA08
 52   FA08                  ; Установить накопитель 7 ("H")
 53   FA08 1E 01            ld      e, 1 ; функция 1 - установить накопитель
 54   FA0A 3E 07            ld      a, DRIVE
 55   FA0C C3 42 C8         jp      bios_fileGetSetDrive
 56   FA0F
 57   FA0F              Driver:
 58   FA0F
 59   FA0F                  ; Анализ номера функции
 60   FA0F 78               ld      a, b
 61   FA10 FE 03            cp      3
 62   FA12 CA 98 FA         jp z,   FuncSize
 63   FA15
 64   FA15 E5               push    hl
 65   FA16 C5               push    bc
 66   FA17
 67   FA17 3D               dec     a
 68   FA18 CA 4E FA         jp z,   FuncWrite
 69   FA1B 3D               dec     a
 70   FA1C CA 29 FA         jp z,   FuncRead
 71   FA1F
 72   FA1F              Exit:
 73   FA1F F5               push    af
 74   FA20 3E C0            ld      a, MASK_STADBY    ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
 75   FA22 32 E6 FF         ld      (IO_PROG_C), a
 76   FA25 F1               pop     af
 77   FA26 C1               pop     bc
 78   FA27 E1               pop     hl
 79   FA28 C9               ret
 80   FA29
 81   FA29              ;----------------------------------------------------------------------------
 82   FA29              ; Функция 2 - чтение кластера
 83   FA29              ; вход:
 84   FA29              ;   de = номер кластера
 85   FA29              ;   hl = адрес буфера в памяти
 86   FA29
 87   FA29              FuncRead:
 88   FA29 D5               push    de
 89   FA2A
 90   FA2A                  ; Настройка портов ВВ55
 91   FA2A 3E 90            ld      a, 90h          ; порт A - ввод, порты B и C - вывод
 92   FA2C 32 E7 FF         ld      (IO_PROG_MODE), a
 93   FA2F
 94   FA2F                  ; Запись номера 64к страницы и управляющих битов в порт C
 95   FA2F                  ; Т.к. кластеры по 256 байт, старший байт de это просто номер 64к страницы
 96   FA2F 7A               ld      a, d            ; номер 64к страницы, макс 1Fh
 97   FA30 E6 1F            and     01Fh            ; на всякий случай
 98   FA32 F6 40            or      MASK_READ       ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 0
 99   FA34 32 E6 FF         ld      (IO_PROG_C), a  ; записываем номер 64к страницы и управляющие биты
100   FA37
101   FA37                  ; de = адрес начала кластера в 64к странице флеш-диска
102   FA37 53               ld      d, e
103   FA38 1E 00            ld      e, 0
104   FA3A CD B7 FA         call    LatchHiAddr     ; записываем d = старший байт адреса (номер кластера) в ИР22
105   FA3D
106   FA3D              ReadLoop:
107   FA3D 7B               ld      a, e
108   FA3E 32 E5 FF         ld      (IO_PROG_B), a  ; порт B = младший байт адреса в странице
109   FA41 3A E4 FF         ld      a, (IO_PROG_A)  ; читаем байт из порта A
110   FA44 77               ld      (hl), a         ; сохраняем в память
111   FA45 23               inc     hl
112   FA46 1C               inc     e
113   FA47 C2 3D FA         jp nz,  ReadLoop
114   FA4A
115   FA4A D1               pop     de
116   FA4B C3 1F FA         jp      Exit
117   FA4E
118   FA4E              ;----------------------------------------------------------------------------
119   FA4E              ; Функция 1 - запись кластера
120   FA4E              ; вход:
121   FA4E              ;   de = номер кластера
122   FA4E              ;   hl = адрес буфера в памяти
123   FA4E
124   FA4E              FuncWrite:
125   FA4E D5               push    de
126   FA4F
127   FA4F                  ; Настройка портов ВВ55
128   FA4F 3E 80            ld      a, 80h          ; порты A, B и C - вывод
129   FA51 32 E7 FF         ld      (IO_PROG_MODE), a
130   FA54
131   FA54                  ; Определяем номер чипа на флеш-диске
132   FA54 7A               ld      a, d            ; номер 64к страницы, макс 1Fh
133   FA55 E6 18            and     18h             ; обнуляем все биты кроме 3-го и 4-го
134   FA57 47               ld      b, a            ; в B получаем номер чипа * 8 (0, 8, 16, 24)
135   FA58
136   FA58                  ; Отключение программной защиты от записи
137   FA58 CD 9C FA         call    DisableWriteProtection
138   FA5B
139   FA5B                  ; Запись номера 64к страницы и управляющих битов в порт C
140   FA5B                  ; Т.к. кластеры по 256 байт, старший байт de это просто номер 64к страницы
141   FA5B 7A               ld      a, d            ; номер 64к страницы, макс 1Fh
142   FA5C E6 1F            and     01FH            ; на всякий случай
143   FA5E F6 C0            or      MASK_STADBY     ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
144   FA60 32 E6 FF         ld      (IO_PROG_C),a   ; записываем номер 64к страницы и управляющие биты
145   FA63
146   FA63                  ; de = адрес начала кластера в 64к странице флеш-диска
147   FA63 53               ld      d, e
148   FA64 1E 00            ld      e, 0
149   FA66 CD B7 FA         call    LatchHiAddr     ; записываем d = старший байт адреса (номер кластера) в ИР22
150   FA69
151   FA69              WriteLoop:
152   FA69 7B               ld      a, e
153   FA6A 32 E5 FF         ld      (IO_PROG_B), a      ; порт B = младший байт адреса в странице
154   FA6D 7E               ld      a, (hl)             ; читаем байт из памяти
155   FA6E 32 E4 FF         ld      (IO_PROG_A), a      ; записываем в порт A
156   FA71 3E 0C            ld      a, WRITE_0
157   FA73 32 E7 FF         ld      (IO_PROG_MODE), a   ; устанавливаем пин записи (C6 = 0)
158   FA76 3E 0D            ld      a, WRITE_1
159   FA78 32 E7 FF         ld      (IO_PROG_MODE), a   ; снимаем пин записи (C6 = 1)
160   FA7B 23               inc     hl
161   FA7C 1C               inc     e
162   FA7D C2 69 FA         jp nz,  WriteLoop
163   FA80
164   FA80                  ; Ожидание окончания внутреннего цикла программирования флеш-памяти
165   FA80 2B               dec     hl              ; последний адрес в буфере
166   FA81 4E               ld      c, (hl)         ; читаем в C последний записанный байт из буфера
167   FA82 1D               dec     e               ; последний байт в кластере
168   FA83
169   FA83                  ; Настройка портов ВВ55
170   FA83 3E 90            ld   a, 90h             ; порт A - ввод, порты B и C - вывод
171   FA85 32 E7 FF         ld  (IO_PROG_MODE), a
172   FA88
173   FA88                  ; Максимум итераций цикла ожидания: надо 20 мс,
174   FA88                  ; 1 цикл = 197 тактов = 98.5 мкс,
175   FA88                  ; 20 мс = 203 итераций
176   FA88 2E CC            ld   l, 204
177   FA8A
178   FA8A                  ; Цикл ожидания
179   FA8A              Wait:
180   FA8A 2D               dec     l
181   FA8B CA 1F FA         jp z,   Exit
182   FA8E
183   FA8E CD C6 FA         call    ReadByteFromChip    ; читаем последний записанный байт из флеш памяти
184   FA91
185   FA91                  ; Пока программирование не окончено, флеш память будет выдавать
186   FA91                  ; бит 7 последнего записанного байта в инверсном виде
187   FA91 B9               cp      c
188   FA92 C2 8A FA         jp nz,  Wait
189   FA95
190   FA95 C3 1F FA         jp      Exit
191   FA98
192   FA98              ;    ; Задержка 840 циклов по 24 тактов = 10 мс
193   FA98              ;    ld     h, 840
194   FA98              ;Delay:
195   FA98              ;    dec    h       ; 5 тактов
196   FA98              ;    ld     a, h    ; 5 тактов
197   FA98              ;    or     l       ; 4 такта
198   FA98              ;    jp nz, Delay   ; 10 тактов
199   FA98              ;    jp     Exit
200   FA98
201   FA98              ;-----------------------------------------------------------------------------------
202   FA98              ; Функция 3 - определение объема накопителя
203   FA98              ; выход:
204   FA98              ;  de = количество кластеров
205   FA98
206   FA98              FuncSize:
207   FA98 11 00 08         ld      de, DRIVE_SIZE
208   FA9B C9               ret
209   FA9C
210   FA9C              ;----------------------------------------------------------------------------
211   FA9C              ; Отключение программной защиты от записи
212   FA9C              ; вход:
213   FA9C              ;  b = номер чипа * 8 (0, 8, 16, 24)
214   FA9C
215   FA9C              DisableWriteProtection:
216   FA9C                  ; Управляющие коды пишутся в нулевую 64к страницу чипа,
217   FA9C                  ; поэтому номер страницы менять не надо
218   FA9C D5               push    de
219   FA9D                  ; Записываем байт AAh по адресу 05555h в чип флеш-памяти
220   FA9D 3E AA            ld      a,  0AAh
221   FA9F 11 55 55         ld      de, 5555h
222   FAA2 CD D7 FA         call    WriteByteToChip
223   FAA5                  ; Записываем байт 55h по адресу 02AAAh в чип флеш-памяти
224   FAA5 3E 55            ld      a,  55h
225   FAA7 11 AA 2A         ld      de, 2AAAh
226   FAAA CD D7 FA         call    WriteByteToChip
227   FAAD                  ; Записываем байт A0h по адресу 05555h в чип флеш-памяти
228   FAAD 3E A0            ld      a,  0A0h
229   FAAF 11 55 55         ld      de, 5555h
230   FAB2 CD D7 FA         call    WriteByteToChip
231   FAB5 D1               pop     de
232   FAB6 C9               ret
233   FAB7
234   FAB7              ;----------------------------------------------------------------------------
235   FAB7              ; Защёлкивание старшего байта адреса в ИР22 флеш-диска
236   FAB7              ; вход:
237   FAB7              ;   d = старший байт адреса (номер кластера)
238   FAB7
239   FAB7              LatchHiAddr:
240   FAB7 3E 0B            ld      a, LATCH_1
241   FAB9 32 E7 FF         ld      (IO_PROG_MODE), a   ; поднимаем защёлку ИР22 (C5 = 1)
242   FABC 7A               ld      a, d
243   FABD 32 E5 FF         ld      (IO_PROG_B), a      ; порт B = старший байт адреса (номер кластера)
244   FAC0 3E 0A            ld      a, LATCH_0
245   FAC2 32 E7 FF         ld      (IO_PROG_MODE), a   ; опускаем защёлку ИР22 (C5 = 0), защёлкивая старший байт адреса
246   FAC5 C9               ret
247   FAC6
248   FAC6              ;----------------------------------------------------------------------------
249   FAC6              ; Чтение байта из чипа флеш памяти
250   FAC6              ; вход:
251   FAC6              ;   de = адрес в 64к странице
252   FAC6              ;   b  = номер 64к страницы
253   FAC6              ; выход:
254   FAC6              ;   a  = байт данных
255   FAC6              ;   пин чтения остаётся активным (C7 = 0)
256   FAC6
257   FAC6              ReadByteFromChip:
258   FAC6 CD B7 FA         call    LatchHiAddr     ; записываем d = старший байт адреса (номер кластера) в ИР22
259   FAC9 7B               ld      a, e
260   FACA 32 E5 FF         ld      (IO_PROG_B), a  ; порт B = младший байт адреса
261   FACD 78               ld      a, b
262   FACE F6 40            or      MASK_READ       ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 0
263   FAD0 32 E6 FF         ld      (IO_PROG_C), a  ; записываем номер 64к страницы и управляющие биты
264   FAD3 3A E4 FF         ld      a,(IO_PROG_A)   ; читаем байт из порта A
265   FAD6 C9               ret
266   FAD7
267   FAD7              ;----------------------------------------------------------------------------
268   FAD7              ; Запись байта в чип флеш памяти
269   FAD7              ; вход:
270   FAD7              ;   de = адрес в 64к странице
271   FAD7              ;   b  = номер 64к страницы
272   FAD7              ;   a  = байт данных
273   FAD7
274   FAD7              WriteByteToChip:
275   FAD7 32 E4 FF         ld      (IO_PROG_A), a      ; порт A = байт данных
276   FADA CD B7 FA         call    LatchHiAddr         ; записываем d = старший байт адреса (номер кластера) в ИР22
277   FADD 7B               ld      a, e
278   FADE 32 E5 FF         ld      (IO_PROG_B), a      ; порт B = младший байт адреса
279   FAE1 78               ld      a, b
280   FAE2 F6 C0            or      MASK_STADBY         ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
281   FAE4 32 E6 FF         ld      (IO_PROG_C), a      ; записываем номер 64к страницы и управляющие биты
282   FAE7 3E 0C            ld      a, WRITE_0
283   FAE9 32 E7 FF         ld      (IO_PROG_MODE), a   ; устанавливаем пин записи (C6 = 0)
284   FAEC 3E 0D            ld      a, WRITE_1
285   FAEE 32 E7 FF         ld      (IO_PROG_MODE), a   ; снимаем пин записи (C6 = 1)
286   FAF1 C9               ret
287   FAF2
288   FAF2              ;----------------------------------------------------------------------------
289   FAF2
290   FAF2                  END
