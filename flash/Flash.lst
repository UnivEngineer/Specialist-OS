# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\flash\Flash.asm
  1   0000              ;----------------------------------------------------------------------------
  2   0000              ; MXOS
  3   0000              ; FLASH.COM - драйвер флеш-диска на AT29C040A
  4   0000              ;
  5   0000              ; Драйвер имеет три функции (номер передаётся в регистре e):
  6   0000              ; 1 - записать кластер (256 байт, номер кластера в регистре d, адрес буфера в hl);
  7   0000              ; 2 - считать  кластер (256 байт, номер кластера в регистре d, адрес буфера в hl);
  8   0000              ; 3 - выдать размер диска (в кластерах, в регистре a).
  9   0000              ;
 10   0000              ; Поддерживается флеш-память AT29C040A
 11   0000              ;
 12   0000              ; 2022-01-25 Разработано SpaceEngineer
 13   0000              ;----------------------------------------------------------------------------
 14   0000
 15   0000                  INCLUDE "../include/mxos.inc"
# file opened: D:\Projects\Specialist\MySoft\MXOS-Z80\flash\../include/mxos.inc
  1+  0000              ;-----------------------------------------------------------------------
  2+  0000              ; MXOS
  3+  0000              ; Точки входа и настройки сборки MXOS
  4+  0000              ;
  5+  0000              ; Карта памяти:
  6+  0000              ;   8FDF-8FFF - [  32  B] Переменные
  7+  0000              ;   9000-BFFF - [12   KB] Экран
  8+  0000              ;   C000-CFFF - [4    KB] DOS.SYS (в конце чуть чуть свободного места под доработки)
  9+  0000              ;   D000-E1FF - [4.5  KB] NC.COM (в конце место под список файлов и чуть чуть свободного места под доработки)
 10+  0000              ;   E200-E5FF - [1.0  KB] (свободно 1024 байт)
 11+  0000              ;   E600-E7FF - [0.5  KB] Драйвер магнитофона
 12+  0000              ;   E900-F0FF - [2    KB] Шрифт (можно отключить запуском ROMFNT.COM или опцией LOAD_FONT=0)
 13+  0000              ;   F100-F8FF - [2.0  KB] FORMAT.COM, FPAGE.COM, MON2.COM и прочие утилиты
 14+  0000              ;   F900-F9FF - [ 256  B] (Свободно 256 байт)
 15+  0000              ;   FA00-FAFF - [ 256  B] Драйвер флеш-диска
 16+  0000              ;   FB00-FDFF - [ 768  B] Дисковый буфер
 17+  0000              ;   FF00-FF81 - [ 129  B] Командная строка. Заполняется функцией bios_fileExec
 18+  0000              ;   FF82-FFBF - [ 130  B] Стек
 19+  0000              ;   FFC0-FFEF - [  32  B] Непереключаемое ОЗУ, драйвера обмена с RAM диском
 20+  0000              ;   FFE0-FFFF - [  32  B] Оборудование
 21+  0000              ;-----------------------------------------------------------------------
 22+  0000
 23+  0000
 24+  0000              ;-----------------------------------------------------------------------
 25+  0000              ; Конфигурация сборки
 26+  0000              ;-----------------------------------------------------------------------
 27+  0000
 28+  0000              RAMD_MAX_PAGE        =  0Fh     ; Максимальное количество страниц RAM диска (до 0Fh)
 29+  0000              RAMD_PAGE_END        =  0FFBBh  ; Включить поддержку ДОЗУ большего чем 64 Кб
 30+  0000              ROM_64K              =  1       ; Включить поддержку ПЗУ 64 Кб Специалиста МХ2
 31+  0000              ENABLE_COLOR         =  1       ; Включить поддержку цвета
 32+  0000              LOAD_FONT            =  1       ; Загружать шрифт в ОЗУ
 33+  0000              FONT_ADDR            =  0E900h  ; Адрес шрфита
 34+  0000              COLOR_BIOS           =  0F0h    ; Цвет командной строки
 35+  0000              RAMFOS_COMPATIBILITY =  1       ; Совместимость с RAMFOS (WIP)
 36+  0000              BOOT_FROM_TAPE       =  0       ; Включить загрузку с ленты при нажатой клавише после сброса
 37+  0000              FAT16                =  1       ; Включить поддержку FAT16
 38+  0000
 39+  0000                  IF  LOAD_FONT
 40+  0000              FONT_ADDR_DIV_8 = FONT_ADDR/8
 41+  0000                  ELSE
 42+  0000 ~            FONT_ADDR_DIV_8 = -1
 43+  0000                  ENDIF
 44+  0000
 45+  0000              ;-----------------------------------------------------------------------
 46+  0000              ; Переменные ОС в подэкранном пространстве и их начальные значения
 47+  0000              ; Доступ к переменным и программ польователя:
 48+  0000              ; ld a, bios_vars.lastKey
 49+  0000              ;-----------------------------------------------------------------------
 50+  0000
 51+  0000                  STRUCT BIOS_VARIABLES
 52+  0000 ~            _reserv_1     DW      -1
 53+  0000 ~            tapeError     DW      0C800h          ; Адрес, куда происходит переход при ошибке чтения с ленты
 54+  0000 ~            tapeAddr      DW      -1              ; Адрес программы загруженной с ленты
 55+  0000 ~            _reserv_2     DW      -1
 56+  0000 ~            charGen       DW      FONT_ADDR_DIV_8 ; Адрес альтернативного знакогенератора /8
 57+  0000 ~            cursorCfg     DB      0A9h            ; Внешний вид курсора (7 - бит видимость, 654 - положение, 3210 - высота)
 58+  0000 ~            koi8          DB      -1              ; 0FFh = включен KOI-8, 0 = включен KOI-7
 59+  0000 ~            escMode       DB      -1              ; Обработка ESC-последовательности
 60+  0000 ~            keyLocks      DB      3Ah
 61+  0000 ~            _reserv_3     DW      -1
 62+  0000 ~            lastLastKey   DB      -1
 63+  0000 ~            lastKey       DB      -1
 64+  0000 ~            beepDuration  DB      5Fh             ; Длительность звукового сигнала
 65+  0000 ~            beepFreq      DB      20h             ; Частота звукового сигнала
 66+  0000 ~            tapeInverse   DB      0FFh
 67+  0000 ~            cursorDelay   DB      020h
 68+  0000 ~            byte_8FF5     DB      0E0h
 69+  0000 ~            oldSP         DW      -1              ; Используется для сохранения SP некоторыми функциями
 70+  0000 ~            maxRamPage    DB      RAMD_MAX_PAGE   ; Максимальный детектированный номер страницы RAM-диска
 71+  0000 ~            flashPage     DB      0               ; Текущий номер страницы флеш-диска
 72+  0000 ~            inverse       DW      0               ; Инвертирование текста (0=нормальный текст, 0FFFFh=инверсный)
 73+  0000 ~            cursorY       DB      -1              ; Положение курсора по вертикали в пикселях
 74+  0000 ~            cursorX       DB      -1              ; Положение курсора по горизонтали в пикселях / 2
 75+  0000 ~            writeDelay    DB      28h             ; Скорость при записи на ленту
 76+  0000 ~            readDelay     DB      3Ch             ; Скорость при чтении с ленты
 77+  0000                  ENDS
 78+  0000
 79+  0000              ; Адрес структуры BIOS_VARIABLES
 80+  0000
 81+  0000              	ORG 08FDFh
 82+  8FDF
 83+  8FDF              bios_vars   BIOS_VARIABLES = $
 84+  8FDF
 85+  8FDF              ;-----------------------------------------------------------------------
 86+  8FDF              ; Буферы в памяти
 87+  8FDF              ;-----------------------------------------------------------------------
 88+  8FDF
 89+  8FDF              fat              = 0FB00h
 90+  8FDF              diskDirectory    = 0FC00h
 91+  8FDF              diskDirectoryEnd = 0FE00h
 92+  8FDF              v_cmdLine        = 0FF00h
 93+  8FDF              STACK_ADDR       = 0FFC0h
 94+  8FDF
 95+  8FDF              ;-----------------------------------------------------------------------
 96+  8FDF              ; Стандартные точки входа ОС
 97+  8FDF              ; Отмеченные * применять не рекомендуется
 98+  8FDF              ;-----------------------------------------------------------------------
 99+  8FDF
100+  8FDF              bios_init            = 0C000h ; Теплая перезагрузка
101+  8FDF
102+  8FDF              ; Устаревшие точки, лечше не применять
103+  8FDF              bios_keyScanOld      = 0C003h ; * Получить код нажатой клавиши, = bios_keyScan
104+  8FDF              bios_drawCursorOld   = 0C006h ; * Нарисовать/стереть курсор
105+  8FDF              bios_clearScreenOld  = 0C010h ; * Оистка экрана
106+  8FDF              bios_printCharOld    = 0C037h ; * Вывод символа на экран
107+  8FDF              bios_beep_Old        = 0C170h ; * Звуковой сигнал
108+  8FDF              bios_delay_l         = 0C18Fh ; * Задержка
109+  8FDF              bios_getchOld        = 0C337h ; * Ожидание ввода с клавиатуры
110+  8FDF              bios_tapeReadOld     = 0C377h ; * Чтение байта с магнитофона
111+  8FDF              bios_tapeWriteOld    = 0C3D0h ; * Запись байта на магнитофон
112+  8FDF              bios_cmp_hl_de       = 0C427h ; * Сравнить hl и de
113+  8FDF              bios_memcpy_bc_hl    = 0C42Dh ; * Скопировать блок памяти
114+  8FDF              bios_printStringOld  = 0C438h ; * Вывод строки на экран
115+  8FDF
116+  8FDF              bios_reboot          = 0C800h ; Запустить NC.COM
117+  8FDF              bios_getch           = 0C803h ; Ожидание ввода с клавиатуры
118+  8FDF              bios_tapeRead        = 0C806h ; Чтение байта с магнитофона
119+  8FDF              bios_printChar       = 0C809h ; Вывод символа на экран
120+  8FDF              bios_tapeWrite       = 0C80Ch ; Запись байта на магнитофон
121+  8FDF              bios_input           = 0C80Fh ; Ввод строки с клавиатуры
122+  8FDF              bios_keyCheck        = 0C812h ; Получить код нажатой клавиши, = bios_keyScan
123+  8FDF              bios_printHexByte    = 0C815h ; Вывод HEX числа на экран (байт)
124+  8FDF              bios_printString     = 0C818h ; Вывод строки на экран
125+  8FDF              bios_keyScan         = 0C81Bh ; Получить код нажатой клавиши
126+  8FDF              bios_getCursorPos    = 0C81Eh ; Получить координаты курсора в hl (координаты в пикселях)
127+  8FDF              bios_setCursorPos    = 0C821h ; Установить координаты курсора из hl (координаты в пикселях)
128+  8FDF              bios_tapeLoad        = 0C824h ; Загрузить программу с магнитофона
129+  8FDF              bios_tapeSave        = 0C827h ; Сохранить программу на магнитофон
130+  8FDF              bios_calcCS          = 0C82Ah ; Расчет контрольной суммы
131+  8FDF              bios_printHexWord    = 0C82Dh ; Вывод HEX числа на экран (слово)
132+  8FDF              bios_getMemTop       = 0C830h ; Получить объем доступной памяти
133+  8FDF              bios_setMemTop       = 0C833h ; Установить объем доступной памяти
134+  8FDF              bios_printer         = 0C836h ; Напечатать байт на принтере
135+  8FDF                  IF RAMFOS_COMPATIBILITY
136+  8FDF              bios_strToHex        = 0C839h ; Преобразвоние строки в HEX формате в число
137+  8FDF                  ELSE
138+  8FDF ~            bios_rebootAlt       = 0C839h ; Запустить NC.COM
139+  8FDF                  ENDIF
140+  8FDF              bios_rebootAlt2      = 0C83Ch ; Запустить NC.COM
141+  8FDF              bios_fileList        = 0C83Fh ; Получить список файлов
142+  8FDF              bios_fileGetSetDrive = 0C842h ; Получить/установить активное устройство
143+  8FDF              bios_fileCreate      = 0C845h ; Создать файл
144+  8FDF              bios_fileLoad        = 0C848h ; Загрузить файл по адресу из заголовка этого файла
145+  8FDF              bios_fileDelete      = 0C84Bh ; Удалить файл
146+  8FDF              bios_fileRename      = 0C84Eh ; Переименовать файл
147+  8FDF              bios_fileLoadInfo    = 0C851h ; Загрузить информацию о файле
148+  8FDF              bios_fileGetSetAddr  = 0C854h ; Получить/установить адрес загрузки файла
149+  8FDF              bios_fileGetSetAttr  = 0C857h ; Получить/установить атрибуты файла
150+  8FDF              bios_fileNamePrepare = 0C85Ah ; Преобразовать имя файла во внутренний формат
151+  8FDF              bios_fileExec        = 0C85Dh ; Запустить файл
152+  8FDF              bios_installDriver   = 0C860h ; Установить драйвер накопителя
153+  8FDF              bios_diskDriver      = 0C863h ; Драйвер выбранного диска
154+  8FDF              bios_fileLoad2       = 0C866h ; Загрузить файл по адресу de
155+  8FDF              bios_printCharReal   = 0C869h ; Вывод символа на экран (только реальные символы)
156+  8FDF              bios_printDecWord    = 0C86Ch ; Вывод числа экран в десятичной форме
157+  8FDF              bios_setRAMDDriver   = 0C86Fh ; Установить драйвр рам-диска
158+  8FDF
159+  8FDF              ;-----------------------------------------------------------------------
160+  8FDF              ; Точки входа драйвера доступа к ДОЗУ
161+  8FDF              ;-----------------------------------------------------------------------
162+  8FDF
163+  8FDF              bios_RAMDRead  = 0FFC0h ; чтение из ДОЗУ
164+  8FDF              bios_RAMDWrite = 0FFD0h ; запись в  ДОЗУ
165+  8FDF
166+  8FDF              ;-----------------------------------------------------------------------
167+  8FDF              ; Адрес таблицы переходов драйвера магнитофона
168+  8FDF              ;-----------------------------------------------------------------------
169+  8FDF
170+  8FDF              TAPE_DRIVER_JUMPS = bios_tapeReadOld    ; размещается на месте бывшей п/п чтения байта
171+  8FDF
172+  8FDF              ;-----------------------------------------------------------------------
173+  8FDF              ; Порты устройств ПК "Специалист-MX2"
174+  8FDF              ;-----------------------------------------------------------------------
175+  8FDF
176+  8FDF              IO_KEYB_A       =  0FFE0h   ; ВВ55 клавиатуры
177+  8FDF              IO_KEYB_B       =  0FFE1h
178+  8FDF              IO_KEYB_C       =  0FFE2h
179+  8FDF              IO_KEYB_MODE    =  0FFE3h
180+  8FDF              IO_PROG_A       =  0FFE4h   ; ВВ55 программатора/флеш диска
181+  8FDF              IO_PROG_B       =  0FFE5h
182+  8FDF              IO_PROG_C       =  0FFE6h
183+  8FDF              IO_PROG_MODE    =  0FFE7h
184+  8FDF              IO_FDD_CMD      =  0FFE8h   ; контроллер дисковода ВГ93
185+  8FDF              IO_FDD_TRACK    =  0FFE9h
186+  8FDF              IO_FDD_SECTOR   =  0FFEAh
187+  8FDF              IO_FDD_DATA     =  0FFEBh
188+  8FDF              IO_TIMER_CH0    =  0FFECh   ; таймер ВИ53
189+  8FDF              IO_TIMER_CH1    =  0FFEDh
190+  8FDF              IO_TIMER_CH2    =  0FFEEh
191+  8FDF              IO_TIMER_MODE   =  0FFEFh
192+  8FDF              IO_FDD_REQ      =  0FFF0h   ; контроллер дисковода
193+  8FDF              IO_FDD_MOTOR    =  0FFF1h
194+  8FDF              IO_FDD_SIDE     =  0FFF2h
195+  8FDF              IO_FDD_DRIVE    =  0FFF3h
196+  8FDF              IO_COLOR        =  0FFF8h   ; регистр цвета
197+  8FDF              IO_PAGE_RAM     =  0FFFCh   ; порт включения основного ОЗУ
198+  8FDF              IO_PAGE_RAMD    =  0FFFDh   ; порт включения ОЗУ RAM-дисков
199+  8FDF              IO_PAGE_ROM     =  0FFFEh   ; порт включения ПЗУ
200+  8FDF              IO_PAGE_STD     =  0FFFFh   ; порт включения STD режима
201+  8FDF
202+  8FDF              ;-----------------------------------------------------------------------
203+  8FDF              ; Структура файловой системы
204+  8FDF              ;-----------------------------------------------------------------------
205+  8FDF
206+  8FDF              ; Структура каталога
207+  8FDF
208+  8FDF                  IF FAT16
209+  8FDF
210+  8FDF              DIR_DESCR_SIZE  = 32    ; Размер дескриптора файла в каталоге
211+  8FDF              DIR_MAX_FILES   = 24    ; Максимум файлов в каталоге
212+  8FDF              DIR_NAME_LENGTH = 8     ; Длина имени файла
213+  8FDF
214+  8FDF              ;-----------------------------------------------------------------------
215+  8FDF              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
216+  8FDF              ;-----------------------------------------------------------------------
217+  8FDF
218+  8FDF                  STRUCT FILE_DESCRIPTOR  ; 32 байта
219+  8FDF ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 8 байт  - имя файла
220+  8FDF ~            ext             BLOCK   3                   ; смещение 08h, 3 байта - расширение имени файла
221+  8FDF ~            attrib          BLOCK   1                   ; смещение 0Bh, 1 байт  - атрибуты файла
222+  8FDF ~            checkSum        BLOCK   1  ; ntRes          ; смещение 0Ch, 1 байт  - контрольная сумма (!!! временный костыль, в FAT32 это ntRes - используются в Windows NT !!!)
223+  8FDF ~            ctrTimeTenth    BLOCK   1                   ; смещение 0Dh, 1 байт  - (только FAT32) время создания файла, десятки миллисекунд (0-199)
224+  8FDF ~            ctrTime         BLOCK   2                   ; смещение 0Eh, 2 байта - (только FAT32) время создания файла, секунды*2 (0-43200)
225+  8FDF ~            ctrDate         BLOCK   2                   ; смещение 10h, 2 байта - (только FAT32) дата  создания файла
226+  8FDF ~            loadAddress     BLOCK   2  ; accDate        ; смещение 12h, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый (!!! временный костыль, в FAT32 это accDate - дата доступа к файлу !!!)
227+  8FDF ~            firstClusterHi  BLOCK   2                   ; смещение 14h, 2 байта - номер первого кластера в FAT, старшее слово
228+  8FDF ~            wrtTime         BLOCK   2                   ; смещение 16h, 2 байта - время модификации файла, секунды*2 (0-43200)
229+  8FDF ~            wrtDate         BLOCK   2                   ; смещение 18h, 2 байта - дата  модификации файла
230+  8FDF ~            firstCluster    BLOCK   2                   ; смещение 1Ah, 2 байта - номер первого кластера в FAT, младшее слово
231+  8FDF ~            size            BLOCK   4                   ; смещение 1Ch, 4 байта - размер файла в байтах
232+  8FDF                  ENDS
233+  8FDF
234+  8FDF              ;-----------------------------------------------------------------------
235+  8FDF              ; Десткриптор файла (одна запись в каталоге) FAT12/16/32
236+  8FDF              ;-----------------------------------------------------------------------
237+  8FDF
238+  8FDF                  ELSE
239+  8FDF ~
240+  8FDF ~            DIR_DESCR_SIZE  = 16    ; Размер дескриптора файла в каталоге
241+  8FDF ~            DIR_MAX_FILES   = 48    ; Максимум файлов в каталоге
242+  8FDF ~            DIR_NAME_LENGTH = 6     ; Длина имени файла
243+  8FDF ~
244+  8FDF ~            ;-----------------------------------------------------------------------
245+  8FDF ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
246+  8FDF ~            ;-----------------------------------------------------------------------
247+  8FDF ~
248+  8FDF ~                STRUCT FILE_DESCRIPTOR  ; 16 байт
249+  8FDF ~            name            BLOCK   DIR_NAME_LENGTH     ; смещение 00h, 6 байт  - имя файла
250+  8FDF ~            ext             BLOCK   3                   ; смещение 06h, 3 байта - расширение имени файла
251+  8FDF ~            attrib          BLOCK   1                   ; смещение 09h, 1 байт  - атрибуты файла: 00h - обычный файл, 01h - системный файл
252+  8FDF ~            loadAddress     BLOCK   2                   ; смещение 0Ah, 2 байта - начальный адрес загрузки в ОЗУ, он же и стартовый
253+  8FDF ~            size            BLOCK   2                   ; смещение 0Ch, 2 байта - размер файла в байтах - 1
254+  8FDF ~            checkSum        BLOCK   1                   ; смещение 0Eh, 1 байт  - контрольная сумма
255+  8FDF ~            firstCluster    BLOCK   1                   ; смещение 0Fh, 1 байт  - номер первого кластера в FAT
256+  8FDF ~                ENDS
257+  8FDF ~
258+  8FDF ~            ;-----------------------------------------------------------------------
259+  8FDF ~            ; Десткриптор файла (одна запись в каталоге) MXOS FAT8
260+  8FDF ~            ;-----------------------------------------------------------------------
261+  8FDF ~
262+  8FDF                  ENDIF
263+  8FDF
264+  8FDF              ;-----------------------------------------------------------------------
265+  8FDF              ; Всякие полезности
266+  8FDF              ;-----------------------------------------------------------------------
267+  8FDF
268+  8FDF              ; Макрос для заполнения памяти от текущего адреса до указанного
269+  8FDF                  MACRO ORG_PAD adr
270+  8FDF ~                     ; add padding + display warning
271+  8FDF ~                     IF $ > adr
272+  8FDF ~                       ; no padding
273+  8FDF ~                       ASSERT 0
274+  8FDF ~                       DISPLAY /l, "Error! ORG_PAD failed! ", $, " is more than ", adr
275+  8FDF ~                     ELSE
276+  8FDF ~                       ; add padding
277+  8FDF ~                       BLOCK adr-$
278+  8FDF ~                     ENDIF
279+  8FDF ~                     ORG adr
280+  8FDF                  ENDM
281+  8FDF
282+  8FDF              ; Макросы для проверки текущего адреса
283+  8FDF                  MACRO ASSERT_EQUAL adr
284+  8FDF ~                     IF $ != adr
285+  8FDF ~                       ASSERT 0
286+  8FDF ~                       DISPLAY /l, "Error! Entry point has been shifted (", $, " != ", adr, ")"
287+  8FDF ~                     ENDIF
288+  8FDF                  ENDM
289+  8FDF
290+  8FDF                  MACRO ASSERT_DONT_FIT adr
291+  8FDF ~                     IF $ > adr
292+  8FDF ~                       ASSERT 0
293+  8FDF ~                       DISPLAY /l, "Error! Image did not fit (", $, " > ", adr, ")"
294+  8FDF ~                     ENDIF
295+  8FDF                  ENDM
296+  8FDF
297+  8FDF              ;-----------------------------------------------------------------------
298+  8FDF              ; Конец
299+  8FDF              ;-----------------------------------------------------------------------
300+  8FDF
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\flash\../include/mxos.inc
 16   8FDF
 17   8FDF              ; Команды для дрыгания ножками ВВ55
 18   8FDF              LATCH_0  =  0Ah ; пин защёлки ИР22 = 0
 19   8FDF              LATCH_1  =  0Bh ; пин защёлки ИР22 = 1
 20   8FDF              WRITE_0  =  0Ch ; пин записи = 0
 21   8FDF              WRITE_1  =  0Dh ; пин записи = 1
 22   8FDF              READ_0   =  0Eh ; пин чтения = 0
 23   8FDF              READ_1   =  0Fh ; пин чтения = 1
 24   8FDF
 25   8FDF              ; Маски управляющих пинов ВВ55
 26   8FDF              MASK_STADBY  =  0C0h ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
 27   8FDF              MASK_READ    =  040h ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 0
 28   8FDF
 29   8FDF              ; Накопитель, куда назначается драйвер
 30   8FDF              DRIVE  =  7 ; "H"
 31   8FDF
 32   8FDF              ; Схема флеш-диска:
 33   8FDF              ; Порт A - данные
 34   8FDF              ; Порт B - адрес [A0-A7] или [A8-A15]
 35   8FDF              ; Порт C0...C4 - адрес [A17-A20]
 36   8FDF              ; Порт С5 - строб защёлки адреса [A8-A15] в ИР22 (лог. 1)
 37   8FDF              ; Порт С6 - строб записи в  ПЗУ (лог. 0)
 38   8FDF              ; Порт С7 - строб чтения из ПЗУ (лог. 0)
 39   8FDF
 40   8FDF              ;----------------------------------------------------------------------------
 41   8FDF
 42   8FDF                  ORG     0FA00h
 43   FA00
 44   FA00                  ; Установить драйвер для накопителя 7 ("H")
 45   FA00 3E 07            ld      a, DRIVE
 46   FA02 21 0F FA         ld      hl, Driver
 47   FA05 C3 60 C8         jp      bios_installDriver
 48   FA08
 49   FA08                  ; Установить накопитель 7 ("H")
 50   FA08 1E 01            ld      e, 1 ; функция 1 - установить накопитель
 51   FA0A 3E 07            ld      a, DRIVE
 52   FA0C C3 42 C8         jp      bios_fileGetSetDrive
 53   FA0F
 54   FA0F              Driver:
 55   FA0F E5               push    hl
 56   FA10 D5               push    de
 57   FA11 C5               push    bc
 58   FA12
 59   FA12 7B               ld      a, e   ; номер функции
 60   FA13 FE 01            cp      1
 61   FA15 CA 51 FA         jp z,   FuncWrite
 62   FA18 FE 02            cp      2
 63   FA1A CA 2D FA         jp z,   FuncRead
 64   FA1D FE 03            cp      3
 65   FA1F CA B8 FA         jp z,   FuncGetSize
 66   FA22
 67   FA22              Exit:
 68   FA22 F5               push    af
 69   FA23 3E C0            ld      a, MASK_STADBY    ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
 70   FA25 32 E6 FF         ld      (IO_PROG_C), a
 71   FA28 F1               pop     af
 72   FA29 C1               pop     bc
 73   FA2A D1               pop     de
 74   FA2B E1               pop     hl
 75   FA2C C9               ret
 76   FA2D
 77   FA2D              ;----------------------------------------------------------------------------
 78   FA2D              ; Чтение кластера
 79   FA2D              ; вход:
 80   FA2D              ; d  - номер кластера
 81   FA2D              ; hl - адрес буфера в памяти
 82   FA2D
 83   FA2D              FuncRead:
 84   FA2D                  ; Настройка портов ВВ55
 85   FA2D 3E 90            ld      a, 90h          ; порт A - ввод, порты B и C - вывод
 86   FA2F 32 E7 FF         ld      (IO_PROG_MODE), a
 87   FA32
 88   FA32                  ; Запись номера 64к страницы и управляющих битов в порт C
 89   FA32 3A F9 8F         ld      a, (bios_vars.flashPage)    ; номер 64к страницы, макс 1Fh
 90   FA35 E6 1F            and     01Fh                ; на всякий случай
 91   FA37 F6 40            or      MASK_READ           ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 0
 92   FA39 32 E6 FF         ld      (IO_PROG_C),a       ; записываем номер 64к страницы и управляющие биты
 93   FA3C
 94   FA3C CD BC FA         call    LatchHiAddr     ;    записываем старший байт адреса (номер кластера) в ИР22
 95   FA3F AF               xor     a
 96   FA40 5F               ld      e, a                ; начинаем с 0 адреса кластера
 97   FA41
 98   FA41              ReadLoop:
 99   FA41 7B               ld      a, e
100   FA42 32 E5 FF         ld      (IO_PROG_B), a      ; порт B = младший байт адреса в странице
101   FA45 3A E4 FF         ld      a, (IO_PROG_A)      ; читаем байт из порта A
102   FA48 77               ld      (hl), a             ; сохраняем в память
103   FA49 23               inc     hl
104   FA4A 1C               inc     e
105   FA4B C2 41 FA         jp nz,  ReadLoop
106   FA4E C3 22 FA         jp      Exit
107   FA51
108   FA51              ;----------------------------------------------------------------------------
109   FA51              ; Запись кластера
110   FA51              ; вход:
111   FA51              ; d  - номер кластера
112   FA51              ; hl - адрес буфера в памяти
113   FA51
114   FA51              FuncWrite:
115   FA51                  ; Настройка портов ВВ55
116   FA51 3E 80            ld      a, 80h          ; порты A, B и C - вывод
117   FA53 32 E7 FF         ld      (IO_PROG_MODE), a
118   FA56
119   FA56                  ; Определяем номер чипа на флеш-диске
120   FA56 3A F9 8F         ld      a,(bios_vars.flashPage) ; номер 64к страницы, макс 1Fh
121   FA59 E6 18            and     18h             ; обнуляем все биты кроме 3-го и 4-го
122   FA5B 47               ld      b, a            ; в B получаем номер чипа * 8 (0, 8, 16, 24)
123   FA5C
124   FA5C                  ; Отключение программной защиты от записи
125   FA5C CD 9D FA         call    DisableWriteProtection
126   FA5F
127   FA5F                  ; Запись номера 64к страницы и управляющих битов в порт C
128   FA5F 3A F9 8F         ld      a,(bios_vars.flashPage) ; номер 64к страницы, макс 1Fh
129   FA62 E6 1F            and     01FH            ; на всякий случай
130   FA64 F6 C0            or      MASK_STADBY     ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
131   FA66 32 E6 FF         ld      (IO_PROG_C),a   ; записываем номер 64к страницы и управляющие биты
132   FA69
133   FA69 CD BC FA         call    LatchHiAddr     ; записываем старший байт адреса (номер кластера) в ИР22
134   FA6C AF               xor     a
135   FA6D 5F               ld      e, a            ; начинаем с начала кластера (e = 0)
136   FA6E
137   FA6E              WriteLoop:
138   FA6E 7B               ld      a, e
139   FA6F 32 E5 FF         ld      (IO_PROG_B), a      ; порт B = младший байт адреса в странице
140   FA72 7E               ld      a, (hl)             ; читаем байт из памяти
141   FA73 32 E4 FF         ld      (IO_PROG_A), a      ; записываем в порт A
142   FA76 3E 0C            ld      a, WRITE_0
143   FA78 32 E7 FF         ld      (IO_PROG_MODE), a   ; устанавливаем пин записи (C6 = 0)
144   FA7B 3E 0D            ld      a, WRITE_1
145   FA7D 32 E7 FF         ld      (IO_PROG_MODE), a   ; снимаем пин записи (C6 = 1)
146   FA80 23               inc     hl
147   FA81 1C               inc     e
148   FA82 C2 6E FA         jp nz,  WriteLoop
149   FA85
150   FA85                  ; Ожидание окончания внутреннего цикла программирования флеш-памяти
151   FA85 2B               dec     hl          ; последний адрес в буфере
152   FA86 4E               ld      c, (hl)     ; читаем в C последний записанный байт из буфера
153   FA87 1D               dec      e          ; последний байт в кластере
154   FA88
155   FA88                  ; Настройка портов ВВ55
156   FA88 3E 90            ld   a, 90h        ; порт A - ввод, порты B и C - вывод
157   FA8A 32 E7 FF         ld  (IO_PROG_MODE), a
158   FA8D
159   FA8D                  ; Максимум итераций цикла ожидания: надо 20 мс,
160   FA8D                  ; 1 цикл = 197 тактов = 98.5 мкс,
161   FA8D                  ; 20 мс = 203 итераций
162   FA8D 2E CC            ld   l, 204
163   FA8F
164   FA8F                  ; Цикл ожидания
165   FA8F              Wait:
166   FA8F 2D               dec     l
167   FA90 CA 22 FA         jp z,   Exit
168   FA93
169   FA93 CD CB FA         call    ReDByteFromChip   ; читаем последний записанный байт из флеш памяти
170   FA96
171   FA96                  ; пока программирование не окончено, флеш память будет выдавать
172   FA96                  ; бит 7 последнего записанного байта в инверсном виде
173   FA96 B9               cp      c
174   FA97 C2 8F FA         jp nz,  Wait
175   FA9A
176   FA9A C3 22 FA         jp      Exit
177   FA9D
178   FA9D              ;    ; Задержка 840 циклов по 24 тактов = 10 мс
179   FA9D              ;    ld     h, 840
180   FA9D              ;Delay:
181   FA9D              ;    dec    h       ; 5 тактов
182   FA9D              ;    ld     a, h    ; 5 тактов
183   FA9D              ;    or     l       ; 4 такта
184   FA9D              ;    jp nz, Delay   ; 10 тактов
185   FA9D              ;    jp     Exit
186   FA9D
187   FA9D              ;----------------------------------------------------------------------------
188   FA9D              ; Отключение программной защиты от записи
189   FA9D              ; вход:
190   FA9D              ;  b - номер чипа * 8 (0, 8, 16, 24)
191   FA9D
192   FA9D              DisableWriteProtection:
193   FA9D                  ; Управляющие коды пишутся в нулевую 64к страницу чипа,
194   FA9D                  ; поэтому номер страницы менять не надо
195   FA9D D5               push    de
196   FA9E                  ; Записываем байт AAh по адресу 05555h в чип флеш-памяти
197   FA9E 3E AA            ld      a,  0AAh
198   FAA0 11 55 55         ld      de, 5555h
199   FAA3 CD DC FA         call    WriteByteToChip
200   FAA6                  ; Записываем байт 55h по адресу 02AAAh в чип флеш-памяти
201   FAA6 3E 55            ld      a,  55h
202   FAA8 11 AA 2A         ld      de, 2AAAh
203   FAAB CD DC FA         call    WriteByteToChip
204   FAAE                  ; Записываем байт A0h по адресу 05555h в чип флеш-памяти
205   FAAE 3E A0            ld      a,  0A0h
206   FAB0 11 55 55         ld      de, 5555h
207   FAB3 CD DC FA         call    WriteByteToChip
208   FAB6 D1               pop     de
209   FAB7 C9               ret
210   FAB8
211   FAB8              ;-----------------------------------------------------------------------------------
212   FAB8              ; Определение объема накопителя
213   FAB8              ; выход:
214   FAB8              ;  a - количество кластеров
215   FAB8
216   FAB8              FuncGetSize:
217   FAB8 AF               xor     a  ; Размер страницы флеш диска всегда 256 (= 0) кластеров
218   FAB9 C3 22 FA         jp      Exit
219   FABC
220   FABC              ;    XRA    a
221   FABC              ;    MOV    b, a ; счётчик занятых кластеров
222   FABC              ;    MOV    d, a ; читаем кластер 0 (FAT)
223   FABC              ;    MVI    e, 4 ; начиная с 4 байта
224   FABC              ;    call LatchHiAddr
225   FABC              ;Rep:
226   FABC              ;    MOV  a, e
227   FABC              ;    STA  IO_PROG_B    ; порт B = младший байт адреса в странице
228   FABC              ;    LDA  IO_PROG_A    ; читаем байт из порта A
229   FABC              ;    CPI  0FFh
230   FABC              ;    JZ   SectorIsFree
231   FABC              ;    INR  b    ; увеличить счетчик занятых кластеров
232   FABC              ;SectorIsFree:
233   FABC              ;    INR  e    ; следующий байт в кластере FAT
234   FABC              ;    JNZ  Rep  ; e обнулится при переходе через 0FFh
235   FABC              ;    JMP  Exit
236   FABC
237   FABC              ;----------------------------------------------------------------------------
238   FABC              ; Защёлкивание старшего байта адреса в ИР22 флеш-диска
239   FABC              ; вход:
240   FABC              ;   d - старший байт адреса (номер кластера)
241   FABC
242   FABC              LatchHiAddr:
243   FABC 3E 0B            ld      a, LATCH_1
244   FABE 32 E7 FF         ld      (IO_PROG_MODE), a   ; поднимаем защёлку ИР22 (C5 = 1)
245   FAC1 7A               ld      a, d
246   FAC2 32 E5 FF         ld      (IO_PROG_B), a      ; порт B = старший байт адреса (номер кластера)
247   FAC5 3E 0A            ld      a, LATCH_0
248   FAC7 32 E7 FF         ld      (IO_PROG_MODE), a   ; опускаем защёлку ИР22 (C5 = 0), защёлкивая старший байт адреса
249   FACA C9               ret
250   FACB
251   FACB              ;----------------------------------------------------------------------------
252   FACB              ; Чтеие байта из чипа флеш памяти
253   FACB              ; вход:
254   FACB              ;   de - адрес в 64к странице
255   FACB              ;   B - номер 64к страницы
256   FACB              ; выход:
257   FACB              ;   a - байт данных
258   FACB              ;   пин чтения остаётся активным (C7 = 0)
259   FACB
260   FACB              ReDByteFromChip:
261   FACB CD BC FA         call    LatchHiAddr     ; записываем старший байт адреса (номер кластера) в ИР22
262   FACE 7B               ld      a, e
263   FACF 32 E5 FF         ld      (IO_PROG_B), a  ; порт B = младший байт адреса
264   FAD2 78               ld      a, b
265   FAD3 F6 40            or      MASK_READ       ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 0
266   FAD5 32 E6 FF         ld      (IO_PROG_C), a  ; записываем номер 64к страницы и управляющие биты
267   FAD8 3A E4 FF         ld      a,(IO_PROG_A)   ; читаем байт из порта A
268   FADB C9               ret
269   FADC
270   FADC              ;----------------------------------------------------------------------------
271   FADC              ; Запись байта в чип флеш памяти
272   FADC              ; вход:
273   FADC              ;   de - адрес в 64к странице
274   FADC              ;   B - номер 64к страницы
275   FADC              ;   a - байт данных
276   FADC
277   FADC              WriteByteToChip:
278   FADC 32 E4 FF         ld      (IO_PROG_A), a      ; порт A = байт данных
279   FADF CD BC FA         call    LatchHiAddr         ; записываем старший байт адреса (номер кластера) в ИР22
280   FAE2 7B               ld      a, e
281   FAE3 32 E5 FF         ld      (IO_PROG_B), a      ; порт B = младший байт адреса
282   FAE6 78               ld      a, b
283   FAE7 F6 C0            or      MASK_STADBY         ; пин защёлки ИР22 = 0, пин записи = 1, пин чтения = 1
284   FAE9 32 E6 FF         ld      (IO_PROG_C), a      ; записываем номер 64к страницы и управляющие биты
285   FAEC 3E 0C            ld      a, WRITE_0
286   FAEE 32 E7 FF         ld      (IO_PROG_MODE), a   ; устанавливаем пин записи (C6 = 0)
287   FAF1 3E 0D            ld      a, WRITE_1
288   FAF3 32 E7 FF         ld      (IO_PROG_MODE), a   ; снимаем пин записи (C6 = 1)
289   FAF6 C9               ret
290   FAF7
291   FAF7              ;----------------------------------------------------------------------------
292   FAF7
293   FAF7                  END
# file closed: D:\Projects\Specialist\MySoft\MXOS-Z80\flash\Flash.asm
